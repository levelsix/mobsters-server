/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.GiftForTangoUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GiftForTangoUser extends TableImpl<GiftForTangoUserRecord> {

	private static final long serialVersionUID = -1780415698;

	/**
	 * The reference instance of <code>mobsters.gift_for_tango_user</code>
	 */
	public static final GiftForTangoUser GIFT_FOR_TANGO_USER = new GiftForTangoUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GiftForTangoUserRecord> getRecordType() {
		return GiftForTangoUserRecord.class;
	}

	/**
	 * The column <code>mobsters.gift_for_tango_user.gift_for_user_id</code>.
	 */
	public final TableField<GiftForTangoUserRecord, String> GIFT_FOR_USER_ID = createField("gift_for_user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.gift_for_tango_user.gifter_user_id</code>.
	 */
	public final TableField<GiftForTangoUserRecord, String> GIFTER_USER_ID = createField("gifter_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

	/**
	 * The column <code>mobsters.gift_for_tango_user.gifter_tango_user_id</code>.
	 */
	public final TableField<GiftForTangoUserRecord, String> GIFTER_TANGO_USER_ID = createField("gifter_tango_user_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>mobsters.gift_for_tango_user</code> table reference
	 */
	public GiftForTangoUser() {
		this("gift_for_tango_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.gift_for_tango_user</code> table reference
	 */
	public GiftForTangoUser(String alias) {
		this(alias, GIFT_FOR_TANGO_USER);
	}

	private GiftForTangoUser(String alias, Table<GiftForTangoUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private GiftForTangoUser(String alias, Table<GiftForTangoUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<GiftForTangoUserRecord> getPrimaryKey() {
		return Keys.KEY_GIFT_FOR_TANGO_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<GiftForTangoUserRecord>> getKeys() {
		return Arrays.<UniqueKey<GiftForTangoUserRecord>>asList(Keys.KEY_GIFT_FOR_TANGO_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftForTangoUser as(String alias) {
		return new GiftForTangoUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public GiftForTangoUser rename(String name) {
		return new GiftForTangoUser(name, null);
	}
}
