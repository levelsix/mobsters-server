/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventLeaderboard;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventLeaderboard;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_event_leaderboard", schema = "mobsters")
public class MiniEventLeaderboardRecord extends TableRecordImpl<MiniEventLeaderboardRecord> implements Record6<String, Integer, String, Integer, String, Long>, IMiniEventLeaderboard {

	private static final long serialVersionUID = -1926022591;

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.user_id</code>.
	 */
	@Override
	public MiniEventLeaderboardRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.mini_event_timetable_id</code>.
	 */
	@Override
	public MiniEventLeaderboardRecord setMiniEventTimetableId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.mini_event_timetable_id</code>.
	 */
	@Column(name = "mini_event_timetable_id", precision = 10)
	@Override
	public Integer getMiniEventTimetableId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.name</code>.
	 */
	@Override
	public MiniEventLeaderboardRecord setName(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.name</code>.
	 */
	@Column(name = "name", length = 400)
	@Size(max = 400)
	@Override
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.avatar_id</code>.
	 */
	@Override
	public MiniEventLeaderboardRecord setAvatarId(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.avatar_id</code>.
	 */
	@Column(name = "avatar_id", precision = 10)
	@Override
	public Integer getAvatarId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.clan_tag</code>.
	 */
	@Override
	public MiniEventLeaderboardRecord setClanTag(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.clan_tag</code>.
	 */
	@Column(name = "clan_tag", length = 127)
	@Size(max = 127)
	@Override
	public String getClanTag() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.pts_for_mini_event</code>.
	 */
	@Override
	public MiniEventLeaderboardRecord setPtsForMiniEvent(Long value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.pts_for_mini_event</code>.
	 */
	@Column(name = "pts_for_mini_event", nullable = false, precision = 19)
	@NotNull
	@Override
	public Long getPtsForMiniEvent() {
		return (Long) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, Integer, String, Integer, String, Long> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, Integer, String, Integer, String, Long> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MiniEventLeaderboard.MINI_EVENT_LEADERBOARD.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return MiniEventLeaderboard.MINI_EVENT_LEADERBOARD.MINI_EVENT_TIMETABLE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return MiniEventLeaderboard.MINI_EVENT_LEADERBOARD.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return MiniEventLeaderboard.MINI_EVENT_LEADERBOARD.AVATAR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return MiniEventLeaderboard.MINI_EVENT_LEADERBOARD.CLAN_TAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field6() {
		return MiniEventLeaderboard.MINI_EVENT_LEADERBOARD.PTS_FOR_MINI_EVENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getMiniEventTimetableId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAvatarId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getClanTag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value6() {
		return getPtsForMiniEvent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord value2(Integer value) {
		setMiniEventTimetableId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord value4(Integer value) {
		setAvatarId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord value5(String value) {
		setClanTag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord value6(Long value) {
		setPtsForMiniEvent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboardRecord values(String value1, Integer value2, String value3, Integer value4, String value5, Long value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniEventLeaderboard from) {
		setUserId(from.getUserId());
		setMiniEventTimetableId(from.getMiniEventTimetableId());
		setName(from.getName());
		setAvatarId(from.getAvatarId());
		setClanTag(from.getClanTag());
		setPtsForMiniEvent(from.getPtsForMiniEvent());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniEventLeaderboard> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MiniEventLeaderboardRecord
	 */
	public MiniEventLeaderboardRecord() {
		super(MiniEventLeaderboard.MINI_EVENT_LEADERBOARD);
	}

	/**
	 * Create a detached, initialised MiniEventLeaderboardRecord
	 */
	public MiniEventLeaderboardRecord(String userId, Integer miniEventTimetableId, String name, Integer avatarId, String clanTag, Long ptsForMiniEvent) {
		super(MiniEventLeaderboard.MINI_EVENT_LEADERBOARD);

		setValue(0, userId);
		setValue(1, miniEventTimetableId);
		setValue(2, name);
		setValue(3, avatarId);
		setValue(4, clanTag);
		setValue(5, ptsForMiniEvent);
	}
}
