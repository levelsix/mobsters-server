/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.MiniJobConfigPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobConfigRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiniJobConfigDao extends DAOImpl<MiniJobConfigRecord, MiniJobConfigPojo, Integer> {

	/**
	 * Create a new MiniJobConfigDao without any configuration
	 */
	public MiniJobConfigDao() {
		super(MiniJobConfig.MINI_JOB_CONFIG, MiniJobConfigPojo.class);
	}

	/**
	 * Create a new MiniJobConfigDao with an attached configuration
	 */
	public MiniJobConfigDao(Configuration configuration) {
		super(MiniJobConfig.MINI_JOB_CONFIG, MiniJobConfigPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(MiniJobConfigPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchById(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public MiniJobConfigPojo fetchOneById(Integer value) {
		return fetchOne(MiniJobConfig.MINI_JOB_CONFIG.ID, value);
	}

	/**
	 * Fetch records that have <code>required_struct_id IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByRequiredStructId(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.REQUIRED_STRUCT_ID, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByName(String... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.NAME, values);
	}

	/**
	 * Fetch records that have <code>cash_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByCashReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.CASH_REWARD, values);
	}

	/**
	 * Fetch records that have <code>oil_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByOilReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.OIL_REWARD, values);
	}

	/**
	 * Fetch records that have <code>gem_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByGemReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.GEM_REWARD, values);
	}

	/**
	 * Fetch records that have <code>monster_id_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByMonsterIdReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.MONSTER_ID_REWARD, values);
	}

	/**
	 * Fetch records that have <code>item_id_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByItemIdReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.ITEM_ID_REWARD, values);
	}

	/**
	 * Fetch records that have <code>item_reward_quantity IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByItemRewardQuantity(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.ITEM_REWARD_QUANTITY, values);
	}

	/**
	 * Fetch records that have <code>second_item_id_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchBySecondItemIdReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.SECOND_ITEM_ID_REWARD, values);
	}

	/**
	 * Fetch records that have <code>second_item_reward_quantity IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchBySecondItemRewardQuantity(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.SECOND_ITEM_REWARD_QUANTITY, values);
	}

	/**
	 * Fetch records that have <code>quality IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByQuality(String... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.QUALITY, values);
	}

	/**
	 * Fetch records that have <code>max_num_monsters_allowed IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByMaxNumMonstersAllowed(Byte... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.MAX_NUM_MONSTERS_ALLOWED, values);
	}

	/**
	 * Fetch records that have <code>chance_to_appear IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByChanceToAppear(Double... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.CHANCE_TO_APPEAR, values);
	}

	/**
	 * Fetch records that have <code>hp_required IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByHpRequired(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.HP_REQUIRED, values);
	}

	/**
	 * Fetch records that have <code>atk_required IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByAtkRequired(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.ATK_REQUIRED, values);
	}

	/**
	 * Fetch records that have <code>min_dmg IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByMinDmg(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.MIN_DMG, values);
	}

	/**
	 * Fetch records that have <code>max_dmg IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByMaxDmg(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.MAX_DMG, values);
	}

	/**
	 * Fetch records that have <code>duration_min_minutes IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByDurationMinMinutes(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.DURATION_MIN_MINUTES, values);
	}

	/**
	 * Fetch records that have <code>duration_max_minutes IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByDurationMaxMinutes(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.DURATION_MAX_MINUTES, values);
	}

	/**
	 * Fetch records that have <code>is_valid IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByIsValid(Boolean... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.IS_VALID, values);
	}

	/**
	 * Fetch records that have <code>exp_reward IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByExpReward(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.EXP_REWARD, values);
	}

	/**
	 * Fetch records that have <code>reward_id_one IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByRewardIdOne(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.REWARD_ID_ONE, values);
	}

	/**
	 * Fetch records that have <code>reward_id_two IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByRewardIdTwo(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.REWARD_ID_TWO, values);
	}

	/**
	 * Fetch records that have <code>reward_id_three IN (values)</code>
	 */
	public List<MiniJobConfigPojo> fetchByRewardIdThree(Integer... values) {
		return fetch(MiniJobConfig.MINI_JOB_CONFIG.REWARD_ID_THREE, values);
	}
}
