/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventForPlayerLvlConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiniEventForPlayerLvlConfig extends TableImpl<MiniEventForPlayerLvlConfigRecord> {

	private static final long serialVersionUID = 306978609;

	/**
	 * The reference instance of <code>mobsters.mini_event_for_player_lvl_config</code>
	 */
	public static final MiniEventForPlayerLvlConfig MINI_EVENT_FOR_PLAYER_LVL_CONFIG = new MiniEventForPlayerLvlConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MiniEventForPlayerLvlConfigRecord> getRecordType() {
		return MiniEventForPlayerLvlConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.id</code>.
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.mini_event_id</code>. refers to id in mini_event table
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> MINI_EVENT_ID = createField("mini_event_id", org.jooq.impl.SQLDataType.INTEGER, this, "refers to id in mini_event table");

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.player_lvl_min</code>. inclusive
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> PLAYER_LVL_MIN = createField("player_lvl_min", org.jooq.impl.SQLDataType.INTEGER, this, "inclusive");

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.player_lvl_max</code>. inclusive
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> PLAYER_LVL_MAX = createField("player_lvl_max", org.jooq.impl.SQLDataType.INTEGER, this, "inclusive");

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.tier_one_min_pts</code>. min points to be considered in tier one, inclusive
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> TIER_ONE_MIN_PTS = createField("tier_one_min_pts", org.jooq.impl.SQLDataType.INTEGER, this, "min points to be considered in tier one, inclusive");

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.tier_two_min_pts</code>. min points to be considered in tier two, inclusive
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> TIER_TWO_MIN_PTS = createField("tier_two_min_pts", org.jooq.impl.SQLDataType.INTEGER, this, "min points to be considered in tier two, inclusive");

	/**
	 * The column <code>mobsters.mini_event_for_player_lvl_config.tier_three_min_pts</code>. min points to be considered in tier three, inclusive
	 */
	public final TableField<MiniEventForPlayerLvlConfigRecord, Integer> TIER_THREE_MIN_PTS = createField("tier_three_min_pts", org.jooq.impl.SQLDataType.INTEGER, this, "min points to be considered in tier three, inclusive");

	/**
	 * Create a <code>mobsters.mini_event_for_player_lvl_config</code> table reference
	 */
	public MiniEventForPlayerLvlConfig() {
		this("mini_event_for_player_lvl_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.mini_event_for_player_lvl_config</code> table reference
	 */
	public MiniEventForPlayerLvlConfig(String alias) {
		this(alias, MINI_EVENT_FOR_PLAYER_LVL_CONFIG);
	}

	private MiniEventForPlayerLvlConfig(String alias, Table<MiniEventForPlayerLvlConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private MiniEventForPlayerLvlConfig(String alias, Table<MiniEventForPlayerLvlConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MiniEventForPlayerLvlConfigRecord> getPrimaryKey() {
		return Keys.KEY_MINI_EVENT_FOR_PLAYER_LVL_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MiniEventForPlayerLvlConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<MiniEventForPlayerLvlConfigRecord>>asList(Keys.KEY_MINI_EVENT_FOR_PLAYER_LVL_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForPlayerLvlConfig as(String alias) {
		return new MiniEventForPlayerLvlConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MiniEventForPlayerLvlConfig rename(String name) {
		return new MiniEventForPlayerLvlConfig(name, null);
	}
}
