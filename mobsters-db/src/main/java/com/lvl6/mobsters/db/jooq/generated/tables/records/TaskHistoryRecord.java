/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskHistory;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_history", schema = "mobsters")
public class TaskHistoryRecord extends UpdatableRecordImpl<TaskHistoryRecord> implements Record12<String, String, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp, Boolean, Boolean, Integer>, ITaskHistory {

	private static final long serialVersionUID = -1244015360;

	/**
	 * Setter for <code>mobsters.task_history.task_for_user_id</code>.
	 */
	@Override
	public TaskHistoryRecord setTaskForUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.task_for_user_id</code>.
	 */
	@Id
	@Column(name = "task_for_user_id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getTaskForUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.task_history.user_id</code>.
	 */
	@Override
	public TaskHistoryRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.user_id</code>.
	 */
	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.task_history.task_id</code>.
	 */
	@Override
	public TaskHistoryRecord setTaskId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.task_id</code>.
	 */
	@Column(name = "task_id", precision = 10)
	@Override
	public Integer getTaskId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.task_history.exp_gained</code>.
	 */
	@Override
	public TaskHistoryRecord setExpGained(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.exp_gained</code>.
	 */
	@Column(name = "exp_gained", precision = 10)
	@Override
	public Integer getExpGained() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.task_history.cash_gained</code>.
	 */
	@Override
	public TaskHistoryRecord setCashGained(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.cash_gained</code>.
	 */
	@Column(name = "cash_gained", precision = 10)
	@Override
	public Integer getCashGained() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.task_history.oil_gained</code>.
	 */
	@Override
	public TaskHistoryRecord setOilGained(Integer value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.oil_gained</code>.
	 */
	@Column(name = "oil_gained", precision = 10)
	@Override
	public Integer getOilGained() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.task_history.num_revives</code>.
	 */
	@Override
	public TaskHistoryRecord setNumRevives(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.num_revives</code>.
	 */
	@Column(name = "num_revives", precision = 10)
	@Override
	public Integer getNumRevives() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.task_history.start_time</code>.
	 */
	@Override
	public TaskHistoryRecord setStartTime(Timestamp value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.start_time</code>.
	 */
	@Column(name = "start_time")
	@Override
	public Timestamp getStartTime() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.task_history.end_time</code>.
	 */
	@Override
	public TaskHistoryRecord setEndTime(Timestamp value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.end_time</code>.
	 */
	@Column(name = "end_time")
	@Override
	public Timestamp getEndTime() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.task_history.user_won</code>.
	 */
	@Override
	public TaskHistoryRecord setUserWon(Boolean value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.user_won</code>.
	 */
	@Column(name = "user_won", precision = 1)
	@Override
	public Boolean getUserWon() {
		return (Boolean) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.task_history.cancelled</code>.
	 */
	@Override
	public TaskHistoryRecord setCancelled(Boolean value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.cancelled</code>.
	 */
	@Column(name = "cancelled", precision = 1)
	@Override
	public Boolean getCancelled() {
		return (Boolean) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.task_history.task_stage_id</code>.
	 */
	@Override
	public TaskHistoryRecord setTaskStageId(Integer value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_history.task_stage_id</code>.
	 */
	@Column(name = "task_stage_id", precision = 10)
	@Override
	public Integer getTaskStageId() {
		return (Integer) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<String, String, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp, Boolean, Boolean, Integer> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<String, String, Integer, Integer, Integer, Integer, Integer, Timestamp, Timestamp, Boolean, Boolean, Integer> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return TaskHistory.TASK_HISTORY.TASK_FOR_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return TaskHistory.TASK_HISTORY.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return TaskHistory.TASK_HISTORY.TASK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TaskHistory.TASK_HISTORY.EXP_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return TaskHistory.TASK_HISTORY.CASH_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return TaskHistory.TASK_HISTORY.OIL_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return TaskHistory.TASK_HISTORY.NUM_REVIVES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return TaskHistory.TASK_HISTORY.START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return TaskHistory.TASK_HISTORY.END_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field10() {
		return TaskHistory.TASK_HISTORY.USER_WON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field11() {
		return TaskHistory.TASK_HISTORY.CANCELLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field12() {
		return TaskHistory.TASK_HISTORY.TASK_STAGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getTaskForUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getTaskId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getExpGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getCashGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getOilGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getNumRevives();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getEndTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value10() {
		return getUserWon();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value11() {
		return getCancelled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value12() {
		return getTaskStageId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value1(String value) {
		setTaskForUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value3(Integer value) {
		setTaskId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value4(Integer value) {
		setExpGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value5(Integer value) {
		setCashGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value6(Integer value) {
		setOilGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value7(Integer value) {
		setNumRevives(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value8(Timestamp value) {
		setStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value9(Timestamp value) {
		setEndTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value10(Boolean value) {
		setUserWon(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value11(Boolean value) {
		setCancelled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord value12(Integer value) {
		setTaskStageId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistoryRecord values(String value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Timestamp value8, Timestamp value9, Boolean value10, Boolean value11, Integer value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITaskHistory from) {
		setTaskForUserId(from.getTaskForUserId());
		setUserId(from.getUserId());
		setTaskId(from.getTaskId());
		setExpGained(from.getExpGained());
		setCashGained(from.getCashGained());
		setOilGained(from.getOilGained());
		setNumRevives(from.getNumRevives());
		setStartTime(from.getStartTime());
		setEndTime(from.getEndTime());
		setUserWon(from.getUserWon());
		setCancelled(from.getCancelled());
		setTaskStageId(from.getTaskStageId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITaskHistory> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TaskHistoryRecord
	 */
	public TaskHistoryRecord() {
		super(TaskHistory.TASK_HISTORY);
	}

	/**
	 * Create a detached, initialised TaskHistoryRecord
	 */
	public TaskHistoryRecord(String taskForUserId, String userId, Integer taskId, Integer expGained, Integer cashGained, Integer oilGained, Integer numRevives, Timestamp startTime, Timestamp endTime, Boolean userWon, Boolean cancelled, Integer taskStageId) {
		super(TaskHistory.TASK_HISTORY);

		setValue(0, taskForUserId);
		setValue(1, userId);
		setValue(2, taskId);
		setValue(3, expGained);
		setValue(4, cashGained);
		setValue(5, oilGained);
		setValue(6, numRevives);
		setValue(7, startTime);
		setValue(8, endTime);
		setValue(9, userWon);
		setValue(10, cancelled);
		setValue(11, taskStageId);
	}
}
