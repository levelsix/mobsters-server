/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.GiftForTangoUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IGiftForTangoUser;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "gift_for_tango_user", schema = "mobsters")
public class GiftForTangoUserRecord extends UpdatableRecordImpl<GiftForTangoUserRecord> implements Record2<String, String>, IGiftForTangoUser {

	private static final long serialVersionUID = 591169377;

	/**
	 * Setter for <code>mobsters.gift_for_tango_user.gift_for_user_id</code>.
	 */
	@Override
	public GiftForTangoUserRecord setGiftForUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.gift_for_tango_user.gift_for_user_id</code>.
	 */
	@Id
	@Column(name = "gift_for_user_id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getGiftForUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.gift_for_tango_user.gifter_tango_name</code>.
	 */
	@Override
	public GiftForTangoUserRecord setGifterTangoName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.gift_for_tango_user.gifter_tango_name</code>.
	 */
	@Column(name = "gifter_tango_name", length = 100)
	@Size(max = 100)
	@Override
	public String getGifterTangoName() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return GiftForTangoUser.GIFT_FOR_TANGO_USER.GIFT_FOR_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return GiftForTangoUser.GIFT_FOR_TANGO_USER.GIFTER_TANGO_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getGiftForUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getGifterTangoName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftForTangoUserRecord value1(String value) {
		setGiftForUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftForTangoUserRecord value2(String value) {
		setGifterTangoName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftForTangoUserRecord values(String value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IGiftForTangoUser from) {
		setGiftForUserId(from.getGiftForUserId());
		setGifterTangoName(from.getGifterTangoName());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IGiftForTangoUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached GiftForTangoUserRecord
	 */
	public GiftForTangoUserRecord() {
		super(GiftForTangoUser.GIFT_FOR_TANGO_USER);
	}

	/**
	 * Create a detached, initialised GiftForTangoUserRecord
	 */
	public GiftForTangoUserRecord(String giftForUserId, String gifterTangoName) {
		super(GiftForTangoUser.GIFT_FOR_TANGO_USER);

		setValue(0, giftForUserId);
		setValue(1, gifterTangoName);
	}
}
