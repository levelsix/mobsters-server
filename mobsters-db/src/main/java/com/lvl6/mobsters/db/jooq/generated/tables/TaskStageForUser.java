/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageForUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskStageForUser extends TableImpl<TaskStageForUserRecord> {

	private static final long serialVersionUID = -1948910904;

	/**
	 * The reference instance of <code>mobsters.task_stage_for_user</code>
	 */
	public static final TaskStageForUser TASK_STAGE_FOR_USER = new TaskStageForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskStageForUserRecord> getRecordType() {
		return TaskStageForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.task_stage_for_user.id</code>.
	 */
	public final TableField<TaskStageForUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_stage_for_user.task_for_user_id</code>. primary key in task table
	 */
	public final TableField<TaskStageForUserRecord, String> TASK_FOR_USER_ID = createField("task_for_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "primary key in task table");

	/**
	 * The column <code>mobsters.task_stage_for_user.stage_num</code>. nth stage of a task
	 */
	public final TableField<TaskStageForUserRecord, Integer> STAGE_NUM = createField("stage_num", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "nth stage of a task");

	/**
	 * The column <code>mobsters.task_stage_for_user.task_stage_monster_id</code>. primary key in task stage monster table, not monster id, which would be task stage monster monster id

	 */
	public final TableField<TaskStageForUserRecord, Integer> TASK_STAGE_MONSTER_ID = createField("task_stage_monster_id", org.jooq.impl.SQLDataType.INTEGER, this, "primary key in task stage monster table, not monster id, which would be task stage monster monster id\n");

	/**
	 * The column <code>mobsters.task_stage_for_user.monster_type</code>.
	 */
	public final TableField<TaskStageForUserRecord, String> MONSTER_TYPE = createField("monster_type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.task_stage_for_user.exp_gained</code>.
	 */
	public final TableField<TaskStageForUserRecord, Integer> EXP_GAINED = createField("exp_gained", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_for_user.cash_gained</code>.
	 */
	public final TableField<TaskStageForUserRecord, Integer> CASH_GAINED = createField("cash_gained", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_for_user.oil_gained</code>.
	 */
	public final TableField<TaskStageForUserRecord, Integer> OIL_GAINED = createField("oil_gained", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_stage_for_user.monster_piece_dropped</code>.
	 */
	public final TableField<TaskStageForUserRecord, Boolean> MONSTER_PIECE_DROPPED = createField("monster_piece_dropped", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_for_user.item_id_dropped</code>. 0 means no item dropped
	 */
	public final TableField<TaskStageForUserRecord, Integer> ITEM_ID_DROPPED = createField("item_id_dropped", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "0 means no item dropped");

	/**
	 * The column <code>mobsters.task_stage_for_user.attacked_first</code>.
	 */
	public final TableField<TaskStageForUserRecord, Boolean> ATTACKED_FIRST = createField("attacked_first", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.task_stage_for_user</code> table reference
	 */
	public TaskStageForUser() {
		this("task_stage_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.task_stage_for_user</code> table reference
	 */
	public TaskStageForUser(String alias) {
		this(alias, TASK_STAGE_FOR_USER);
	}

	private TaskStageForUser(String alias, Table<TaskStageForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskStageForUser(String alias, Table<TaskStageForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskStageForUserRecord> getPrimaryKey() {
		return Keys.KEY_TASK_STAGE_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskStageForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskStageForUserRecord>>asList(Keys.KEY_TASK_STAGE_FOR_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskStageForUser as(String alias) {
		return new TaskStageForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskStageForUser rename(String name) {
		return new TaskStageForUser(name, null);
	}
}
