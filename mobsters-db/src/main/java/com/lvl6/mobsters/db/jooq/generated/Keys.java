/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated;


import com.lvl6.mobsters.db.jooq.generated.tables.AchievementConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.AchievementForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.AlertOnStartup;
import com.lvl6.mobsters.db.jooq.generated.tables.BattleItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BattleItemForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.BattleItemQueueForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.BattleReplayForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.BoardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BoardObstacleConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BoardPropertyConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BoosterDisplayItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BoosterItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BoosterPackConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.BoosterPackPurchaseHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.CepfuRaidHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.CepfuRaidStageHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.CepfuRaidStageMonsterHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.ChatTranslations;
import com.lvl6.mobsters.db.jooq.generated.tables.CityBoss;
import com.lvl6.mobsters.db.jooq.generated.tables.CityBossSiteForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.CityConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.CityElementConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.Clan;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanAvenge;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanAvengeUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanBoss;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanBossReward;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanChatPost;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanEventPersistentConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanEventPersistentForClan;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanEventPersistentForClanHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanEventPersistentForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanEventPersistentUserReward;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanHelp;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanHelpCountForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanIconConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanInvite;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanMemberTeamDonation;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanRaidConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanRaidStageConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanRaidStageMonsterConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ClanRaidStageRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.CustomMenuConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.CustomTranslations;
import com.lvl6.mobsters.db.jooq.generated.tables.EventPersistentConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.EventPersistentForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ExpansionCostConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ExpansionPurchaseForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.FileDownloadConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.GiftConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.GiftForTangoUser;
import com.lvl6.mobsters.db.jooq.generated.tables.GiftForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.GiftRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.GoldSaleConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.IapHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.ItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ItemForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ItemForUserUsage;
import com.lvl6.mobsters.db.jooq.generated.tables.LoadTestingEvents;
import com.lvl6.mobsters.db.jooq.generated.tables.LockBoxEventConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.LockBoxEventForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.LockBoxItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.LoginHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventForPlayerLvlConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventGoalConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventGoalForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventLeaderboardRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventTierRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventTimetableConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobForUserHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobRefreshItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterBattleDialogueConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterEnhancingForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterEnhancingHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterEvolvingForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterEvolvingHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterForPvpConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterForUserDeleted;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterHealingForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterHealingHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterLevelInfoConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.MonsterSnapshotForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ObstacleConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ObstacleForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.PrerequisiteConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ProfanityConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.PvpBattleForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.PvpBattleHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.PvpBoardObstacleForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.PvpLeagueConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.PvpLeagueForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.QuestConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.QuestForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.QuestJobConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.QuestJobForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.QuestJobMonsterItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.Referral;
import com.lvl6.mobsters.db.jooq.generated.tables.ReferralCodeAvailableConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ReferralCodeGeneratedConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ResearchConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.ResearchForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ResearchPropertyConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.RewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SalesDisplayItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SalesItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SalesPackageConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SalesScheduleConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SecretGiftConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SecretGiftForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.ServerToggleConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SkillConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SkillPropertyConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.SkillSideEffectConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StaticLevelInfoConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureBattleItemFactoryConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureClanHouseConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureEvoChamberConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureHospitalConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureLabConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureMiniJobConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureMoneyTreeConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructurePvpBoardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureResearchHouseConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureResidenceConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureResourceGeneratorConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureResourceStorageConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureTeamCenterConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.StructureTownHallConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskForUserClientState;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskForUserCompleted;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskForUserOngoing;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskMapElementConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskStageConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskStageForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskStageHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.TaskStageMonsterConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TournamentEventConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TournamentEventForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.TournamentRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.TranslationSettingsForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.User;
import com.lvl6.mobsters.db.jooq.generated.tables.UserBanned;
import com.lvl6.mobsters.db.jooq.generated.tables.UserBeforeTutorialCompletion;
import com.lvl6.mobsters.db.jooq.generated.tables.UserClanBossContribution;
import com.lvl6.mobsters.db.jooq.generated.tables.UserClanBossRewardHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.UserCurrencyHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.UserFacebookInviteForSlot;
import com.lvl6.mobsters.db.jooq.generated.tables.UserPrivateChatPost;
import com.lvl6.mobsters.db.jooq.generated.tables.UserRewardHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.records.AchievementConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.AchievementForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.AlertOnStartupRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BattleItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BattleItemForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BattleItemQueueForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BattleReplayForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoardObstacleConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoardPropertyConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoosterDisplayItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoosterItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoosterPackConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.BoosterPackPurchaseHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CepfuRaidHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CepfuRaidStageHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CepfuRaidStageMonsterHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ChatTranslationsRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityBossRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityBossSiteForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityElementConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanAvengeRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanAvengeUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanBossRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanBossRewardRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanChatPostRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanEventPersistentConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanEventPersistentForClanHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanEventPersistentForClanRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanEventPersistentForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanEventPersistentUserRewardRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanHelpCountForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanHelpRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanIconConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanInviteRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanMemberTeamDonationRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanRaidConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanRaidStageConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanRaidStageMonsterConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanRaidStageRewardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ClanRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CustomMenuConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CustomTranslationsRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.EventPersistentConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.EventPersistentForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ExpansionCostConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ExpansionPurchaseForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.FileDownloadConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.GiftConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.GiftForTangoUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.GiftForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.GiftRewardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.GoldSaleConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.IapHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ItemForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ItemForUserUsageRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.LoadTestingEventsRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.LockBoxEventConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.LockBoxEventForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.LockBoxItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.LoginHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventForPlayerLvlConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventGoalConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventGoalForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventLeaderboardRewardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventTierRewardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventTimetableConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobForUserHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobRefreshItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterBattleDialogueConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEnhancingForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEnhancingHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEvolvingForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEvolvingHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterForPvpConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterForUserDeletedRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterHealingForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterHealingHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterLevelInfoConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterSnapshotForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ObstacleConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ObstacleForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PrerequisiteConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ProfanityConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PvpBattleForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PvpBattleHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PvpBoardObstacleForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PvpLeagueConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PvpLeagueForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.QuestConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.QuestForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.QuestJobConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.QuestJobForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.QuestJobMonsterItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ReferralCodeAvailableConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ReferralCodeGeneratedConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ReferralRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ResearchConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ResearchForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ResearchPropertyConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.RewardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SalesDisplayItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SalesItemConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SalesPackageConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SalesScheduleConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SecretGiftConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SecretGiftForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ServerToggleConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SkillConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SkillPropertyConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SkillSideEffectConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StaticLevelInfoConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureBattleItemFactoryConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureClanHouseConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureEvoChamberConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureHospitalConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureLabConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureMiniJobConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureMoneyTreeConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructurePvpBoardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureResearchHouseConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureResidenceConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureResourceGeneratorConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureResourceStorageConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureTeamCenterConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureTownHallConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskForUserClientStateRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskForUserCompletedRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskForUserOngoingRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskMapElementConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageMonsterConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentEventConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentEventForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentRewardConfigRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TranslationSettingsForUserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserBannedRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserBeforeTutorialCompletionRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserClanBossContributionRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserClanBossRewardHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserCurrencyHistoryRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserFacebookInviteForSlotRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserPrivateChatPostRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserRecord;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserRewardHistoryRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>mobsters</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AchievementConfigRecord, Integer> IDENTITY_ACHIEVEMENT_CONFIG = Identities0.IDENTITY_ACHIEVEMENT_CONFIG;
	public static final Identity<AlertOnStartupRecord, Integer> IDENTITY_ALERT_ON_STARTUP = Identities0.IDENTITY_ALERT_ON_STARTUP;
	public static final Identity<BattleItemConfigRecord, Integer> IDENTITY_BATTLE_ITEM_CONFIG = Identities0.IDENTITY_BATTLE_ITEM_CONFIG;
	public static final Identity<BoardPropertyConfigRecord, Integer> IDENTITY_BOARD_PROPERTY_CONFIG = Identities0.IDENTITY_BOARD_PROPERTY_CONFIG;
	public static final Identity<BoosterDisplayItemConfigRecord, Integer> IDENTITY_BOOSTER_DISPLAY_ITEM_CONFIG = Identities0.IDENTITY_BOOSTER_DISPLAY_ITEM_CONFIG;
	public static final Identity<BoosterItemConfigRecord, Integer> IDENTITY_BOOSTER_ITEM_CONFIG = Identities0.IDENTITY_BOOSTER_ITEM_CONFIG;
	public static final Identity<BoosterPackConfigRecord, Integer> IDENTITY_BOOSTER_PACK_CONFIG = Identities0.IDENTITY_BOOSTER_PACK_CONFIG;
	public static final Identity<CityBossRecord, Integer> IDENTITY_CITY_BOSS = Identities0.IDENTITY_CITY_BOSS;
	public static final Identity<ClanRaidConfigRecord, Integer> IDENTITY_CLAN_RAID_CONFIG = Identities0.IDENTITY_CLAN_RAID_CONFIG;
	public static final Identity<ClanRaidStageConfigRecord, Integer> IDENTITY_CLAN_RAID_STAGE_CONFIG = Identities0.IDENTITY_CLAN_RAID_STAGE_CONFIG;
	public static final Identity<EventPersistentConfigRecord, Integer> IDENTITY_EVENT_PERSISTENT_CONFIG = Identities0.IDENTITY_EVENT_PERSISTENT_CONFIG;
	public static final Identity<ExpansionCostConfigRecord, Integer> IDENTITY_EXPANSION_COST_CONFIG = Identities0.IDENTITY_EXPANSION_COST_CONFIG;
	public static final Identity<FileDownloadConfigRecord, Integer> IDENTITY_FILE_DOWNLOAD_CONFIG = Identities0.IDENTITY_FILE_DOWNLOAD_CONFIG;
	public static final Identity<GiftConfigRecord, Integer> IDENTITY_GIFT_CONFIG = Identities0.IDENTITY_GIFT_CONFIG;
	public static final Identity<GiftRewardConfigRecord, Integer> IDENTITY_GIFT_REWARD_CONFIG = Identities0.IDENTITY_GIFT_REWARD_CONFIG;
	public static final Identity<GoldSaleConfigRecord, Integer> IDENTITY_GOLD_SALE_CONFIG = Identities0.IDENTITY_GOLD_SALE_CONFIG;
	public static final Identity<LoadTestingEventsRecord, Integer> IDENTITY_LOAD_TESTING_EVENTS = Identities0.IDENTITY_LOAD_TESTING_EVENTS;
	public static final Identity<LockBoxEventConfigRecord, Integer> IDENTITY_LOCK_BOX_EVENT_CONFIG = Identities0.IDENTITY_LOCK_BOX_EVENT_CONFIG;
	public static final Identity<LockBoxItemConfigRecord, Integer> IDENTITY_LOCK_BOX_ITEM_CONFIG = Identities0.IDENTITY_LOCK_BOX_ITEM_CONFIG;
	public static final Identity<MiniEventConfigRecord, Integer> IDENTITY_MINI_EVENT_CONFIG = Identities0.IDENTITY_MINI_EVENT_CONFIG;
	public static final Identity<MiniEventTimetableConfigRecord, Integer> IDENTITY_MINI_EVENT_TIMETABLE_CONFIG = Identities0.IDENTITY_MINI_EVENT_TIMETABLE_CONFIG;
	public static final Identity<MiniJobConfigRecord, Integer> IDENTITY_MINI_JOB_CONFIG = Identities0.IDENTITY_MINI_JOB_CONFIG;
	public static final Identity<MonsterConfigRecord, Integer> IDENTITY_MONSTER_CONFIG = Identities0.IDENTITY_MONSTER_CONFIG;
	public static final Identity<MonsterForPvpConfigRecord, Integer> IDENTITY_MONSTER_FOR_PVP_CONFIG = Identities0.IDENTITY_MONSTER_FOR_PVP_CONFIG;
	public static final Identity<ObstacleConfigRecord, Integer> IDENTITY_OBSTACLE_CONFIG = Identities0.IDENTITY_OBSTACLE_CONFIG;
	public static final Identity<PrerequisiteConfigRecord, Integer> IDENTITY_PREREQUISITE_CONFIG = Identities0.IDENTITY_PREREQUISITE_CONFIG;
	public static final Identity<PvpLeagueConfigRecord, Integer> IDENTITY_PVP_LEAGUE_CONFIG = Identities0.IDENTITY_PVP_LEAGUE_CONFIG;
	public static final Identity<QuestJobConfigRecord, Integer> IDENTITY_QUEST_JOB_CONFIG = Identities0.IDENTITY_QUEST_JOB_CONFIG;
	public static final Identity<ReferralCodeAvailableConfigRecord, Integer> IDENTITY_REFERRAL_CODE_AVAILABLE_CONFIG = Identities0.IDENTITY_REFERRAL_CODE_AVAILABLE_CONFIG;
	public static final Identity<ReferralCodeGeneratedConfigRecord, Integer> IDENTITY_REFERRAL_CODE_GENERATED_CONFIG = Identities0.IDENTITY_REFERRAL_CODE_GENERATED_CONFIG;
	public static final Identity<ResearchPropertyConfigRecord, Integer> IDENTITY_RESEARCH_PROPERTY_CONFIG = Identities0.IDENTITY_RESEARCH_PROPERTY_CONFIG;
	public static final Identity<SalesDisplayItemConfigRecord, Integer> IDENTITY_SALES_DISPLAY_ITEM_CONFIG = Identities0.IDENTITY_SALES_DISPLAY_ITEM_CONFIG;
	public static final Identity<SalesItemConfigRecord, Integer> IDENTITY_SALES_ITEM_CONFIG = Identities0.IDENTITY_SALES_ITEM_CONFIG;
	public static final Identity<SalesPackageConfigRecord, Integer> IDENTITY_SALES_PACKAGE_CONFIG = Identities0.IDENTITY_SALES_PACKAGE_CONFIG;
	public static final Identity<SecretGiftConfigRecord, Integer> IDENTITY_SECRET_GIFT_CONFIG = Identities0.IDENTITY_SECRET_GIFT_CONFIG;
	public static final Identity<ServerToggleConfigRecord, Integer> IDENTITY_SERVER_TOGGLE_CONFIG = Identities0.IDENTITY_SERVER_TOGGLE_CONFIG;
	public static final Identity<SkillConfigRecord, Integer> IDENTITY_SKILL_CONFIG = Identities0.IDENTITY_SKILL_CONFIG;
	public static final Identity<SkillPropertyConfigRecord, Integer> IDENTITY_SKILL_PROPERTY_CONFIG = Identities0.IDENTITY_SKILL_PROPERTY_CONFIG;
	public static final Identity<StructureConfigRecord, Integer> IDENTITY_STRUCTURE_CONFIG = Identities0.IDENTITY_STRUCTURE_CONFIG;
	public static final Identity<TaskStageConfigRecord, Integer> IDENTITY_TASK_STAGE_CONFIG = Identities0.IDENTITY_TASK_STAGE_CONFIG;
	public static final Identity<TaskStageMonsterConfigRecord, Integer> IDENTITY_TASK_STAGE_MONSTER_CONFIG = Identities0.IDENTITY_TASK_STAGE_MONSTER_CONFIG;
	public static final Identity<TournamentEventConfigRecord, Integer> IDENTITY_TOURNAMENT_EVENT_CONFIG = Identities0.IDENTITY_TOURNAMENT_EVENT_CONFIG;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AchievementConfigRecord> KEY_ACHIEVEMENT_CONFIG_PRIMARY = UniqueKeys0.KEY_ACHIEVEMENT_CONFIG_PRIMARY;
	public static final UniqueKey<AchievementForUserRecord> KEY_ACHIEVEMENT_FOR_USER_PRIMARY = UniqueKeys0.KEY_ACHIEVEMENT_FOR_USER_PRIMARY;
	public static final UniqueKey<AlertOnStartupRecord> KEY_ALERT_ON_STARTUP_PRIMARY = UniqueKeys0.KEY_ALERT_ON_STARTUP_PRIMARY;
	public static final UniqueKey<BattleItemConfigRecord> KEY_BATTLE_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_BATTLE_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<BattleItemForUserRecord> KEY_BATTLE_ITEM_FOR_USER_PRIMARY = UniqueKeys0.KEY_BATTLE_ITEM_FOR_USER_PRIMARY;
	public static final UniqueKey<BattleItemQueueForUserRecord> KEY_BATTLE_ITEM_QUEUE_FOR_USER_PRIMARY = UniqueKeys0.KEY_BATTLE_ITEM_QUEUE_FOR_USER_PRIMARY;
	public static final UniqueKey<BattleReplayForUserRecord> KEY_BATTLE_REPLAY_FOR_USER_PRIMARY = UniqueKeys0.KEY_BATTLE_REPLAY_FOR_USER_PRIMARY;
	public static final UniqueKey<BoardConfigRecord> KEY_BOARD_CONFIG_PRIMARY = UniqueKeys0.KEY_BOARD_CONFIG_PRIMARY;
	public static final UniqueKey<BoardObstacleConfigRecord> KEY_BOARD_OBSTACLE_CONFIG_PRIMARY = UniqueKeys0.KEY_BOARD_OBSTACLE_CONFIG_PRIMARY;
	public static final UniqueKey<BoardPropertyConfigRecord> KEY_BOARD_PROPERTY_CONFIG_PRIMARY = UniqueKeys0.KEY_BOARD_PROPERTY_CONFIG_PRIMARY;
	public static final UniqueKey<BoosterDisplayItemConfigRecord> KEY_BOOSTER_DISPLAY_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_BOOSTER_DISPLAY_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<BoosterItemConfigRecord> KEY_BOOSTER_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_BOOSTER_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<BoosterPackConfigRecord> KEY_BOOSTER_PACK_CONFIG_PRIMARY = UniqueKeys0.KEY_BOOSTER_PACK_CONFIG_PRIMARY;
	public static final UniqueKey<BoosterPackPurchaseHistoryRecord> KEY_BOOSTER_PACK_PURCHASE_HISTORY_PRIMARY = UniqueKeys0.KEY_BOOSTER_PACK_PURCHASE_HISTORY_PRIMARY;
	public static final UniqueKey<CepfuRaidHistoryRecord> KEY_CEPFU_RAID_HISTORY_PRIMARY = UniqueKeys0.KEY_CEPFU_RAID_HISTORY_PRIMARY;
	public static final UniqueKey<CepfuRaidStageHistoryRecord> KEY_CEPFU_RAID_STAGE_HISTORY_PRIMARY = UniqueKeys0.KEY_CEPFU_RAID_STAGE_HISTORY_PRIMARY;
	public static final UniqueKey<CepfuRaidStageMonsterHistoryRecord> KEY_CEPFU_RAID_STAGE_MONSTER_HISTORY_PRIMARY = UniqueKeys0.KEY_CEPFU_RAID_STAGE_MONSTER_HISTORY_PRIMARY;
	public static final UniqueKey<ChatTranslationsRecord> KEY_CHAT_TRANSLATIONS_PRIMARY = UniqueKeys0.KEY_CHAT_TRANSLATIONS_PRIMARY;
	public static final UniqueKey<CityBossRecord> KEY_CITY_BOSS_PRIMARY = UniqueKeys0.KEY_CITY_BOSS_PRIMARY;
	public static final UniqueKey<CityBossSiteForUserRecord> KEY_CITY_BOSS_SITE_FOR_USER_PRIMARY = UniqueKeys0.KEY_CITY_BOSS_SITE_FOR_USER_PRIMARY;
	public static final UniqueKey<CityBossSiteForUserRecord> KEY_CITY_BOSS_SITE_FOR_USER_USER_ID_UNIQUE = UniqueKeys0.KEY_CITY_BOSS_SITE_FOR_USER_USER_ID_UNIQUE;
	public static final UniqueKey<CityBossSiteForUserRecord> KEY_CITY_BOSS_SITE_FOR_USER_TASK_ID_UNIQUE = UniqueKeys0.KEY_CITY_BOSS_SITE_FOR_USER_TASK_ID_UNIQUE;
	public static final UniqueKey<CityConfigRecord> KEY_CITY_CONFIG_PRIMARY = UniqueKeys0.KEY_CITY_CONFIG_PRIMARY;
	public static final UniqueKey<CityElementConfigRecord> KEY_CITY_ELEMENT_CONFIG_PRIMARY = UniqueKeys0.KEY_CITY_ELEMENT_CONFIG_PRIMARY;
	public static final UniqueKey<ClanRecord> KEY_CLAN_PRIMARY = UniqueKeys0.KEY_CLAN_PRIMARY;
	public static final UniqueKey<ClanAvengeRecord> KEY_CLAN_AVENGE_PRIMARY = UniqueKeys0.KEY_CLAN_AVENGE_PRIMARY;
	public static final UniqueKey<ClanAvengeRecord> KEY_CLAN_AVENGE_PVP_BATTLE_HISTORY_ID_INDEX = UniqueKeys0.KEY_CLAN_AVENGE_PVP_BATTLE_HISTORY_ID_INDEX;
	public static final UniqueKey<ClanAvengeUserRecord> KEY_CLAN_AVENGE_USER_PRIMARY = UniqueKeys0.KEY_CLAN_AVENGE_USER_PRIMARY;
	public static final UniqueKey<ClanBossRecord> KEY_CLAN_BOSS_PRIMARY = UniqueKeys0.KEY_CLAN_BOSS_PRIMARY;
	public static final UniqueKey<ClanBossRewardRecord> KEY_CLAN_BOSS_REWARD_PRIMARY = UniqueKeys0.KEY_CLAN_BOSS_REWARD_PRIMARY;
	public static final UniqueKey<ClanChatPostRecord> KEY_CLAN_CHAT_POST_PRIMARY = UniqueKeys0.KEY_CLAN_CHAT_POST_PRIMARY;
	public static final UniqueKey<ClanEventPersistentConfigRecord> KEY_CLAN_EVENT_PERSISTENT_CONFIG_PRIMARY = UniqueKeys0.KEY_CLAN_EVENT_PERSISTENT_CONFIG_PRIMARY;
	public static final UniqueKey<ClanEventPersistentForClanRecord> KEY_CLAN_EVENT_PERSISTENT_FOR_CLAN_PRIMARY = UniqueKeys0.KEY_CLAN_EVENT_PERSISTENT_FOR_CLAN_PRIMARY;
	public static final UniqueKey<ClanEventPersistentForClanHistoryRecord> KEY_CLAN_EVENT_PERSISTENT_FOR_CLAN_HISTORY_PRIMARY = UniqueKeys0.KEY_CLAN_EVENT_PERSISTENT_FOR_CLAN_HISTORY_PRIMARY;
	public static final UniqueKey<ClanEventPersistentForUserRecord> KEY_CLAN_EVENT_PERSISTENT_FOR_USER_PRIMARY = UniqueKeys0.KEY_CLAN_EVENT_PERSISTENT_FOR_USER_PRIMARY;
	public static final UniqueKey<ClanEventPersistentUserRewardRecord> KEY_CLAN_EVENT_PERSISTENT_USER_REWARD_PRIMARY = UniqueKeys0.KEY_CLAN_EVENT_PERSISTENT_USER_REWARD_PRIMARY;
	public static final UniqueKey<ClanForUserRecord> KEY_CLAN_FOR_USER_PRIMARY = UniqueKeys0.KEY_CLAN_FOR_USER_PRIMARY;
	public static final UniqueKey<ClanHelpRecord> KEY_CLAN_HELP_PRIMARY = UniqueKeys0.KEY_CLAN_HELP_PRIMARY;
	public static final UniqueKey<ClanHelpCountForUserRecord> KEY_CLAN_HELP_COUNT_FOR_USER_PRIMARY = UniqueKeys0.KEY_CLAN_HELP_COUNT_FOR_USER_PRIMARY;
	public static final UniqueKey<ClanIconConfigRecord> KEY_CLAN_ICON_CONFIG_PRIMARY = UniqueKeys0.KEY_CLAN_ICON_CONFIG_PRIMARY;
	public static final UniqueKey<ClanInviteRecord> KEY_CLAN_INVITE_PRIMARY = UniqueKeys0.KEY_CLAN_INVITE_PRIMARY;
	public static final UniqueKey<ClanInviteRecord> KEY_CLAN_INVITE_USER_ID_AND_INVITER_ID = UniqueKeys0.KEY_CLAN_INVITE_USER_ID_AND_INVITER_ID;
	public static final UniqueKey<ClanMemberTeamDonationRecord> KEY_CLAN_MEMBER_TEAM_DONATION_PRIMARY = UniqueKeys0.KEY_CLAN_MEMBER_TEAM_DONATION_PRIMARY;
	public static final UniqueKey<ClanMemberTeamDonationRecord> KEY_CLAN_MEMBER_TEAM_DONATION_UNIQ_CLAN_ID_USER_ID = UniqueKeys0.KEY_CLAN_MEMBER_TEAM_DONATION_UNIQ_CLAN_ID_USER_ID;
	public static final UniqueKey<ClanRaidConfigRecord> KEY_CLAN_RAID_CONFIG_PRIMARY = UniqueKeys0.KEY_CLAN_RAID_CONFIG_PRIMARY;
	public static final UniqueKey<ClanRaidStageConfigRecord> KEY_CLAN_RAID_STAGE_CONFIG_PRIMARY = UniqueKeys0.KEY_CLAN_RAID_STAGE_CONFIG_PRIMARY;
	public static final UniqueKey<ClanRaidStageMonsterConfigRecord> KEY_CLAN_RAID_STAGE_MONSTER_CONFIG_PRIMARY = UniqueKeys0.KEY_CLAN_RAID_STAGE_MONSTER_CONFIG_PRIMARY;
	public static final UniqueKey<ClanRaidStageRewardConfigRecord> KEY_CLAN_RAID_STAGE_REWARD_CONFIG_PRIMARY = UniqueKeys0.KEY_CLAN_RAID_STAGE_REWARD_CONFIG_PRIMARY;
	public static final UniqueKey<CustomMenuConfigRecord> KEY_CUSTOM_MENU_CONFIG_PRIMARY = UniqueKeys0.KEY_CUSTOM_MENU_CONFIG_PRIMARY;
	public static final UniqueKey<CustomTranslationsRecord> KEY_CUSTOM_TRANSLATIONS_PRIMARY = UniqueKeys0.KEY_CUSTOM_TRANSLATIONS_PRIMARY;
	public static final UniqueKey<EventPersistentConfigRecord> KEY_EVENT_PERSISTENT_CONFIG_PRIMARY = UniqueKeys0.KEY_EVENT_PERSISTENT_CONFIG_PRIMARY;
	public static final UniqueKey<EventPersistentForUserRecord> KEY_EVENT_PERSISTENT_FOR_USER_PRIMARY = UniqueKeys0.KEY_EVENT_PERSISTENT_FOR_USER_PRIMARY;
	public static final UniqueKey<ExpansionCostConfigRecord> KEY_EXPANSION_COST_CONFIG_PRIMARY = UniqueKeys0.KEY_EXPANSION_COST_CONFIG_PRIMARY;
	public static final UniqueKey<ExpansionPurchaseForUserRecord> KEY_EXPANSION_PURCHASE_FOR_USER_PRIMARY = UniqueKeys0.KEY_EXPANSION_PURCHASE_FOR_USER_PRIMARY;
	public static final UniqueKey<FileDownloadConfigRecord> KEY_FILE_DOWNLOAD_CONFIG_PRIMARY = UniqueKeys0.KEY_FILE_DOWNLOAD_CONFIG_PRIMARY;
	public static final UniqueKey<GiftConfigRecord> KEY_GIFT_CONFIG_PRIMARY = UniqueKeys0.KEY_GIFT_CONFIG_PRIMARY;
	public static final UniqueKey<GiftForTangoUserRecord> KEY_GIFT_FOR_TANGO_USER_PRIMARY = UniqueKeys0.KEY_GIFT_FOR_TANGO_USER_PRIMARY;
	public static final UniqueKey<GiftForUserRecord> KEY_GIFT_FOR_USER_PRIMARY = UniqueKeys0.KEY_GIFT_FOR_USER_PRIMARY;
	public static final UniqueKey<GiftRewardConfigRecord> KEY_GIFT_REWARD_CONFIG_PRIMARY = UniqueKeys0.KEY_GIFT_REWARD_CONFIG_PRIMARY;
	public static final UniqueKey<GoldSaleConfigRecord> KEY_GOLD_SALE_CONFIG_PRIMARY = UniqueKeys0.KEY_GOLD_SALE_CONFIG_PRIMARY;
	public static final UniqueKey<IapHistoryRecord> KEY_IAP_HISTORY_PRIMARY = UniqueKeys0.KEY_IAP_HISTORY_PRIMARY;
	public static final UniqueKey<IapHistoryRecord> KEY_IAP_HISTORY_TRANSACTION_ID_UNIQUE = UniqueKeys0.KEY_IAP_HISTORY_TRANSACTION_ID_UNIQUE;
	public static final UniqueKey<ItemConfigRecord> KEY_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<ItemForUserRecord> KEY_ITEM_FOR_USER_PRIMARY = UniqueKeys0.KEY_ITEM_FOR_USER_PRIMARY;
	public static final UniqueKey<ItemForUserUsageRecord> KEY_ITEM_FOR_USER_USAGE_PRIMARY = UniqueKeys0.KEY_ITEM_FOR_USER_USAGE_PRIMARY;
	public static final UniqueKey<LoadTestingEventsRecord> KEY_LOAD_TESTING_EVENTS_PRIMARY = UniqueKeys0.KEY_LOAD_TESTING_EVENTS_PRIMARY;
	public static final UniqueKey<LockBoxEventConfigRecord> KEY_LOCK_BOX_EVENT_CONFIG_PRIMARY = UniqueKeys0.KEY_LOCK_BOX_EVENT_CONFIG_PRIMARY;
	public static final UniqueKey<LockBoxEventForUserRecord> KEY_LOCK_BOX_EVENT_FOR_USER_PRIMARY = UniqueKeys0.KEY_LOCK_BOX_EVENT_FOR_USER_PRIMARY;
	public static final UniqueKey<LockBoxItemConfigRecord> KEY_LOCK_BOX_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_LOCK_BOX_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<LoginHistoryRecord> KEY_LOGIN_HISTORY_PRIMARY = UniqueKeys0.KEY_LOGIN_HISTORY_PRIMARY;
	public static final UniqueKey<MiniEventConfigRecord> KEY_MINI_EVENT_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_CONFIG_PRIMARY;
	public static final UniqueKey<MiniEventForPlayerLvlConfigRecord> KEY_MINI_EVENT_FOR_PLAYER_LVL_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_FOR_PLAYER_LVL_CONFIG_PRIMARY;
	public static final UniqueKey<MiniEventForUserRecord> KEY_MINI_EVENT_FOR_USER_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_FOR_USER_PRIMARY;
	public static final UniqueKey<MiniEventGoalConfigRecord> KEY_MINI_EVENT_GOAL_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_GOAL_CONFIG_PRIMARY;
	public static final UniqueKey<MiniEventGoalForUserRecord> KEY_MINI_EVENT_GOAL_FOR_USER_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_GOAL_FOR_USER_PRIMARY;
	public static final UniqueKey<MiniEventLeaderboardRewardConfigRecord> KEY_MINI_EVENT_LEADERBOARD_REWARD_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_LEADERBOARD_REWARD_CONFIG_PRIMARY;
	public static final UniqueKey<MiniEventTierRewardConfigRecord> KEY_MINI_EVENT_TIER_REWARD_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_TIER_REWARD_CONFIG_PRIMARY;
	public static final UniqueKey<MiniEventTimetableConfigRecord> KEY_MINI_EVENT_TIMETABLE_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_EVENT_TIMETABLE_CONFIG_PRIMARY;
	public static final UniqueKey<MiniJobConfigRecord> KEY_MINI_JOB_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_JOB_CONFIG_PRIMARY;
	public static final UniqueKey<MiniJobForUserRecord> KEY_MINI_JOB_FOR_USER_PRIMARY = UniqueKeys0.KEY_MINI_JOB_FOR_USER_PRIMARY;
	public static final UniqueKey<MiniJobForUserHistoryRecord> KEY_MINI_JOB_FOR_USER_HISTORY_PRIMARY = UniqueKeys0.KEY_MINI_JOB_FOR_USER_HISTORY_PRIMARY;
	public static final UniqueKey<MiniJobRefreshItemConfigRecord> KEY_MINI_JOB_REFRESH_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_MINI_JOB_REFRESH_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<MonsterBattleDialogueConfigRecord> KEY_MONSTER_BATTLE_DIALOGUE_CONFIG_PRIMARY = UniqueKeys0.KEY_MONSTER_BATTLE_DIALOGUE_CONFIG_PRIMARY;
	public static final UniqueKey<MonsterConfigRecord> KEY_MONSTER_CONFIG_PRIMARY = UniqueKeys0.KEY_MONSTER_CONFIG_PRIMARY;
	public static final UniqueKey<MonsterEnhancingForUserRecord> KEY_MONSTER_ENHANCING_FOR_USER_PRIMARY = UniqueKeys0.KEY_MONSTER_ENHANCING_FOR_USER_PRIMARY;
	public static final UniqueKey<MonsterEnhancingHistoryRecord> KEY_MONSTER_ENHANCING_HISTORY_PRIMARY = UniqueKeys0.KEY_MONSTER_ENHANCING_HISTORY_PRIMARY;
	public static final UniqueKey<MonsterEvolvingForUserRecord> KEY_MONSTER_EVOLVING_FOR_USER_PRIMARY = UniqueKeys0.KEY_MONSTER_EVOLVING_FOR_USER_PRIMARY;
	public static final UniqueKey<MonsterEvolvingForUserRecord> KEY_MONSTER_EVOLVING_FOR_USER_CATALYST_USER_MONSTER_ID_UNIQUE = UniqueKeys0.KEY_MONSTER_EVOLVING_FOR_USER_CATALYST_USER_MONSTER_ID_UNIQUE;
	public static final UniqueKey<MonsterEvolvingHistoryRecord> KEY_MONSTER_EVOLVING_HISTORY_PRIMARY = UniqueKeys0.KEY_MONSTER_EVOLVING_HISTORY_PRIMARY;
	public static final UniqueKey<MonsterForPvpConfigRecord> KEY_MONSTER_FOR_PVP_CONFIG_PRIMARY = UniqueKeys0.KEY_MONSTER_FOR_PVP_CONFIG_PRIMARY;
	public static final UniqueKey<MonsterForUserRecord> KEY_MONSTER_FOR_USER_PRIMARY = UniqueKeys0.KEY_MONSTER_FOR_USER_PRIMARY;
	public static final UniqueKey<MonsterForUserDeletedRecord> KEY_MONSTER_FOR_USER_DELETED_PRIMARY = UniqueKeys0.KEY_MONSTER_FOR_USER_DELETED_PRIMARY;
	public static final UniqueKey<MonsterHealingForUserRecord> KEY_MONSTER_HEALING_FOR_USER_PRIMARY = UniqueKeys0.KEY_MONSTER_HEALING_FOR_USER_PRIMARY;
	public static final UniqueKey<MonsterHealingHistoryRecord> KEY_MONSTER_HEALING_HISTORY_PRIMARY = UniqueKeys0.KEY_MONSTER_HEALING_HISTORY_PRIMARY;
	public static final UniqueKey<MonsterLevelInfoConfigRecord> KEY_MONSTER_LEVEL_INFO_CONFIG_PRIMARY = UniqueKeys0.KEY_MONSTER_LEVEL_INFO_CONFIG_PRIMARY;
	public static final UniqueKey<MonsterSnapshotForUserRecord> KEY_MONSTER_SNAPSHOT_FOR_USER_PRIMARY = UniqueKeys0.KEY_MONSTER_SNAPSHOT_FOR_USER_PRIMARY;
	public static final UniqueKey<ObstacleConfigRecord> KEY_OBSTACLE_CONFIG_PRIMARY = UniqueKeys0.KEY_OBSTACLE_CONFIG_PRIMARY;
	public static final UniqueKey<ObstacleForUserRecord> KEY_OBSTACLE_FOR_USER_PRIMARY = UniqueKeys0.KEY_OBSTACLE_FOR_USER_PRIMARY;
	public static final UniqueKey<PrerequisiteConfigRecord> KEY_PREREQUISITE_CONFIG_PRIMARY = UniqueKeys0.KEY_PREREQUISITE_CONFIG_PRIMARY;
	public static final UniqueKey<ProfanityConfigRecord> KEY_PROFANITY_CONFIG_PRIMARY = UniqueKeys0.KEY_PROFANITY_CONFIG_PRIMARY;
	public static final UniqueKey<ProfanityConfigRecord> KEY_PROFANITY_CONFIG_WORD_UNIQUE = UniqueKeys0.KEY_PROFANITY_CONFIG_WORD_UNIQUE;
	public static final UniqueKey<PvpBattleForUserRecord> KEY_PVP_BATTLE_FOR_USER_PRIMARY = UniqueKeys0.KEY_PVP_BATTLE_FOR_USER_PRIMARY;
	public static final UniqueKey<PvpBattleForUserRecord> KEY_PVP_BATTLE_FOR_USER_ATTACKER_ID_UNIQUE = UniqueKeys0.KEY_PVP_BATTLE_FOR_USER_ATTACKER_ID_UNIQUE;
	public static final UniqueKey<PvpBattleHistoryRecord> KEY_PVP_BATTLE_HISTORY_PRIMARY = UniqueKeys0.KEY_PVP_BATTLE_HISTORY_PRIMARY;
	public static final UniqueKey<PvpBoardObstacleForUserRecord> KEY_PVP_BOARD_OBSTACLE_FOR_USER_PRIMARY = UniqueKeys0.KEY_PVP_BOARD_OBSTACLE_FOR_USER_PRIMARY;
	public static final UniqueKey<PvpLeagueConfigRecord> KEY_PVP_LEAGUE_CONFIG_PRIMARY = UniqueKeys0.KEY_PVP_LEAGUE_CONFIG_PRIMARY;
	public static final UniqueKey<PvpLeagueForUserRecord> KEY_PVP_LEAGUE_FOR_USER_PRIMARY = UniqueKeys0.KEY_PVP_LEAGUE_FOR_USER_PRIMARY;
	public static final UniqueKey<QuestConfigRecord> KEY_QUEST_CONFIG_PRIMARY = UniqueKeys0.KEY_QUEST_CONFIG_PRIMARY;
	public static final UniqueKey<QuestForUserRecord> KEY_QUEST_FOR_USER_PRIMARY = UniqueKeys0.KEY_QUEST_FOR_USER_PRIMARY;
	public static final UniqueKey<QuestJobConfigRecord> KEY_QUEST_JOB_CONFIG_PRIMARY = UniqueKeys0.KEY_QUEST_JOB_CONFIG_PRIMARY;
	public static final UniqueKey<QuestJobForUserRecord> KEY_QUEST_JOB_FOR_USER_PRIMARY = UniqueKeys0.KEY_QUEST_JOB_FOR_USER_PRIMARY;
	public static final UniqueKey<QuestJobMonsterItemConfigRecord> KEY_QUEST_JOB_MONSTER_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_QUEST_JOB_MONSTER_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<ReferralRecord> KEY_REFERRAL_PRIMARY = UniqueKeys0.KEY_REFERRAL_PRIMARY;
	public static final UniqueKey<ReferralCodeAvailableConfigRecord> KEY_REFERRAL_CODE_AVAILABLE_CONFIG_PRIMARY = UniqueKeys0.KEY_REFERRAL_CODE_AVAILABLE_CONFIG_PRIMARY;
	public static final UniqueKey<ReferralCodeAvailableConfigRecord> KEY_REFERRAL_CODE_AVAILABLE_CONFIG_CODE_UNIQUE = UniqueKeys0.KEY_REFERRAL_CODE_AVAILABLE_CONFIG_CODE_UNIQUE;
	public static final UniqueKey<ReferralCodeGeneratedConfigRecord> KEY_REFERRAL_CODE_GENERATED_CONFIG_PRIMARY = UniqueKeys0.KEY_REFERRAL_CODE_GENERATED_CONFIG_PRIMARY;
	public static final UniqueKey<ReferralCodeGeneratedConfigRecord> KEY_REFERRAL_CODE_GENERATED_CONFIG_CODE_UNIQUE = UniqueKeys0.KEY_REFERRAL_CODE_GENERATED_CONFIG_CODE_UNIQUE;
	public static final UniqueKey<ResearchConfigRecord> KEY_RESEARCH_CONFIG_PRIMARY = UniqueKeys0.KEY_RESEARCH_CONFIG_PRIMARY;
	public static final UniqueKey<ResearchForUserRecord> KEY_RESEARCH_FOR_USER_PRIMARY = UniqueKeys0.KEY_RESEARCH_FOR_USER_PRIMARY;
	public static final UniqueKey<ResearchPropertyConfigRecord> KEY_RESEARCH_PROPERTY_CONFIG_PRIMARY = UniqueKeys0.KEY_RESEARCH_PROPERTY_CONFIG_PRIMARY;
	public static final UniqueKey<RewardConfigRecord> KEY_REWARD_CONFIG_PRIMARY = UniqueKeys0.KEY_REWARD_CONFIG_PRIMARY;
	public static final UniqueKey<SalesDisplayItemConfigRecord> KEY_SALES_DISPLAY_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_SALES_DISPLAY_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<SalesItemConfigRecord> KEY_SALES_ITEM_CONFIG_PRIMARY = UniqueKeys0.KEY_SALES_ITEM_CONFIG_PRIMARY;
	public static final UniqueKey<SalesPackageConfigRecord> KEY_SALES_PACKAGE_CONFIG_PRIMARY = UniqueKeys0.KEY_SALES_PACKAGE_CONFIG_PRIMARY;
	public static final UniqueKey<SalesScheduleConfigRecord> KEY_SALES_SCHEDULE_CONFIG_PRIMARY = UniqueKeys0.KEY_SALES_SCHEDULE_CONFIG_PRIMARY;
	public static final UniqueKey<SecretGiftConfigRecord> KEY_SECRET_GIFT_CONFIG_PRIMARY = UniqueKeys0.KEY_SECRET_GIFT_CONFIG_PRIMARY;
	public static final UniqueKey<SecretGiftForUserRecord> KEY_SECRET_GIFT_FOR_USER_PRIMARY = UniqueKeys0.KEY_SECRET_GIFT_FOR_USER_PRIMARY;
	public static final UniqueKey<ServerToggleConfigRecord> KEY_SERVER_TOGGLE_CONFIG_PRIMARY = UniqueKeys0.KEY_SERVER_TOGGLE_CONFIG_PRIMARY;
	public static final UniqueKey<SkillConfigRecord> KEY_SKILL_CONFIG_PRIMARY = UniqueKeys0.KEY_SKILL_CONFIG_PRIMARY;
	public static final UniqueKey<SkillPropertyConfigRecord> KEY_SKILL_PROPERTY_CONFIG_PRIMARY = UniqueKeys0.KEY_SKILL_PROPERTY_CONFIG_PRIMARY;
	public static final UniqueKey<SkillSideEffectConfigRecord> KEY_SKILL_SIDE_EFFECT_CONFIG_PRIMARY = UniqueKeys0.KEY_SKILL_SIDE_EFFECT_CONFIG_PRIMARY;
	public static final UniqueKey<StaticLevelInfoConfigRecord> KEY_STATIC_LEVEL_INFO_CONFIG_PRIMARY = UniqueKeys0.KEY_STATIC_LEVEL_INFO_CONFIG_PRIMARY;
	public static final UniqueKey<StructureBattleItemFactoryConfigRecord> KEY_STRUCTURE_BATTLE_ITEM_FACTORY_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_BATTLE_ITEM_FACTORY_CONFIG_PRIMARY;
	public static final UniqueKey<StructureClanHouseConfigRecord> KEY_STRUCTURE_CLAN_HOUSE_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_CLAN_HOUSE_CONFIG_PRIMARY;
	public static final UniqueKey<StructureConfigRecord> KEY_STRUCTURE_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_CONFIG_PRIMARY;
	public static final UniqueKey<StructureEvoChamberConfigRecord> KEY_STRUCTURE_EVO_CHAMBER_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_EVO_CHAMBER_CONFIG_PRIMARY;
	public static final UniqueKey<StructureForUserRecord> KEY_STRUCTURE_FOR_USER_PRIMARY = UniqueKeys0.KEY_STRUCTURE_FOR_USER_PRIMARY;
	public static final UniqueKey<StructureHospitalConfigRecord> KEY_STRUCTURE_HOSPITAL_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_HOSPITAL_CONFIG_PRIMARY;
	public static final UniqueKey<StructureLabConfigRecord> KEY_STRUCTURE_LAB_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_LAB_CONFIG_PRIMARY;
	public static final UniqueKey<StructureMiniJobConfigRecord> KEY_STRUCTURE_MINI_JOB_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_MINI_JOB_CONFIG_PRIMARY;
	public static final UniqueKey<StructureMoneyTreeConfigRecord> KEY_STRUCTURE_MONEY_TREE_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_MONEY_TREE_CONFIG_PRIMARY;
	public static final UniqueKey<StructurePvpBoardConfigRecord> KEY_STRUCTURE_PVP_BOARD_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_PVP_BOARD_CONFIG_PRIMARY;
	public static final UniqueKey<StructureResearchHouseConfigRecord> KEY_STRUCTURE_RESEARCH_HOUSE_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_RESEARCH_HOUSE_CONFIG_PRIMARY;
	public static final UniqueKey<StructureResidenceConfigRecord> KEY_STRUCTURE_RESIDENCE_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_RESIDENCE_CONFIG_PRIMARY;
	public static final UniqueKey<StructureResourceGeneratorConfigRecord> KEY_STRUCTURE_RESOURCE_GENERATOR_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_RESOURCE_GENERATOR_CONFIG_PRIMARY;
	public static final UniqueKey<StructureResourceStorageConfigRecord> KEY_STRUCTURE_RESOURCE_STORAGE_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_RESOURCE_STORAGE_CONFIG_PRIMARY;
	public static final UniqueKey<StructureTeamCenterConfigRecord> KEY_STRUCTURE_TEAM_CENTER_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_TEAM_CENTER_CONFIG_PRIMARY;
	public static final UniqueKey<StructureTownHallConfigRecord> KEY_STRUCTURE_TOWN_HALL_CONFIG_PRIMARY = UniqueKeys0.KEY_STRUCTURE_TOWN_HALL_CONFIG_PRIMARY;
	public static final UniqueKey<TaskConfigRecord> KEY_TASK_CONFIG_PRIMARY = UniqueKeys0.KEY_TASK_CONFIG_PRIMARY;
	public static final UniqueKey<TaskForUserClientStateRecord> KEY_TASK_FOR_USER_CLIENT_STATE_PRIMARY = UniqueKeys0.KEY_TASK_FOR_USER_CLIENT_STATE_PRIMARY;
	public static final UniqueKey<TaskForUserCompletedRecord> KEY_TASK_FOR_USER_COMPLETED_PRIMARY = UniqueKeys0.KEY_TASK_FOR_USER_COMPLETED_PRIMARY;
	public static final UniqueKey<TaskForUserOngoingRecord> KEY_TASK_FOR_USER_ONGOING_PRIMARY = UniqueKeys0.KEY_TASK_FOR_USER_ONGOING_PRIMARY;
	public static final UniqueKey<TaskHistoryRecord> KEY_TASK_HISTORY_PRIMARY = UniqueKeys0.KEY_TASK_HISTORY_PRIMARY;
	public static final UniqueKey<TaskMapElementConfigRecord> KEY_TASK_MAP_ELEMENT_CONFIG_PRIMARY = UniqueKeys0.KEY_TASK_MAP_ELEMENT_CONFIG_PRIMARY;
	public static final UniqueKey<TaskStageConfigRecord> KEY_TASK_STAGE_CONFIG_PRIMARY = UniqueKeys0.KEY_TASK_STAGE_CONFIG_PRIMARY;
	public static final UniqueKey<TaskStageForUserRecord> KEY_TASK_STAGE_FOR_USER_PRIMARY = UniqueKeys0.KEY_TASK_STAGE_FOR_USER_PRIMARY;
	public static final UniqueKey<TaskStageHistoryRecord> KEY_TASK_STAGE_HISTORY_PRIMARY = UniqueKeys0.KEY_TASK_STAGE_HISTORY_PRIMARY;
	public static final UniqueKey<TaskStageMonsterConfigRecord> KEY_TASK_STAGE_MONSTER_CONFIG_PRIMARY = UniqueKeys0.KEY_TASK_STAGE_MONSTER_CONFIG_PRIMARY;
	public static final UniqueKey<TournamentEventConfigRecord> KEY_TOURNAMENT_EVENT_CONFIG_PRIMARY = UniqueKeys0.KEY_TOURNAMENT_EVENT_CONFIG_PRIMARY;
	public static final UniqueKey<TournamentEventForUserRecord> KEY_TOURNAMENT_EVENT_FOR_USER_PRIMARY = UniqueKeys0.KEY_TOURNAMENT_EVENT_FOR_USER_PRIMARY;
	public static final UniqueKey<TournamentRewardConfigRecord> KEY_TOURNAMENT_REWARD_CONFIG_PRIMARY = UniqueKeys0.KEY_TOURNAMENT_REWARD_CONFIG_PRIMARY;
	public static final UniqueKey<TranslationSettingsForUserRecord> KEY_TRANSLATION_SETTINGS_FOR_USER_PRIMARY = UniqueKeys0.KEY_TRANSLATION_SETTINGS_FOR_USER_PRIMARY;
	public static final UniqueKey<TranslationSettingsForUserRecord> KEY_TRANSLATION_SETTINGS_FOR_USER_UNIQ_RECEIVER_USER_ID_SENDER_USER_ID = UniqueKeys0.KEY_TRANSLATION_SETTINGS_FOR_USER_UNIQ_RECEIVER_USER_ID_SENDER_USER_ID;
	public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
	public static final UniqueKey<UserRecord> KEY_USER_USER_2eRECRUIT_CODE_UNIQUE = UniqueKeys0.KEY_USER_USER_2eRECRUIT_CODE_UNIQUE;
	public static final UniqueKey<UserBannedRecord> KEY_USER_BANNED_PRIMARY = UniqueKeys0.KEY_USER_BANNED_PRIMARY;
	public static final UniqueKey<UserBeforeTutorialCompletionRecord> KEY_USER_BEFORE_TUTORIAL_COMPLETION_PRIMARY = UniqueKeys0.KEY_USER_BEFORE_TUTORIAL_COMPLETION_PRIMARY;
	public static final UniqueKey<UserBeforeTutorialCompletionRecord> KEY_USER_BEFORE_TUTORIAL_COMPLETION_USER_BEFORE_TUTORIAL_COMPLETION_2eOPEN_UDID = UniqueKeys0.KEY_USER_BEFORE_TUTORIAL_COMPLETION_USER_BEFORE_TUTORIAL_COMPLETION_2eOPEN_UDID;
	public static final UniqueKey<UserBeforeTutorialCompletionRecord> KEY_USER_BEFORE_TUTORIAL_COMPLETION_USER_BEFORE_TUTORIAL_COMPLETION_2eCREATE_TIME = UniqueKeys0.KEY_USER_BEFORE_TUTORIAL_COMPLETION_USER_BEFORE_TUTORIAL_COMPLETION_2eCREATE_TIME;
	public static final UniqueKey<UserClanBossContributionRecord> KEY_USER_CLAN_BOSS_CONTRIBUTION_PRIMARY = UniqueKeys0.KEY_USER_CLAN_BOSS_CONTRIBUTION_PRIMARY;
	public static final UniqueKey<UserClanBossRewardHistoryRecord> KEY_USER_CLAN_BOSS_REWARD_HISTORY_PRIMARY = UniqueKeys0.KEY_USER_CLAN_BOSS_REWARD_HISTORY_PRIMARY;
	public static final UniqueKey<UserCurrencyHistoryRecord> KEY_USER_CURRENCY_HISTORY_PRIMARY = UniqueKeys0.KEY_USER_CURRENCY_HISTORY_PRIMARY;
	public static final UniqueKey<UserFacebookInviteForSlotRecord> KEY_USER_FACEBOOK_INVITE_FOR_SLOT_PRIMARY = UniqueKeys0.KEY_USER_FACEBOOK_INVITE_FOR_SLOT_PRIMARY;
	public static final UniqueKey<UserPrivateChatPostRecord> KEY_USER_PRIVATE_CHAT_POST_PRIMARY = UniqueKeys0.KEY_USER_PRIVATE_CHAT_POST_PRIMARY;
	public static final UniqueKey<UserRewardHistoryRecord> KEY_USER_REWARD_HISTORY_PRIMARY = UniqueKeys0.KEY_USER_REWARD_HISTORY_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AchievementConfigRecord, Integer> IDENTITY_ACHIEVEMENT_CONFIG = createIdentity(AchievementConfig.ACHIEVEMENT_CONFIG, AchievementConfig.ACHIEVEMENT_CONFIG.ID);
		public static Identity<AlertOnStartupRecord, Integer> IDENTITY_ALERT_ON_STARTUP = createIdentity(AlertOnStartup.ALERT_ON_STARTUP, AlertOnStartup.ALERT_ON_STARTUP.ID);
		public static Identity<BattleItemConfigRecord, Integer> IDENTITY_BATTLE_ITEM_CONFIG = createIdentity(BattleItemConfig.BATTLE_ITEM_CONFIG, BattleItemConfig.BATTLE_ITEM_CONFIG.ID);
		public static Identity<BoardPropertyConfigRecord, Integer> IDENTITY_BOARD_PROPERTY_CONFIG = createIdentity(BoardPropertyConfig.BOARD_PROPERTY_CONFIG, BoardPropertyConfig.BOARD_PROPERTY_CONFIG.ID);
		public static Identity<BoosterDisplayItemConfigRecord, Integer> IDENTITY_BOOSTER_DISPLAY_ITEM_CONFIG = createIdentity(BoosterDisplayItemConfig.BOOSTER_DISPLAY_ITEM_CONFIG, BoosterDisplayItemConfig.BOOSTER_DISPLAY_ITEM_CONFIG.ID);
		public static Identity<BoosterItemConfigRecord, Integer> IDENTITY_BOOSTER_ITEM_CONFIG = createIdentity(BoosterItemConfig.BOOSTER_ITEM_CONFIG, BoosterItemConfig.BOOSTER_ITEM_CONFIG.ID);
		public static Identity<BoosterPackConfigRecord, Integer> IDENTITY_BOOSTER_PACK_CONFIG = createIdentity(BoosterPackConfig.BOOSTER_PACK_CONFIG, BoosterPackConfig.BOOSTER_PACK_CONFIG.ID);
		public static Identity<CityBossRecord, Integer> IDENTITY_CITY_BOSS = createIdentity(CityBoss.CITY_BOSS, CityBoss.CITY_BOSS.ID);
		public static Identity<ClanRaidConfigRecord, Integer> IDENTITY_CLAN_RAID_CONFIG = createIdentity(ClanRaidConfig.CLAN_RAID_CONFIG, ClanRaidConfig.CLAN_RAID_CONFIG.ID);
		public static Identity<ClanRaidStageConfigRecord, Integer> IDENTITY_CLAN_RAID_STAGE_CONFIG = createIdentity(ClanRaidStageConfig.CLAN_RAID_STAGE_CONFIG, ClanRaidStageConfig.CLAN_RAID_STAGE_CONFIG.ID);
		public static Identity<EventPersistentConfigRecord, Integer> IDENTITY_EVENT_PERSISTENT_CONFIG = createIdentity(EventPersistentConfig.EVENT_PERSISTENT_CONFIG, EventPersistentConfig.EVENT_PERSISTENT_CONFIG.ID);
		public static Identity<ExpansionCostConfigRecord, Integer> IDENTITY_EXPANSION_COST_CONFIG = createIdentity(ExpansionCostConfig.EXPANSION_COST_CONFIG, ExpansionCostConfig.EXPANSION_COST_CONFIG.ID);
		public static Identity<FileDownloadConfigRecord, Integer> IDENTITY_FILE_DOWNLOAD_CONFIG = createIdentity(FileDownloadConfig.FILE_DOWNLOAD_CONFIG, FileDownloadConfig.FILE_DOWNLOAD_CONFIG.ID);
		public static Identity<GiftConfigRecord, Integer> IDENTITY_GIFT_CONFIG = createIdentity(GiftConfig.GIFT_CONFIG, GiftConfig.GIFT_CONFIG.ID);
		public static Identity<GiftRewardConfigRecord, Integer> IDENTITY_GIFT_REWARD_CONFIG = createIdentity(GiftRewardConfig.GIFT_REWARD_CONFIG, GiftRewardConfig.GIFT_REWARD_CONFIG.ID);
		public static Identity<GoldSaleConfigRecord, Integer> IDENTITY_GOLD_SALE_CONFIG = createIdentity(GoldSaleConfig.GOLD_SALE_CONFIG, GoldSaleConfig.GOLD_SALE_CONFIG.ID);
		public static Identity<LoadTestingEventsRecord, Integer> IDENTITY_LOAD_TESTING_EVENTS = createIdentity(LoadTestingEvents.LOAD_TESTING_EVENTS, LoadTestingEvents.LOAD_TESTING_EVENTS.ID);
		public static Identity<LockBoxEventConfigRecord, Integer> IDENTITY_LOCK_BOX_EVENT_CONFIG = createIdentity(LockBoxEventConfig.LOCK_BOX_EVENT_CONFIG, LockBoxEventConfig.LOCK_BOX_EVENT_CONFIG.ID);
		public static Identity<LockBoxItemConfigRecord, Integer> IDENTITY_LOCK_BOX_ITEM_CONFIG = createIdentity(LockBoxItemConfig.LOCK_BOX_ITEM_CONFIG, LockBoxItemConfig.LOCK_BOX_ITEM_CONFIG.ID);
		public static Identity<MiniEventConfigRecord, Integer> IDENTITY_MINI_EVENT_CONFIG = createIdentity(MiniEventConfig.MINI_EVENT_CONFIG, MiniEventConfig.MINI_EVENT_CONFIG.ID);
		public static Identity<MiniEventTimetableConfigRecord, Integer> IDENTITY_MINI_EVENT_TIMETABLE_CONFIG = createIdentity(MiniEventTimetableConfig.MINI_EVENT_TIMETABLE_CONFIG, MiniEventTimetableConfig.MINI_EVENT_TIMETABLE_CONFIG.ID);
		public static Identity<MiniJobConfigRecord, Integer> IDENTITY_MINI_JOB_CONFIG = createIdentity(MiniJobConfig.MINI_JOB_CONFIG, MiniJobConfig.MINI_JOB_CONFIG.ID);
		public static Identity<MonsterConfigRecord, Integer> IDENTITY_MONSTER_CONFIG = createIdentity(MonsterConfig.MONSTER_CONFIG, MonsterConfig.MONSTER_CONFIG.ID);
		public static Identity<MonsterForPvpConfigRecord, Integer> IDENTITY_MONSTER_FOR_PVP_CONFIG = createIdentity(MonsterForPvpConfig.MONSTER_FOR_PVP_CONFIG, MonsterForPvpConfig.MONSTER_FOR_PVP_CONFIG.ID);
		public static Identity<ObstacleConfigRecord, Integer> IDENTITY_OBSTACLE_CONFIG = createIdentity(ObstacleConfig.OBSTACLE_CONFIG, ObstacleConfig.OBSTACLE_CONFIG.ID);
		public static Identity<PrerequisiteConfigRecord, Integer> IDENTITY_PREREQUISITE_CONFIG = createIdentity(PrerequisiteConfig.PREREQUISITE_CONFIG, PrerequisiteConfig.PREREQUISITE_CONFIG.ID);
		public static Identity<PvpLeagueConfigRecord, Integer> IDENTITY_PVP_LEAGUE_CONFIG = createIdentity(PvpLeagueConfig.PVP_LEAGUE_CONFIG, PvpLeagueConfig.PVP_LEAGUE_CONFIG.ID);
		public static Identity<QuestJobConfigRecord, Integer> IDENTITY_QUEST_JOB_CONFIG = createIdentity(QuestJobConfig.QUEST_JOB_CONFIG, QuestJobConfig.QUEST_JOB_CONFIG.ID);
		public static Identity<ReferralCodeAvailableConfigRecord, Integer> IDENTITY_REFERRAL_CODE_AVAILABLE_CONFIG = createIdentity(ReferralCodeAvailableConfig.REFERRAL_CODE_AVAILABLE_CONFIG, ReferralCodeAvailableConfig.REFERRAL_CODE_AVAILABLE_CONFIG.ID);
		public static Identity<ReferralCodeGeneratedConfigRecord, Integer> IDENTITY_REFERRAL_CODE_GENERATED_CONFIG = createIdentity(ReferralCodeGeneratedConfig.REFERRAL_CODE_GENERATED_CONFIG, ReferralCodeGeneratedConfig.REFERRAL_CODE_GENERATED_CONFIG.ID);
		public static Identity<ResearchPropertyConfigRecord, Integer> IDENTITY_RESEARCH_PROPERTY_CONFIG = createIdentity(ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG, ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG.ID);
		public static Identity<SalesDisplayItemConfigRecord, Integer> IDENTITY_SALES_DISPLAY_ITEM_CONFIG = createIdentity(SalesDisplayItemConfig.SALES_DISPLAY_ITEM_CONFIG, SalesDisplayItemConfig.SALES_DISPLAY_ITEM_CONFIG.ID);
		public static Identity<SalesItemConfigRecord, Integer> IDENTITY_SALES_ITEM_CONFIG = createIdentity(SalesItemConfig.SALES_ITEM_CONFIG, SalesItemConfig.SALES_ITEM_CONFIG.ID);
		public static Identity<SalesPackageConfigRecord, Integer> IDENTITY_SALES_PACKAGE_CONFIG = createIdentity(SalesPackageConfig.SALES_PACKAGE_CONFIG, SalesPackageConfig.SALES_PACKAGE_CONFIG.ID);
		public static Identity<SecretGiftConfigRecord, Integer> IDENTITY_SECRET_GIFT_CONFIG = createIdentity(SecretGiftConfig.SECRET_GIFT_CONFIG, SecretGiftConfig.SECRET_GIFT_CONFIG.ID);
		public static Identity<ServerToggleConfigRecord, Integer> IDENTITY_SERVER_TOGGLE_CONFIG = createIdentity(ServerToggleConfig.SERVER_TOGGLE_CONFIG, ServerToggleConfig.SERVER_TOGGLE_CONFIG.ID);
		public static Identity<SkillConfigRecord, Integer> IDENTITY_SKILL_CONFIG = createIdentity(SkillConfig.SKILL_CONFIG, SkillConfig.SKILL_CONFIG.ID);
		public static Identity<SkillPropertyConfigRecord, Integer> IDENTITY_SKILL_PROPERTY_CONFIG = createIdentity(SkillPropertyConfig.SKILL_PROPERTY_CONFIG, SkillPropertyConfig.SKILL_PROPERTY_CONFIG.ID);
		public static Identity<StructureConfigRecord, Integer> IDENTITY_STRUCTURE_CONFIG = createIdentity(StructureConfig.STRUCTURE_CONFIG, StructureConfig.STRUCTURE_CONFIG.ID);
		public static Identity<TaskStageConfigRecord, Integer> IDENTITY_TASK_STAGE_CONFIG = createIdentity(TaskStageConfig.TASK_STAGE_CONFIG, TaskStageConfig.TASK_STAGE_CONFIG.ID);
		public static Identity<TaskStageMonsterConfigRecord, Integer> IDENTITY_TASK_STAGE_MONSTER_CONFIG = createIdentity(TaskStageMonsterConfig.TASK_STAGE_MONSTER_CONFIG, TaskStageMonsterConfig.TASK_STAGE_MONSTER_CONFIG.ID);
		public static Identity<TournamentEventConfigRecord, Integer> IDENTITY_TOURNAMENT_EVENT_CONFIG = createIdentity(TournamentEventConfig.TOURNAMENT_EVENT_CONFIG, TournamentEventConfig.TOURNAMENT_EVENT_CONFIG.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AchievementConfigRecord> KEY_ACHIEVEMENT_CONFIG_PRIMARY = createUniqueKey(AchievementConfig.ACHIEVEMENT_CONFIG, AchievementConfig.ACHIEVEMENT_CONFIG.ID);
		public static final UniqueKey<AchievementForUserRecord> KEY_ACHIEVEMENT_FOR_USER_PRIMARY = createUniqueKey(AchievementForUser.ACHIEVEMENT_FOR_USER, AchievementForUser.ACHIEVEMENT_FOR_USER.USER_ID, AchievementForUser.ACHIEVEMENT_FOR_USER.ACHIEVEMENT_ID);
		public static final UniqueKey<AlertOnStartupRecord> KEY_ALERT_ON_STARTUP_PRIMARY = createUniqueKey(AlertOnStartup.ALERT_ON_STARTUP, AlertOnStartup.ALERT_ON_STARTUP.ID);
		public static final UniqueKey<BattleItemConfigRecord> KEY_BATTLE_ITEM_CONFIG_PRIMARY = createUniqueKey(BattleItemConfig.BATTLE_ITEM_CONFIG, BattleItemConfig.BATTLE_ITEM_CONFIG.ID);
		public static final UniqueKey<BattleItemForUserRecord> KEY_BATTLE_ITEM_FOR_USER_PRIMARY = createUniqueKey(BattleItemForUser.BATTLE_ITEM_FOR_USER, BattleItemForUser.BATTLE_ITEM_FOR_USER.ID, BattleItemForUser.BATTLE_ITEM_FOR_USER.USER_ID);
		public static final UniqueKey<BattleItemQueueForUserRecord> KEY_BATTLE_ITEM_QUEUE_FOR_USER_PRIMARY = createUniqueKey(BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER, BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.USER_ID, BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.PRIORITY);
		public static final UniqueKey<BattleReplayForUserRecord> KEY_BATTLE_REPLAY_FOR_USER_PRIMARY = createUniqueKey(BattleReplayForUser.BATTLE_REPLAY_FOR_USER, BattleReplayForUser.BATTLE_REPLAY_FOR_USER.ID);
		public static final UniqueKey<BoardConfigRecord> KEY_BOARD_CONFIG_PRIMARY = createUniqueKey(BoardConfig.BOARD_CONFIG, BoardConfig.BOARD_CONFIG.ID);
		public static final UniqueKey<BoardObstacleConfigRecord> KEY_BOARD_OBSTACLE_CONFIG_PRIMARY = createUniqueKey(BoardObstacleConfig.BOARD_OBSTACLE_CONFIG, BoardObstacleConfig.BOARD_OBSTACLE_CONFIG.ID);
		public static final UniqueKey<BoardPropertyConfigRecord> KEY_BOARD_PROPERTY_CONFIG_PRIMARY = createUniqueKey(BoardPropertyConfig.BOARD_PROPERTY_CONFIG, BoardPropertyConfig.BOARD_PROPERTY_CONFIG.ID);
		public static final UniqueKey<BoosterDisplayItemConfigRecord> KEY_BOOSTER_DISPLAY_ITEM_CONFIG_PRIMARY = createUniqueKey(BoosterDisplayItemConfig.BOOSTER_DISPLAY_ITEM_CONFIG, BoosterDisplayItemConfig.BOOSTER_DISPLAY_ITEM_CONFIG.ID);
		public static final UniqueKey<BoosterItemConfigRecord> KEY_BOOSTER_ITEM_CONFIG_PRIMARY = createUniqueKey(BoosterItemConfig.BOOSTER_ITEM_CONFIG, BoosterItemConfig.BOOSTER_ITEM_CONFIG.ID);
		public static final UniqueKey<BoosterPackConfigRecord> KEY_BOOSTER_PACK_CONFIG_PRIMARY = createUniqueKey(BoosterPackConfig.BOOSTER_PACK_CONFIG, BoosterPackConfig.BOOSTER_PACK_CONFIG.ID);
		public static final UniqueKey<BoosterPackPurchaseHistoryRecord> KEY_BOOSTER_PACK_PURCHASE_HISTORY_PRIMARY = createUniqueKey(BoosterPackPurchaseHistory.BOOSTER_PACK_PURCHASE_HISTORY, BoosterPackPurchaseHistory.BOOSTER_PACK_PURCHASE_HISTORY.USER_ID, BoosterPackPurchaseHistory.BOOSTER_PACK_PURCHASE_HISTORY.BOOSTER_PACK_ID, BoosterPackPurchaseHistory.BOOSTER_PACK_PURCHASE_HISTORY.TIME_OF_PURCHASE);
		public static final UniqueKey<CepfuRaidHistoryRecord> KEY_CEPFU_RAID_HISTORY_PRIMARY = createUniqueKey(CepfuRaidHistory.CEPFU_RAID_HISTORY, CepfuRaidHistory.CEPFU_RAID_HISTORY.USER_ID, CepfuRaidHistory.CEPFU_RAID_HISTORY.TIME_OF_ENTRY, CepfuRaidHistory.CEPFU_RAID_HISTORY.CLAN_ID);
		public static final UniqueKey<CepfuRaidStageHistoryRecord> KEY_CEPFU_RAID_STAGE_HISTORY_PRIMARY = createUniqueKey(CepfuRaidStageHistory.CEPFU_RAID_STAGE_HISTORY, CepfuRaidStageHistory.CEPFU_RAID_STAGE_HISTORY.USER_ID, CepfuRaidStageHistory.CEPFU_RAID_STAGE_HISTORY.CRS_START_TIME, CepfuRaidStageHistory.CEPFU_RAID_STAGE_HISTORY.CLAN_ID);
		public static final UniqueKey<CepfuRaidStageMonsterHistoryRecord> KEY_CEPFU_RAID_STAGE_MONSTER_HISTORY_PRIMARY = createUniqueKey(CepfuRaidStageMonsterHistory.CEPFU_RAID_STAGE_MONSTER_HISTORY, CepfuRaidStageMonsterHistory.CEPFU_RAID_STAGE_MONSTER_HISTORY.USER_ID, CepfuRaidStageMonsterHistory.CEPFU_RAID_STAGE_MONSTER_HISTORY.CRSM_START_TIME);
		public static final UniqueKey<ChatTranslationsRecord> KEY_CHAT_TRANSLATIONS_PRIMARY = createUniqueKey(ChatTranslations.CHAT_TRANSLATIONS, ChatTranslations.CHAT_TRANSLATIONS.ID);
		public static final UniqueKey<CityBossRecord> KEY_CITY_BOSS_PRIMARY = createUniqueKey(CityBoss.CITY_BOSS, CityBoss.CITY_BOSS.ID);
		public static final UniqueKey<CityBossSiteForUserRecord> KEY_CITY_BOSS_SITE_FOR_USER_PRIMARY = createUniqueKey(CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER, CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER.CITY_ID, CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER.USER_ID);
		public static final UniqueKey<CityBossSiteForUserRecord> KEY_CITY_BOSS_SITE_FOR_USER_USER_ID_UNIQUE = createUniqueKey(CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER, CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER.USER_ID);
		public static final UniqueKey<CityBossSiteForUserRecord> KEY_CITY_BOSS_SITE_FOR_USER_TASK_ID_UNIQUE = createUniqueKey(CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER, CityBossSiteForUser.CITY_BOSS_SITE_FOR_USER.TASK_ID);
		public static final UniqueKey<CityConfigRecord> KEY_CITY_CONFIG_PRIMARY = createUniqueKey(CityConfig.CITY_CONFIG, CityConfig.CITY_CONFIG.ID);
		public static final UniqueKey<CityElementConfigRecord> KEY_CITY_ELEMENT_CONFIG_PRIMARY = createUniqueKey(CityElementConfig.CITY_ELEMENT_CONFIG, CityElementConfig.CITY_ELEMENT_CONFIG.CITY_ID, CityElementConfig.CITY_ELEMENT_CONFIG.ASSET_ID);
		public static final UniqueKey<ClanRecord> KEY_CLAN_PRIMARY = createUniqueKey(Clan.CLAN, Clan.CLAN.ID);
		public static final UniqueKey<ClanAvengeRecord> KEY_CLAN_AVENGE_PRIMARY = createUniqueKey(ClanAvenge.CLAN_AVENGE, ClanAvenge.CLAN_AVENGE.ID);
		public static final UniqueKey<ClanAvengeRecord> KEY_CLAN_AVENGE_PVP_BATTLE_HISTORY_ID_INDEX = createUniqueKey(ClanAvenge.CLAN_AVENGE, ClanAvenge.CLAN_AVENGE.ATTACKER_ID, ClanAvenge.CLAN_AVENGE.DEFENDER_ID, ClanAvenge.CLAN_AVENGE.BATTLE_END_TIME);
		public static final UniqueKey<ClanAvengeUserRecord> KEY_CLAN_AVENGE_USER_PRIMARY = createUniqueKey(ClanAvengeUser.CLAN_AVENGE_USER, ClanAvengeUser.CLAN_AVENGE_USER.CLAN_ID, ClanAvengeUser.CLAN_AVENGE_USER.USER_ID, ClanAvengeUser.CLAN_AVENGE_USER.CLAN_AVENGE_ID);
		public static final UniqueKey<ClanBossRecord> KEY_CLAN_BOSS_PRIMARY = createUniqueKey(ClanBoss.CLAN_BOSS, ClanBoss.CLAN_BOSS.ID);
		public static final UniqueKey<ClanBossRewardRecord> KEY_CLAN_BOSS_REWARD_PRIMARY = createUniqueKey(ClanBossReward.CLAN_BOSS_REWARD, ClanBossReward.CLAN_BOSS_REWARD.ID);
		public static final UniqueKey<ClanChatPostRecord> KEY_CLAN_CHAT_POST_PRIMARY = createUniqueKey(ClanChatPost.CLAN_CHAT_POST, ClanChatPost.CLAN_CHAT_POST.ID, ClanChatPost.CLAN_CHAT_POST.TIME_OF_POST, ClanChatPost.CLAN_CHAT_POST.CLAN_ID, ClanChatPost.CLAN_CHAT_POST.POSTER_ID);
		public static final UniqueKey<ClanEventPersistentConfigRecord> KEY_CLAN_EVENT_PERSISTENT_CONFIG_PRIMARY = createUniqueKey(ClanEventPersistentConfig.CLAN_EVENT_PERSISTENT_CONFIG, ClanEventPersistentConfig.CLAN_EVENT_PERSISTENT_CONFIG.ID);
		public static final UniqueKey<ClanEventPersistentForClanRecord> KEY_CLAN_EVENT_PERSISTENT_FOR_CLAN_PRIMARY = createUniqueKey(ClanEventPersistentForClan.CLAN_EVENT_PERSISTENT_FOR_CLAN, ClanEventPersistentForClan.CLAN_EVENT_PERSISTENT_FOR_CLAN.CLAN_ID);
		public static final UniqueKey<ClanEventPersistentForClanHistoryRecord> KEY_CLAN_EVENT_PERSISTENT_FOR_CLAN_HISTORY_PRIMARY = createUniqueKey(ClanEventPersistentForClanHistory.CLAN_EVENT_PERSISTENT_FOR_CLAN_HISTORY, ClanEventPersistentForClanHistory.CLAN_EVENT_PERSISTENT_FOR_CLAN_HISTORY.CLAN_ID, ClanEventPersistentForClanHistory.CLAN_EVENT_PERSISTENT_FOR_CLAN_HISTORY.TIME_OF_ENTRY);
		public static final UniqueKey<ClanEventPersistentForUserRecord> KEY_CLAN_EVENT_PERSISTENT_FOR_USER_PRIMARY = createUniqueKey(ClanEventPersistentForUser.CLAN_EVENT_PERSISTENT_FOR_USER, ClanEventPersistentForUser.CLAN_EVENT_PERSISTENT_FOR_USER.USER_ID, ClanEventPersistentForUser.CLAN_EVENT_PERSISTENT_FOR_USER.CLAN_ID);
		public static final UniqueKey<ClanEventPersistentUserRewardRecord> KEY_CLAN_EVENT_PERSISTENT_USER_REWARD_PRIMARY = createUniqueKey(ClanEventPersistentUserReward.CLAN_EVENT_PERSISTENT_USER_REWARD, ClanEventPersistentUserReward.CLAN_EVENT_PERSISTENT_USER_REWARD.ID, ClanEventPersistentUserReward.CLAN_EVENT_PERSISTENT_USER_REWARD.USER_ID, ClanEventPersistentUserReward.CLAN_EVENT_PERSISTENT_USER_REWARD.CRS_START_TIME);
		public static final UniqueKey<ClanForUserRecord> KEY_CLAN_FOR_USER_PRIMARY = createUniqueKey(ClanForUser.CLAN_FOR_USER, ClanForUser.CLAN_FOR_USER.USER_ID, ClanForUser.CLAN_FOR_USER.CLAN_ID);
		public static final UniqueKey<ClanHelpRecord> KEY_CLAN_HELP_PRIMARY = createUniqueKey(ClanHelp.CLAN_HELP, ClanHelp.CLAN_HELP.ID);
		public static final UniqueKey<ClanHelpCountForUserRecord> KEY_CLAN_HELP_COUNT_FOR_USER_PRIMARY = createUniqueKey(ClanHelpCountForUser.CLAN_HELP_COUNT_FOR_USER, ClanHelpCountForUser.CLAN_HELP_COUNT_FOR_USER.USER_ID, ClanHelpCountForUser.CLAN_HELP_COUNT_FOR_USER.CLAN_ID, ClanHelpCountForUser.CLAN_HELP_COUNT_FOR_USER.DATE);
		public static final UniqueKey<ClanIconConfigRecord> KEY_CLAN_ICON_CONFIG_PRIMARY = createUniqueKey(ClanIconConfig.CLAN_ICON_CONFIG, ClanIconConfig.CLAN_ICON_CONFIG.ID);
		public static final UniqueKey<ClanInviteRecord> KEY_CLAN_INVITE_PRIMARY = createUniqueKey(ClanInvite.CLAN_INVITE, ClanInvite.CLAN_INVITE.ID);
		public static final UniqueKey<ClanInviteRecord> KEY_CLAN_INVITE_USER_ID_AND_INVITER_ID = createUniqueKey(ClanInvite.CLAN_INVITE, ClanInvite.CLAN_INVITE.USER_ID, ClanInvite.CLAN_INVITE.INVITER_ID);
		public static final UniqueKey<ClanMemberTeamDonationRecord> KEY_CLAN_MEMBER_TEAM_DONATION_PRIMARY = createUniqueKey(ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION, ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION.ID, ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION.USER_ID, ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION.CLAN_ID);
		public static final UniqueKey<ClanMemberTeamDonationRecord> KEY_CLAN_MEMBER_TEAM_DONATION_UNIQ_CLAN_ID_USER_ID = createUniqueKey(ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION, ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION.CLAN_ID, ClanMemberTeamDonation.CLAN_MEMBER_TEAM_DONATION.USER_ID);
		public static final UniqueKey<ClanRaidConfigRecord> KEY_CLAN_RAID_CONFIG_PRIMARY = createUniqueKey(ClanRaidConfig.CLAN_RAID_CONFIG, ClanRaidConfig.CLAN_RAID_CONFIG.ID);
		public static final UniqueKey<ClanRaidStageConfigRecord> KEY_CLAN_RAID_STAGE_CONFIG_PRIMARY = createUniqueKey(ClanRaidStageConfig.CLAN_RAID_STAGE_CONFIG, ClanRaidStageConfig.CLAN_RAID_STAGE_CONFIG.ID);
		public static final UniqueKey<ClanRaidStageMonsterConfigRecord> KEY_CLAN_RAID_STAGE_MONSTER_CONFIG_PRIMARY = createUniqueKey(ClanRaidStageMonsterConfig.CLAN_RAID_STAGE_MONSTER_CONFIG, ClanRaidStageMonsterConfig.CLAN_RAID_STAGE_MONSTER_CONFIG.ID);
		public static final UniqueKey<ClanRaidStageRewardConfigRecord> KEY_CLAN_RAID_STAGE_REWARD_CONFIG_PRIMARY = createUniqueKey(ClanRaidStageRewardConfig.CLAN_RAID_STAGE_REWARD_CONFIG, ClanRaidStageRewardConfig.CLAN_RAID_STAGE_REWARD_CONFIG.ID);
		public static final UniqueKey<CustomMenuConfigRecord> KEY_CUSTOM_MENU_CONFIG_PRIMARY = createUniqueKey(CustomMenuConfig.CUSTOM_MENU_CONFIG, CustomMenuConfig.CUSTOM_MENU_CONFIG.CUSTOM_MENU_ID, CustomMenuConfig.CUSTOM_MENU_CONFIG.POSITION_Z);
		public static final UniqueKey<CustomTranslationsRecord> KEY_CUSTOM_TRANSLATIONS_PRIMARY = createUniqueKey(CustomTranslations.CUSTOM_TRANSLATIONS, CustomTranslations.CUSTOM_TRANSLATIONS.ID);
		public static final UniqueKey<EventPersistentConfigRecord> KEY_EVENT_PERSISTENT_CONFIG_PRIMARY = createUniqueKey(EventPersistentConfig.EVENT_PERSISTENT_CONFIG, EventPersistentConfig.EVENT_PERSISTENT_CONFIG.ID);
		public static final UniqueKey<EventPersistentForUserRecord> KEY_EVENT_PERSISTENT_FOR_USER_PRIMARY = createUniqueKey(EventPersistentForUser.EVENT_PERSISTENT_FOR_USER, EventPersistentForUser.EVENT_PERSISTENT_FOR_USER.USER_ID, EventPersistentForUser.EVENT_PERSISTENT_FOR_USER.EVENT_PERSISTENT_ID);
		public static final UniqueKey<ExpansionCostConfigRecord> KEY_EXPANSION_COST_CONFIG_PRIMARY = createUniqueKey(ExpansionCostConfig.EXPANSION_COST_CONFIG, ExpansionCostConfig.EXPANSION_COST_CONFIG.ID);
		public static final UniqueKey<ExpansionPurchaseForUserRecord> KEY_EXPANSION_PURCHASE_FOR_USER_PRIMARY = createUniqueKey(ExpansionPurchaseForUser.EXPANSION_PURCHASE_FOR_USER, ExpansionPurchaseForUser.EXPANSION_PURCHASE_FOR_USER.USER_ID, ExpansionPurchaseForUser.EXPANSION_PURCHASE_FOR_USER.X_POSITION, ExpansionPurchaseForUser.EXPANSION_PURCHASE_FOR_USER.Y_POSITION);
		public static final UniqueKey<FileDownloadConfigRecord> KEY_FILE_DOWNLOAD_CONFIG_PRIMARY = createUniqueKey(FileDownloadConfig.FILE_DOWNLOAD_CONFIG, FileDownloadConfig.FILE_DOWNLOAD_CONFIG.ID);
		public static final UniqueKey<GiftConfigRecord> KEY_GIFT_CONFIG_PRIMARY = createUniqueKey(GiftConfig.GIFT_CONFIG, GiftConfig.GIFT_CONFIG.ID);
		public static final UniqueKey<GiftForTangoUserRecord> KEY_GIFT_FOR_TANGO_USER_PRIMARY = createUniqueKey(GiftForTangoUser.GIFT_FOR_TANGO_USER, GiftForTangoUser.GIFT_FOR_TANGO_USER.GIFT_FOR_USER_ID);
		public static final UniqueKey<GiftForUserRecord> KEY_GIFT_FOR_USER_PRIMARY = createUniqueKey(GiftForUser.GIFT_FOR_USER, GiftForUser.GIFT_FOR_USER.ID);
		public static final UniqueKey<GiftRewardConfigRecord> KEY_GIFT_REWARD_CONFIG_PRIMARY = createUniqueKey(GiftRewardConfig.GIFT_REWARD_CONFIG, GiftRewardConfig.GIFT_REWARD_CONFIG.ID);
		public static final UniqueKey<GoldSaleConfigRecord> KEY_GOLD_SALE_CONFIG_PRIMARY = createUniqueKey(GoldSaleConfig.GOLD_SALE_CONFIG, GoldSaleConfig.GOLD_SALE_CONFIG.ID);
		public static final UniqueKey<IapHistoryRecord> KEY_IAP_HISTORY_PRIMARY = createUniqueKey(IapHistory.IAP_HISTORY, IapHistory.IAP_HISTORY.ID);
		public static final UniqueKey<IapHistoryRecord> KEY_IAP_HISTORY_TRANSACTION_ID_UNIQUE = createUniqueKey(IapHistory.IAP_HISTORY, IapHistory.IAP_HISTORY.TRANSACTION_ID);
		public static final UniqueKey<ItemConfigRecord> KEY_ITEM_CONFIG_PRIMARY = createUniqueKey(ItemConfig.ITEM_CONFIG, ItemConfig.ITEM_CONFIG.ID);
		public static final UniqueKey<ItemForUserRecord> KEY_ITEM_FOR_USER_PRIMARY = createUniqueKey(ItemForUser.ITEM_FOR_USER, ItemForUser.ITEM_FOR_USER.USER_ID, ItemForUser.ITEM_FOR_USER.ITEM_ID);
		public static final UniqueKey<ItemForUserUsageRecord> KEY_ITEM_FOR_USER_USAGE_PRIMARY = createUniqueKey(ItemForUserUsage.ITEM_FOR_USER_USAGE, ItemForUserUsage.ITEM_FOR_USER_USAGE.ID, ItemForUserUsage.ITEM_FOR_USER_USAGE.USER_ID);
		public static final UniqueKey<LoadTestingEventsRecord> KEY_LOAD_TESTING_EVENTS_PRIMARY = createUniqueKey(LoadTestingEvents.LOAD_TESTING_EVENTS, LoadTestingEvents.LOAD_TESTING_EVENTS.ID);
		public static final UniqueKey<LockBoxEventConfigRecord> KEY_LOCK_BOX_EVENT_CONFIG_PRIMARY = createUniqueKey(LockBoxEventConfig.LOCK_BOX_EVENT_CONFIG, LockBoxEventConfig.LOCK_BOX_EVENT_CONFIG.ID);
		public static final UniqueKey<LockBoxEventForUserRecord> KEY_LOCK_BOX_EVENT_FOR_USER_PRIMARY = createUniqueKey(LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER, LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.LOCK_BOX_EVENT_ID, LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.USER_ID);
		public static final UniqueKey<LockBoxItemConfigRecord> KEY_LOCK_BOX_ITEM_CONFIG_PRIMARY = createUniqueKey(LockBoxItemConfig.LOCK_BOX_ITEM_CONFIG, LockBoxItemConfig.LOCK_BOX_ITEM_CONFIG.ID);
		public static final UniqueKey<LoginHistoryRecord> KEY_LOGIN_HISTORY_PRIMARY = createUniqueKey(LoginHistory.LOGIN_HISTORY, LoginHistory.LOGIN_HISTORY.ID);
		public static final UniqueKey<MiniEventConfigRecord> KEY_MINI_EVENT_CONFIG_PRIMARY = createUniqueKey(MiniEventConfig.MINI_EVENT_CONFIG, MiniEventConfig.MINI_EVENT_CONFIG.ID);
		public static final UniqueKey<MiniEventForPlayerLvlConfigRecord> KEY_MINI_EVENT_FOR_PLAYER_LVL_CONFIG_PRIMARY = createUniqueKey(MiniEventForPlayerLvlConfig.MINI_EVENT_FOR_PLAYER_LVL_CONFIG, MiniEventForPlayerLvlConfig.MINI_EVENT_FOR_PLAYER_LVL_CONFIG.ID);
		public static final UniqueKey<MiniEventForUserRecord> KEY_MINI_EVENT_FOR_USER_PRIMARY = createUniqueKey(MiniEventForUser.MINI_EVENT_FOR_USER, MiniEventForUser.MINI_EVENT_FOR_USER.USER_ID);
		public static final UniqueKey<MiniEventGoalConfigRecord> KEY_MINI_EVENT_GOAL_CONFIG_PRIMARY = createUniqueKey(MiniEventGoalConfig.MINI_EVENT_GOAL_CONFIG, MiniEventGoalConfig.MINI_EVENT_GOAL_CONFIG.ID);
		public static final UniqueKey<MiniEventGoalForUserRecord> KEY_MINI_EVENT_GOAL_FOR_USER_PRIMARY = createUniqueKey(MiniEventGoalForUser.MINI_EVENT_GOAL_FOR_USER, MiniEventGoalForUser.MINI_EVENT_GOAL_FOR_USER.USER_ID, MiniEventGoalForUser.MINI_EVENT_GOAL_FOR_USER.MINI_EVENT_GOAL_ID);
		public static final UniqueKey<MiniEventLeaderboardRewardConfigRecord> KEY_MINI_EVENT_LEADERBOARD_REWARD_CONFIG_PRIMARY = createUniqueKey(MiniEventLeaderboardRewardConfig.MINI_EVENT_LEADERBOARD_REWARD_CONFIG, MiniEventLeaderboardRewardConfig.MINI_EVENT_LEADERBOARD_REWARD_CONFIG.ID);
		public static final UniqueKey<MiniEventTierRewardConfigRecord> KEY_MINI_EVENT_TIER_REWARD_CONFIG_PRIMARY = createUniqueKey(MiniEventTierRewardConfig.MINI_EVENT_TIER_REWARD_CONFIG, MiniEventTierRewardConfig.MINI_EVENT_TIER_REWARD_CONFIG.ID);
		public static final UniqueKey<MiniEventTimetableConfigRecord> KEY_MINI_EVENT_TIMETABLE_CONFIG_PRIMARY = createUniqueKey(MiniEventTimetableConfig.MINI_EVENT_TIMETABLE_CONFIG, MiniEventTimetableConfig.MINI_EVENT_TIMETABLE_CONFIG.ID);
		public static final UniqueKey<MiniJobConfigRecord> KEY_MINI_JOB_CONFIG_PRIMARY = createUniqueKey(MiniJobConfig.MINI_JOB_CONFIG, MiniJobConfig.MINI_JOB_CONFIG.ID);
		public static final UniqueKey<MiniJobForUserRecord> KEY_MINI_JOB_FOR_USER_PRIMARY = createUniqueKey(MiniJobForUser.MINI_JOB_FOR_USER, MiniJobForUser.MINI_JOB_FOR_USER.ID, MiniJobForUser.MINI_JOB_FOR_USER.USER_ID);
		public static final UniqueKey<MiniJobForUserHistoryRecord> KEY_MINI_JOB_FOR_USER_HISTORY_PRIMARY = createUniqueKey(MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY, MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.USER_ID, MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.MINI_JOB_ID, MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.TIME_COMPLETED);
		public static final UniqueKey<MiniJobRefreshItemConfigRecord> KEY_MINI_JOB_REFRESH_ITEM_CONFIG_PRIMARY = createUniqueKey(MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG, MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG.STRUCT_ID, MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG.ITEM_ID);
		public static final UniqueKey<MonsterBattleDialogueConfigRecord> KEY_MONSTER_BATTLE_DIALOGUE_CONFIG_PRIMARY = createUniqueKey(MonsterBattleDialogueConfig.MONSTER_BATTLE_DIALOGUE_CONFIG, MonsterBattleDialogueConfig.MONSTER_BATTLE_DIALOGUE_CONFIG.ID);
		public static final UniqueKey<MonsterConfigRecord> KEY_MONSTER_CONFIG_PRIMARY = createUniqueKey(MonsterConfig.MONSTER_CONFIG, MonsterConfig.MONSTER_CONFIG.ID);
		public static final UniqueKey<MonsterEnhancingForUserRecord> KEY_MONSTER_ENHANCING_FOR_USER_PRIMARY = createUniqueKey(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER, MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.USER_ID, MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.MONSTER_FOR_USER_ID);
		public static final UniqueKey<MonsterEnhancingHistoryRecord> KEY_MONSTER_ENHANCING_HISTORY_PRIMARY = createUniqueKey(MonsterEnhancingHistory.MONSTER_ENHANCING_HISTORY, MonsterEnhancingHistory.MONSTER_ENHANCING_HISTORY.ID);
		public static final UniqueKey<MonsterEvolvingForUserRecord> KEY_MONSTER_EVOLVING_FOR_USER_PRIMARY = createUniqueKey(MonsterEvolvingForUser.MONSTER_EVOLVING_FOR_USER, MonsterEvolvingForUser.MONSTER_EVOLVING_FOR_USER.CATALYST_USER_MONSTER_ID, MonsterEvolvingForUser.MONSTER_EVOLVING_FOR_USER.USER_MONSTER_ID_ONE, MonsterEvolvingForUser.MONSTER_EVOLVING_FOR_USER.USER_MONSTER_ID_TWO);
		public static final UniqueKey<MonsterEvolvingForUserRecord> KEY_MONSTER_EVOLVING_FOR_USER_CATALYST_USER_MONSTER_ID_UNIQUE = createUniqueKey(MonsterEvolvingForUser.MONSTER_EVOLVING_FOR_USER, MonsterEvolvingForUser.MONSTER_EVOLVING_FOR_USER.CATALYST_USER_MONSTER_ID);
		public static final UniqueKey<MonsterEvolvingHistoryRecord> KEY_MONSTER_EVOLVING_HISTORY_PRIMARY = createUniqueKey(MonsterEvolvingHistory.MONSTER_EVOLVING_HISTORY, MonsterEvolvingHistory.MONSTER_EVOLVING_HISTORY.ID);
		public static final UniqueKey<MonsterForPvpConfigRecord> KEY_MONSTER_FOR_PVP_CONFIG_PRIMARY = createUniqueKey(MonsterForPvpConfig.MONSTER_FOR_PVP_CONFIG, MonsterForPvpConfig.MONSTER_FOR_PVP_CONFIG.ID);
		public static final UniqueKey<MonsterForUserRecord> KEY_MONSTER_FOR_USER_PRIMARY = createUniqueKey(MonsterForUser.MONSTER_FOR_USER, MonsterForUser.MONSTER_FOR_USER.ID);
		public static final UniqueKey<MonsterForUserDeletedRecord> KEY_MONSTER_FOR_USER_DELETED_PRIMARY = createUniqueKey(MonsterForUserDeleted.MONSTER_FOR_USER_DELETED, MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.MONSTER_FOR_USER_ID);
		public static final UniqueKey<MonsterHealingForUserRecord> KEY_MONSTER_HEALING_FOR_USER_PRIMARY = createUniqueKey(MonsterHealingForUser.MONSTER_HEALING_FOR_USER, MonsterHealingForUser.MONSTER_HEALING_FOR_USER.USER_ID, MonsterHealingForUser.MONSTER_HEALING_FOR_USER.MONSTER_FOR_USER_ID);
		public static final UniqueKey<MonsterHealingHistoryRecord> KEY_MONSTER_HEALING_HISTORY_PRIMARY = createUniqueKey(MonsterHealingHistory.MONSTER_HEALING_HISTORY, MonsterHealingHistory.MONSTER_HEALING_HISTORY.ID);
		public static final UniqueKey<MonsterLevelInfoConfigRecord> KEY_MONSTER_LEVEL_INFO_CONFIG_PRIMARY = createUniqueKey(MonsterLevelInfoConfig.MONSTER_LEVEL_INFO_CONFIG, MonsterLevelInfoConfig.MONSTER_LEVEL_INFO_CONFIG.MONSTER_ID, MonsterLevelInfoConfig.MONSTER_LEVEL_INFO_CONFIG.LEVEL);
		public static final UniqueKey<MonsterSnapshotForUserRecord> KEY_MONSTER_SNAPSHOT_FOR_USER_PRIMARY = createUniqueKey(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER, MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.ID, MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TIME_OF_ENTRY, MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.USER_ID);
		public static final UniqueKey<ObstacleConfigRecord> KEY_OBSTACLE_CONFIG_PRIMARY = createUniqueKey(ObstacleConfig.OBSTACLE_CONFIG, ObstacleConfig.OBSTACLE_CONFIG.ID);
		public static final UniqueKey<ObstacleForUserRecord> KEY_OBSTACLE_FOR_USER_PRIMARY = createUniqueKey(ObstacleForUser.OBSTACLE_FOR_USER, ObstacleForUser.OBSTACLE_FOR_USER.ID);
		public static final UniqueKey<PrerequisiteConfigRecord> KEY_PREREQUISITE_CONFIG_PRIMARY = createUniqueKey(PrerequisiteConfig.PREREQUISITE_CONFIG, PrerequisiteConfig.PREREQUISITE_CONFIG.ID);
		public static final UniqueKey<ProfanityConfigRecord> KEY_PROFANITY_CONFIG_PRIMARY = createUniqueKey(ProfanityConfig.PROFANITY_CONFIG, ProfanityConfig.PROFANITY_CONFIG.TERM);
		public static final UniqueKey<ProfanityConfigRecord> KEY_PROFANITY_CONFIG_WORD_UNIQUE = createUniqueKey(ProfanityConfig.PROFANITY_CONFIG, ProfanityConfig.PROFANITY_CONFIG.TERM);
		public static final UniqueKey<PvpBattleForUserRecord> KEY_PVP_BATTLE_FOR_USER_PRIMARY = createUniqueKey(PvpBattleForUser.PVP_BATTLE_FOR_USER, PvpBattleForUser.PVP_BATTLE_FOR_USER.ATTACKER_ID);
		public static final UniqueKey<PvpBattleForUserRecord> KEY_PVP_BATTLE_FOR_USER_ATTACKER_ID_UNIQUE = createUniqueKey(PvpBattleForUser.PVP_BATTLE_FOR_USER, PvpBattleForUser.PVP_BATTLE_FOR_USER.ATTACKER_ID);
		public static final UniqueKey<PvpBattleHistoryRecord> KEY_PVP_BATTLE_HISTORY_PRIMARY = createUniqueKey(PvpBattleHistory.PVP_BATTLE_HISTORY, PvpBattleHistory.PVP_BATTLE_HISTORY.ATTACKER_ID, PvpBattleHistory.PVP_BATTLE_HISTORY.DEFENDER_ID, PvpBattleHistory.PVP_BATTLE_HISTORY.BATTLE_END_TIME);
		public static final UniqueKey<PvpBoardObstacleForUserRecord> KEY_PVP_BOARD_OBSTACLE_FOR_USER_PRIMARY = createUniqueKey(PvpBoardObstacleForUser.PVP_BOARD_OBSTACLE_FOR_USER, PvpBoardObstacleForUser.PVP_BOARD_OBSTACLE_FOR_USER.USER_ID, PvpBoardObstacleForUser.PVP_BOARD_OBSTACLE_FOR_USER.ID);
		public static final UniqueKey<PvpLeagueConfigRecord> KEY_PVP_LEAGUE_CONFIG_PRIMARY = createUniqueKey(PvpLeagueConfig.PVP_LEAGUE_CONFIG, PvpLeagueConfig.PVP_LEAGUE_CONFIG.ID);
		public static final UniqueKey<PvpLeagueForUserRecord> KEY_PVP_LEAGUE_FOR_USER_PRIMARY = createUniqueKey(PvpLeagueForUser.PVP_LEAGUE_FOR_USER, PvpLeagueForUser.PVP_LEAGUE_FOR_USER.USER_ID);
		public static final UniqueKey<QuestConfigRecord> KEY_QUEST_CONFIG_PRIMARY = createUniqueKey(QuestConfig.QUEST_CONFIG, QuestConfig.QUEST_CONFIG.ID);
		public static final UniqueKey<QuestForUserRecord> KEY_QUEST_FOR_USER_PRIMARY = createUniqueKey(QuestForUser.QUEST_FOR_USER, QuestForUser.QUEST_FOR_USER.USER_ID, QuestForUser.QUEST_FOR_USER.QUEST_ID);
		public static final UniqueKey<QuestJobConfigRecord> KEY_QUEST_JOB_CONFIG_PRIMARY = createUniqueKey(QuestJobConfig.QUEST_JOB_CONFIG, QuestJobConfig.QUEST_JOB_CONFIG.ID);
		public static final UniqueKey<QuestJobForUserRecord> KEY_QUEST_JOB_FOR_USER_PRIMARY = createUniqueKey(QuestJobForUser.QUEST_JOB_FOR_USER, QuestJobForUser.QUEST_JOB_FOR_USER.USER_ID, QuestJobForUser.QUEST_JOB_FOR_USER.QUEST_ID, QuestJobForUser.QUEST_JOB_FOR_USER.QUEST_JOB_ID);
		public static final UniqueKey<QuestJobMonsterItemConfigRecord> KEY_QUEST_JOB_MONSTER_ITEM_CONFIG_PRIMARY = createUniqueKey(QuestJobMonsterItemConfig.QUEST_JOB_MONSTER_ITEM_CONFIG, QuestJobMonsterItemConfig.QUEST_JOB_MONSTER_ITEM_CONFIG.QUEST_JOB_ID, QuestJobMonsterItemConfig.QUEST_JOB_MONSTER_ITEM_CONFIG.MONSTER_ID);
		public static final UniqueKey<ReferralRecord> KEY_REFERRAL_PRIMARY = createUniqueKey(Referral.REFERRAL, Referral.REFERRAL.REFERRER_ID, Referral.REFERRAL.NEWLY_REFERRED_ID);
		public static final UniqueKey<ReferralCodeAvailableConfigRecord> KEY_REFERRAL_CODE_AVAILABLE_CONFIG_PRIMARY = createUniqueKey(ReferralCodeAvailableConfig.REFERRAL_CODE_AVAILABLE_CONFIG, ReferralCodeAvailableConfig.REFERRAL_CODE_AVAILABLE_CONFIG.ID);
		public static final UniqueKey<ReferralCodeAvailableConfigRecord> KEY_REFERRAL_CODE_AVAILABLE_CONFIG_CODE_UNIQUE = createUniqueKey(ReferralCodeAvailableConfig.REFERRAL_CODE_AVAILABLE_CONFIG, ReferralCodeAvailableConfig.REFERRAL_CODE_AVAILABLE_CONFIG.CODE);
		public static final UniqueKey<ReferralCodeGeneratedConfigRecord> KEY_REFERRAL_CODE_GENERATED_CONFIG_PRIMARY = createUniqueKey(ReferralCodeGeneratedConfig.REFERRAL_CODE_GENERATED_CONFIG, ReferralCodeGeneratedConfig.REFERRAL_CODE_GENERATED_CONFIG.ID);
		public static final UniqueKey<ReferralCodeGeneratedConfigRecord> KEY_REFERRAL_CODE_GENERATED_CONFIG_CODE_UNIQUE = createUniqueKey(ReferralCodeGeneratedConfig.REFERRAL_CODE_GENERATED_CONFIG, ReferralCodeGeneratedConfig.REFERRAL_CODE_GENERATED_CONFIG.CODE);
		public static final UniqueKey<ResearchConfigRecord> KEY_RESEARCH_CONFIG_PRIMARY = createUniqueKey(ResearchConfig.RESEARCH_CONFIG, ResearchConfig.RESEARCH_CONFIG.ID);
		public static final UniqueKey<ResearchForUserRecord> KEY_RESEARCH_FOR_USER_PRIMARY = createUniqueKey(ResearchForUser.RESEARCH_FOR_USER, ResearchForUser.RESEARCH_FOR_USER.ID, ResearchForUser.RESEARCH_FOR_USER.USER_ID);
		public static final UniqueKey<ResearchPropertyConfigRecord> KEY_RESEARCH_PROPERTY_CONFIG_PRIMARY = createUniqueKey(ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG, ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG.ID);
		public static final UniqueKey<RewardConfigRecord> KEY_REWARD_CONFIG_PRIMARY = createUniqueKey(RewardConfig.REWARD_CONFIG, RewardConfig.REWARD_CONFIG.ID);
		public static final UniqueKey<SalesDisplayItemConfigRecord> KEY_SALES_DISPLAY_ITEM_CONFIG_PRIMARY = createUniqueKey(SalesDisplayItemConfig.SALES_DISPLAY_ITEM_CONFIG, SalesDisplayItemConfig.SALES_DISPLAY_ITEM_CONFIG.ID);
		public static final UniqueKey<SalesItemConfigRecord> KEY_SALES_ITEM_CONFIG_PRIMARY = createUniqueKey(SalesItemConfig.SALES_ITEM_CONFIG, SalesItemConfig.SALES_ITEM_CONFIG.ID);
		public static final UniqueKey<SalesPackageConfigRecord> KEY_SALES_PACKAGE_CONFIG_PRIMARY = createUniqueKey(SalesPackageConfig.SALES_PACKAGE_CONFIG, SalesPackageConfig.SALES_PACKAGE_CONFIG.ID);
		public static final UniqueKey<SalesScheduleConfigRecord> KEY_SALES_SCHEDULE_CONFIG_PRIMARY = createUniqueKey(SalesScheduleConfig.SALES_SCHEDULE_CONFIG, SalesScheduleConfig.SALES_SCHEDULE_CONFIG.ID);
		public static final UniqueKey<SecretGiftConfigRecord> KEY_SECRET_GIFT_CONFIG_PRIMARY = createUniqueKey(SecretGiftConfig.SECRET_GIFT_CONFIG, SecretGiftConfig.SECRET_GIFT_CONFIG.ID);
		public static final UniqueKey<SecretGiftForUserRecord> KEY_SECRET_GIFT_FOR_USER_PRIMARY = createUniqueKey(SecretGiftForUser.SECRET_GIFT_FOR_USER, SecretGiftForUser.SECRET_GIFT_FOR_USER.ID, SecretGiftForUser.SECRET_GIFT_FOR_USER.USER_ID, SecretGiftForUser.SECRET_GIFT_FOR_USER.REWARD_ID);
		public static final UniqueKey<ServerToggleConfigRecord> KEY_SERVER_TOGGLE_CONFIG_PRIMARY = createUniqueKey(ServerToggleConfig.SERVER_TOGGLE_CONFIG, ServerToggleConfig.SERVER_TOGGLE_CONFIG.ID);
		public static final UniqueKey<SkillConfigRecord> KEY_SKILL_CONFIG_PRIMARY = createUniqueKey(SkillConfig.SKILL_CONFIG, SkillConfig.SKILL_CONFIG.ID);
		public static final UniqueKey<SkillPropertyConfigRecord> KEY_SKILL_PROPERTY_CONFIG_PRIMARY = createUniqueKey(SkillPropertyConfig.SKILL_PROPERTY_CONFIG, SkillPropertyConfig.SKILL_PROPERTY_CONFIG.ID);
		public static final UniqueKey<SkillSideEffectConfigRecord> KEY_SKILL_SIDE_EFFECT_CONFIG_PRIMARY = createUniqueKey(SkillSideEffectConfig.SKILL_SIDE_EFFECT_CONFIG, SkillSideEffectConfig.SKILL_SIDE_EFFECT_CONFIG.ID);
		public static final UniqueKey<StaticLevelInfoConfigRecord> KEY_STATIC_LEVEL_INFO_CONFIG_PRIMARY = createUniqueKey(StaticLevelInfoConfig.STATIC_LEVEL_INFO_CONFIG, StaticLevelInfoConfig.STATIC_LEVEL_INFO_CONFIG.LEVEL_ID);
		public static final UniqueKey<StructureBattleItemFactoryConfigRecord> KEY_STRUCTURE_BATTLE_ITEM_FACTORY_CONFIG_PRIMARY = createUniqueKey(StructureBattleItemFactoryConfig.STRUCTURE_BATTLE_ITEM_FACTORY_CONFIG, StructureBattleItemFactoryConfig.STRUCTURE_BATTLE_ITEM_FACTORY_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureClanHouseConfigRecord> KEY_STRUCTURE_CLAN_HOUSE_CONFIG_PRIMARY = createUniqueKey(StructureClanHouseConfig.STRUCTURE_CLAN_HOUSE_CONFIG, StructureClanHouseConfig.STRUCTURE_CLAN_HOUSE_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureConfigRecord> KEY_STRUCTURE_CONFIG_PRIMARY = createUniqueKey(StructureConfig.STRUCTURE_CONFIG, StructureConfig.STRUCTURE_CONFIG.ID);
		public static final UniqueKey<StructureEvoChamberConfigRecord> KEY_STRUCTURE_EVO_CHAMBER_CONFIG_PRIMARY = createUniqueKey(StructureEvoChamberConfig.STRUCTURE_EVO_CHAMBER_CONFIG, StructureEvoChamberConfig.STRUCTURE_EVO_CHAMBER_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureForUserRecord> KEY_STRUCTURE_FOR_USER_PRIMARY = createUniqueKey(StructureForUser.STRUCTURE_FOR_USER, StructureForUser.STRUCTURE_FOR_USER.ID);
		public static final UniqueKey<StructureHospitalConfigRecord> KEY_STRUCTURE_HOSPITAL_CONFIG_PRIMARY = createUniqueKey(StructureHospitalConfig.STRUCTURE_HOSPITAL_CONFIG, StructureHospitalConfig.STRUCTURE_HOSPITAL_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureLabConfigRecord> KEY_STRUCTURE_LAB_CONFIG_PRIMARY = createUniqueKey(StructureLabConfig.STRUCTURE_LAB_CONFIG, StructureLabConfig.STRUCTURE_LAB_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureMiniJobConfigRecord> KEY_STRUCTURE_MINI_JOB_CONFIG_PRIMARY = createUniqueKey(StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG, StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureMoneyTreeConfigRecord> KEY_STRUCTURE_MONEY_TREE_CONFIG_PRIMARY = createUniqueKey(StructureMoneyTreeConfig.STRUCTURE_MONEY_TREE_CONFIG, StructureMoneyTreeConfig.STRUCTURE_MONEY_TREE_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructurePvpBoardConfigRecord> KEY_STRUCTURE_PVP_BOARD_CONFIG_PRIMARY = createUniqueKey(StructurePvpBoardConfig.STRUCTURE_PVP_BOARD_CONFIG, StructurePvpBoardConfig.STRUCTURE_PVP_BOARD_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureResearchHouseConfigRecord> KEY_STRUCTURE_RESEARCH_HOUSE_CONFIG_PRIMARY = createUniqueKey(StructureResearchHouseConfig.STRUCTURE_RESEARCH_HOUSE_CONFIG, StructureResearchHouseConfig.STRUCTURE_RESEARCH_HOUSE_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureResidenceConfigRecord> KEY_STRUCTURE_RESIDENCE_CONFIG_PRIMARY = createUniqueKey(StructureResidenceConfig.STRUCTURE_RESIDENCE_CONFIG, StructureResidenceConfig.STRUCTURE_RESIDENCE_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureResourceGeneratorConfigRecord> KEY_STRUCTURE_RESOURCE_GENERATOR_CONFIG_PRIMARY = createUniqueKey(StructureResourceGeneratorConfig.STRUCTURE_RESOURCE_GENERATOR_CONFIG, StructureResourceGeneratorConfig.STRUCTURE_RESOURCE_GENERATOR_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureResourceStorageConfigRecord> KEY_STRUCTURE_RESOURCE_STORAGE_CONFIG_PRIMARY = createUniqueKey(StructureResourceStorageConfig.STRUCTURE_RESOURCE_STORAGE_CONFIG, StructureResourceStorageConfig.STRUCTURE_RESOURCE_STORAGE_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureTeamCenterConfigRecord> KEY_STRUCTURE_TEAM_CENTER_CONFIG_PRIMARY = createUniqueKey(StructureTeamCenterConfig.STRUCTURE_TEAM_CENTER_CONFIG, StructureTeamCenterConfig.STRUCTURE_TEAM_CENTER_CONFIG.STRUCT_ID);
		public static final UniqueKey<StructureTownHallConfigRecord> KEY_STRUCTURE_TOWN_HALL_CONFIG_PRIMARY = createUniqueKey(StructureTownHallConfig.STRUCTURE_TOWN_HALL_CONFIG, StructureTownHallConfig.STRUCTURE_TOWN_HALL_CONFIG.STRUCT_ID);
		public static final UniqueKey<TaskConfigRecord> KEY_TASK_CONFIG_PRIMARY = createUniqueKey(TaskConfig.TASK_CONFIG, TaskConfig.TASK_CONFIG.ID);
		public static final UniqueKey<TaskForUserClientStateRecord> KEY_TASK_FOR_USER_CLIENT_STATE_PRIMARY = createUniqueKey(TaskForUserClientState.TASK_FOR_USER_CLIENT_STATE, TaskForUserClientState.TASK_FOR_USER_CLIENT_STATE.USER_ID);
		public static final UniqueKey<TaskForUserCompletedRecord> KEY_TASK_FOR_USER_COMPLETED_PRIMARY = createUniqueKey(TaskForUserCompleted.TASK_FOR_USER_COMPLETED, TaskForUserCompleted.TASK_FOR_USER_COMPLETED.USER_ID, TaskForUserCompleted.TASK_FOR_USER_COMPLETED.TASK_ID);
		public static final UniqueKey<TaskForUserOngoingRecord> KEY_TASK_FOR_USER_ONGOING_PRIMARY = createUniqueKey(TaskForUserOngoing.TASK_FOR_USER_ONGOING, TaskForUserOngoing.TASK_FOR_USER_ONGOING.ID);
		public static final UniqueKey<TaskHistoryRecord> KEY_TASK_HISTORY_PRIMARY = createUniqueKey(TaskHistory.TASK_HISTORY, TaskHistory.TASK_HISTORY.TASK_FOR_USER_ID);
		public static final UniqueKey<TaskMapElementConfigRecord> KEY_TASK_MAP_ELEMENT_CONFIG_PRIMARY = createUniqueKey(TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG, TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.ID);
		public static final UniqueKey<TaskStageConfigRecord> KEY_TASK_STAGE_CONFIG_PRIMARY = createUniqueKey(TaskStageConfig.TASK_STAGE_CONFIG, TaskStageConfig.TASK_STAGE_CONFIG.ID);
		public static final UniqueKey<TaskStageForUserRecord> KEY_TASK_STAGE_FOR_USER_PRIMARY = createUniqueKey(TaskStageForUser.TASK_STAGE_FOR_USER, TaskStageForUser.TASK_STAGE_FOR_USER.ID);
		public static final UniqueKey<TaskStageHistoryRecord> KEY_TASK_STAGE_HISTORY_PRIMARY = createUniqueKey(TaskStageHistory.TASK_STAGE_HISTORY, TaskStageHistory.TASK_STAGE_HISTORY.TASK_STAGE_FOR_USER_ID);
		public static final UniqueKey<TaskStageMonsterConfigRecord> KEY_TASK_STAGE_MONSTER_CONFIG_PRIMARY = createUniqueKey(TaskStageMonsterConfig.TASK_STAGE_MONSTER_CONFIG, TaskStageMonsterConfig.TASK_STAGE_MONSTER_CONFIG.ID);
		public static final UniqueKey<TournamentEventConfigRecord> KEY_TOURNAMENT_EVENT_CONFIG_PRIMARY = createUniqueKey(TournamentEventConfig.TOURNAMENT_EVENT_CONFIG, TournamentEventConfig.TOURNAMENT_EVENT_CONFIG.ID);
		public static final UniqueKey<TournamentEventForUserRecord> KEY_TOURNAMENT_EVENT_FOR_USER_PRIMARY = createUniqueKey(TournamentEventForUser.TOURNAMENT_EVENT_FOR_USER, TournamentEventForUser.TOURNAMENT_EVENT_FOR_USER.TOURNAMENT_EVENT_ID, TournamentEventForUser.TOURNAMENT_EVENT_FOR_USER.USER_ID);
		public static final UniqueKey<TournamentRewardConfigRecord> KEY_TOURNAMENT_REWARD_CONFIG_PRIMARY = createUniqueKey(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG, TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.ID, TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.MIN_RANK, TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.MAX_RANK);
		public static final UniqueKey<TranslationSettingsForUserRecord> KEY_TRANSLATION_SETTINGS_FOR_USER_PRIMARY = createUniqueKey(TranslationSettingsForUser.TRANSLATION_SETTINGS_FOR_USER, TranslationSettingsForUser.TRANSLATION_SETTINGS_FOR_USER.ID);
		public static final UniqueKey<TranslationSettingsForUserRecord> KEY_TRANSLATION_SETTINGS_FOR_USER_UNIQ_RECEIVER_USER_ID_SENDER_USER_ID = createUniqueKey(TranslationSettingsForUser.TRANSLATION_SETTINGS_FOR_USER, TranslationSettingsForUser.TRANSLATION_SETTINGS_FOR_USER.RECEIVER_USER_ID, TranslationSettingsForUser.TRANSLATION_SETTINGS_FOR_USER.SENDER_USER_ID);
		public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, User.USER.ID);
		public static final UniqueKey<UserRecord> KEY_USER_USER_2eRECRUIT_CODE_UNIQUE = createUniqueKey(User.USER, User.USER.REFERRAL_CODE);
		public static final UniqueKey<UserBannedRecord> KEY_USER_BANNED_PRIMARY = createUniqueKey(UserBanned.USER_BANNED, UserBanned.USER_BANNED.USER_ID);
		public static final UniqueKey<UserBeforeTutorialCompletionRecord> KEY_USER_BEFORE_TUTORIAL_COMPLETION_PRIMARY = createUniqueKey(UserBeforeTutorialCompletion.USER_BEFORE_TUTORIAL_COMPLETION, UserBeforeTutorialCompletion.USER_BEFORE_TUTORIAL_COMPLETION.ID);
		public static final UniqueKey<UserBeforeTutorialCompletionRecord> KEY_USER_BEFORE_TUTORIAL_COMPLETION_USER_BEFORE_TUTORIAL_COMPLETION_2eOPEN_UDID = createUniqueKey(UserBeforeTutorialCompletion.USER_BEFORE_TUTORIAL_COMPLETION, UserBeforeTutorialCompletion.USER_BEFORE_TUTORIAL_COMPLETION.OPEN_UDID);
		public static final UniqueKey<UserBeforeTutorialCompletionRecord> KEY_USER_BEFORE_TUTORIAL_COMPLETION_USER_BEFORE_TUTORIAL_COMPLETION_2eCREATE_TIME = createUniqueKey(UserBeforeTutorialCompletion.USER_BEFORE_TUTORIAL_COMPLETION, UserBeforeTutorialCompletion.USER_BEFORE_TUTORIAL_COMPLETION.CREATE_TIME);
		public static final UniqueKey<UserClanBossContributionRecord> KEY_USER_CLAN_BOSS_CONTRIBUTION_PRIMARY = createUniqueKey(UserClanBossContribution.USER_CLAN_BOSS_CONTRIBUTION, UserClanBossContribution.USER_CLAN_BOSS_CONTRIBUTION.USER_ID, UserClanBossContribution.USER_CLAN_BOSS_CONTRIBUTION.CLAN_ID, UserClanBossContribution.USER_CLAN_BOSS_CONTRIBUTION.BOSS_ID);
		public static final UniqueKey<UserClanBossRewardHistoryRecord> KEY_USER_CLAN_BOSS_REWARD_HISTORY_PRIMARY = createUniqueKey(UserClanBossRewardHistory.USER_CLAN_BOSS_REWARD_HISTORY, UserClanBossRewardHistory.USER_CLAN_BOSS_REWARD_HISTORY.ID);
		public static final UniqueKey<UserCurrencyHistoryRecord> KEY_USER_CURRENCY_HISTORY_PRIMARY = createUniqueKey(UserCurrencyHistory.USER_CURRENCY_HISTORY, UserCurrencyHistory.USER_CURRENCY_HISTORY.ID);
		public static final UniqueKey<UserFacebookInviteForSlotRecord> KEY_USER_FACEBOOK_INVITE_FOR_SLOT_PRIMARY = createUniqueKey(UserFacebookInviteForSlot.USER_FACEBOOK_INVITE_FOR_SLOT, UserFacebookInviteForSlot.USER_FACEBOOK_INVITE_FOR_SLOT.ID);
		public static final UniqueKey<UserPrivateChatPostRecord> KEY_USER_PRIVATE_CHAT_POST_PRIMARY = createUniqueKey(UserPrivateChatPost.USER_PRIVATE_CHAT_POST, UserPrivateChatPost.USER_PRIVATE_CHAT_POST.ID);
		public static final UniqueKey<UserRewardHistoryRecord> KEY_USER_REWARD_HISTORY_PRIMARY = createUniqueKey(UserRewardHistory.USER_REWARD_HISTORY, UserRewardHistory.USER_REWARD_HISTORY.ID);
	}
}
