/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniJobForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record9;
import org.jooq.Row;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_job_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "user_id"})
})
public class MiniJobForUserRecord extends UpdatableRecordImpl<MiniJobForUserRecord> implements Record9<String, String, Integer, Integer, Integer, Timestamp, String, Timestamp, Integer>, IMiniJobForUser {

	private static final long serialVersionUID = -1667137870;

	/**
	 * Setter for <code>mobsters.mini_job_for_user.id</code>.
	 */
	@Override
	public MiniJobForUserRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.id</code>.
	 */
	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.user_id</code>.
	 */
	@Override
	public MiniJobForUserRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.mini_job_id</code>.
	 */
	@Override
	public MiniJobForUserRecord setMiniJobId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.mini_job_id</code>.
	 */
	@Column(name = "mini_job_id", precision = 10)
	@Override
	public Integer getMiniJobId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.base_dmg_received</code>. amount of damage user's monsters will take
	 */
	@Override
	public MiniJobForUserRecord setBaseDmgReceived(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.base_dmg_received</code>. amount of damage user's monsters will take
	 */
	@Column(name = "base_dmg_received", precision = 10)
	@Override
	public Integer getBaseDmgReceived() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.duration_minutes</code>.
	 */
	@Override
	public MiniJobForUserRecord setDurationMinutes(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.duration_minutes</code>.
	 */
	@Column(name = "duration_minutes", precision = 10)
	@Override
	public Integer getDurationMinutes() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.time_started</code>.
	 */
	@Override
	public MiniJobForUserRecord setTimeStarted(Timestamp value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.time_started</code>.
	 */
	@Column(name = "time_started")
	@Override
	public Timestamp getTimeStarted() {
		return (Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.user_monster_ids</code>.
	 */
	@Override
	public MiniJobForUserRecord setUserMonsterIds(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.user_monster_ids</code>.
	 */
	@Column(name = "user_monster_ids", length = 511)
	@Size(max = 511)
	@Override
	public String getUserMonsterIds() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.time_completed</code>.
	 */
	@Override
	public MiniJobForUserRecord setTimeCompleted(Timestamp value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.time_completed</code>.
	 */
	@Column(name = "time_completed")
	@Override
	public Timestamp getTimeCompleted() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user.duration_seconds</code>.
	 */
	@Override
	public MiniJobForUserRecord setDurationSeconds(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user.duration_seconds</code>.
	 */
	@Column(name = "duration_seconds", precision = 10)
	@Override
	public Integer getDurationSeconds() {
		return (Integer) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, Integer, Integer, Integer, Timestamp, String, Timestamp, Integer> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, Integer, Integer, Integer, Timestamp, String, Timestamp, Integer> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MiniJobForUser.MINI_JOB_FOR_USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MiniJobForUser.MINI_JOB_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return MiniJobForUser.MINI_JOB_FOR_USER.MINI_JOB_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return MiniJobForUser.MINI_JOB_FOR_USER.BASE_DMG_RECEIVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return MiniJobForUser.MINI_JOB_FOR_USER.DURATION_MINUTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return MiniJobForUser.MINI_JOB_FOR_USER.TIME_STARTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return MiniJobForUser.MINI_JOB_FOR_USER.USER_MONSTER_IDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return MiniJobForUser.MINI_JOB_FOR_USER.TIME_COMPLETED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return MiniJobForUser.MINI_JOB_FOR_USER.DURATION_SECONDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getMiniJobId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getBaseDmgReceived();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getDurationMinutes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getTimeStarted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getUserMonsterIds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getTimeCompleted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getDurationSeconds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value3(Integer value) {
		setMiniJobId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value4(Integer value) {
		setBaseDmgReceived(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value5(Integer value) {
		setDurationMinutes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value6(Timestamp value) {
		setTimeStarted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value7(String value) {
		setUserMonsterIds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value8(Timestamp value) {
		setTimeCompleted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord value9(Integer value) {
		setDurationSeconds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserRecord values(String value1, String value2, Integer value3, Integer value4, Integer value5, Timestamp value6, String value7, Timestamp value8, Integer value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniJobForUser from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setMiniJobId(from.getMiniJobId());
		setBaseDmgReceived(from.getBaseDmgReceived());
		setDurationMinutes(from.getDurationMinutes());
		setTimeStarted(from.getTimeStarted());
		setUserMonsterIds(from.getUserMonsterIds());
		setTimeCompleted(from.getTimeCompleted());
		setDurationSeconds(from.getDurationSeconds());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniJobForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MiniJobForUserRecord
	 */
	public MiniJobForUserRecord() {
		super(MiniJobForUser.MINI_JOB_FOR_USER);
	}

	/**
	 * Create a detached, initialised MiniJobForUserRecord
	 */
	public MiniJobForUserRecord(String id, String userId, Integer miniJobId, Integer baseDmgReceived, Integer durationMinutes, Timestamp timeStarted, String userMonsterIds, Timestamp timeCompleted, Integer durationSeconds) {
		super(MiniJobForUser.MINI_JOB_FOR_USER);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, miniJobId);
		setValue(3, baseDmgReceived);
		setValue(4, durationMinutes);
		setValue(5, timeStarted);
		setValue(6, userMonsterIds);
		setValue(7, timeCompleted);
		setValue(8, durationSeconds);
	}
}
