/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventLeaderboardRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiniEventLeaderboard extends TableImpl<MiniEventLeaderboardRecord> {

	private static final long serialVersionUID = -1611624171;

	/**
	 * The reference instance of <code>mobsters.mini_event_leaderboard</code>
	 */
	public static final MiniEventLeaderboard MINI_EVENT_LEADERBOARD = new MiniEventLeaderboard();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MiniEventLeaderboardRecord> getRecordType() {
		return MiniEventLeaderboardRecord.class;
	}

	/**
	 * The column <code>mobsters.mini_event_leaderboard.user_id</code>.
	 */
	public final TableField<MiniEventLeaderboardRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_event_leaderboard.mini_event_timetable_id</code>.
	 */
	public final TableField<MiniEventLeaderboardRecord, Integer> MINI_EVENT_TIMETABLE_ID = createField("mini_event_timetable_id", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.mini_event_leaderboard.name</code>.
	 */
	public final TableField<MiniEventLeaderboardRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "");

	/**
	 * The column <code>mobsters.mini_event_leaderboard.avatar_id</code>.
	 */
	public final TableField<MiniEventLeaderboardRecord, Integer> AVATAR_ID = createField("avatar_id", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.mini_event_leaderboard.clan_tag</code>.
	 */
	public final TableField<MiniEventLeaderboardRecord, String> CLAN_TAG = createField("clan_tag", org.jooq.impl.SQLDataType.VARCHAR.length(127), this, "");

	/**
	 * The column <code>mobsters.mini_event_leaderboard.pts_for_mini_event</code>.
	 */
	public final TableField<MiniEventLeaderboardRecord, Long> PTS_FOR_MINI_EVENT = createField("pts_for_mini_event", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.mini_event_leaderboard</code> table reference
	 */
	public MiniEventLeaderboard() {
		this("mini_event_leaderboard", null);
	}

	/**
	 * Create an aliased <code>mobsters.mini_event_leaderboard</code> table reference
	 */
	public MiniEventLeaderboard(String alias) {
		this(alias, MINI_EVENT_LEADERBOARD);
	}

	private MiniEventLeaderboard(String alias, Table<MiniEventLeaderboardRecord> aliased) {
		this(alias, aliased, null);
	}

	private MiniEventLeaderboard(String alias, Table<MiniEventLeaderboardRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventLeaderboard as(String alias) {
		return new MiniEventLeaderboard(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MiniEventLeaderboard rename(String name) {
		return new MiniEventLeaderboard(name, null);
	}
}
