/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobForUserHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniJobForUserHistory;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_job_for_user_history", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "mini_job_id", "time_completed"})
})
public class MiniJobForUserHistoryRecord extends UpdatableRecordImpl<MiniJobForUserHistoryRecord> implements Record6<String, String, Timestamp, Integer, Timestamp, String>, IMiniJobForUserHistory {

	private static final long serialVersionUID = 803656123;

	/**
	 * Setter for <code>mobsters.mini_job_for_user_history.user_id</code>.
	 */
	@Override
	public MiniJobForUserHistoryRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user_history.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user_history.mini_job_id</code>.
	 */
	@Override
	public MiniJobForUserHistoryRecord setMiniJobId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user_history.mini_job_id</code>.
	 */
	@Column(name = "mini_job_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getMiniJobId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user_history.time_completed</code>.
	 */
	@Override
	public MiniJobForUserHistoryRecord setTimeCompleted(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user_history.time_completed</code>.
	 */
	@Column(name = "time_completed", nullable = false)
	@NotNull
	@Override
	public Timestamp getTimeCompleted() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user_history.base_dmg_received</code>.
	 */
	@Override
	public MiniJobForUserHistoryRecord setBaseDmgReceived(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user_history.base_dmg_received</code>.
	 */
	@Column(name = "base_dmg_received", precision = 10)
	@Override
	public Integer getBaseDmgReceived() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user_history.time_started</code>.
	 */
	@Override
	public MiniJobForUserHistoryRecord setTimeStarted(Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user_history.time_started</code>.
	 */
	@Column(name = "time_started")
	@Override
	public Timestamp getTimeStarted() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.mini_job_for_user_history.user_monster_ids</code>.
	 */
	@Override
	public MiniJobForUserHistoryRecord setUserMonsterIds(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_for_user_history.user_monster_ids</code>.
	 */
	@Column(name = "user_monster_ids", length = 511)
	@Size(max = 511)
	@Override
	public String getUserMonsterIds() {
		return (String) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<String, String, Timestamp> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, Timestamp, Integer, Timestamp, String> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, Timestamp, Integer, Timestamp, String> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.MINI_JOB_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.TIME_COMPLETED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.BASE_DMG_RECEIVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.TIME_STARTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY.USER_MONSTER_IDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMiniJobId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getTimeCompleted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getBaseDmgReceived();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getTimeStarted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getUserMonsterIds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord value2(String value) {
		setMiniJobId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord value3(Timestamp value) {
		setTimeCompleted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord value4(Integer value) {
		setBaseDmgReceived(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord value5(Timestamp value) {
		setTimeStarted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord value6(String value) {
		setUserMonsterIds(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistoryRecord values(String value1, String value2, Timestamp value3, Integer value4, Timestamp value5, String value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniJobForUserHistory from) {
		setUserId(from.getUserId());
		setMiniJobId(from.getMiniJobId());
		setTimeCompleted(from.getTimeCompleted());
		setBaseDmgReceived(from.getBaseDmgReceived());
		setTimeStarted(from.getTimeStarted());
		setUserMonsterIds(from.getUserMonsterIds());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniJobForUserHistory> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MiniJobForUserHistoryRecord
	 */
	public MiniJobForUserHistoryRecord() {
		super(MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY);
	}

	/**
	 * Create a detached, initialised MiniJobForUserHistoryRecord
	 */
	public MiniJobForUserHistoryRecord(String userId, String miniJobId, Timestamp timeCompleted, Integer baseDmgReceived, Timestamp timeStarted, String userMonsterIds) {
		super(MiniJobForUserHistory.MINI_JOB_FOR_USER_HISTORY);

		setValue(0, userId);
		setValue(1, miniJobId);
		setValue(2, timeCompleted);
		setValue(3, baseDmgReceived);
		setValue(4, timeStarted);
		setValue(5, userMonsterIds);
	}
}
