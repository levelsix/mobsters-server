/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.UserCurrencyHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.UserCurrencyHistoryPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserCurrencyHistoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserCurrencyHistoryDao extends DAOImpl<UserCurrencyHistoryRecord, UserCurrencyHistoryPojo, String> {

	/**
	 * Create a new UserCurrencyHistoryDao without any configuration
	 */
	public UserCurrencyHistoryDao() {
		super(UserCurrencyHistory.USER_CURRENCY_HISTORY, UserCurrencyHistoryPojo.class);
	}

	/**
	 * Create a new UserCurrencyHistoryDao with an attached configuration
	 */
	public UserCurrencyHistoryDao(Configuration configuration) {
		super(UserCurrencyHistory.USER_CURRENCY_HISTORY, UserCurrencyHistoryPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(UserCurrencyHistoryPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchById(String... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public UserCurrencyHistoryPojo fetchOneById(String value) {
		return fetchOne(UserCurrencyHistory.USER_CURRENCY_HISTORY.ID, value);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByUserId(String... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>date IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByDate(Timestamp... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.DATE, values);
	}

	/**
	 * Fetch records that have <code>resource_type IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByResourceType(String... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.RESOURCE_TYPE, values);
	}

	/**
	 * Fetch records that have <code>currency_change IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByCurrencyChange(Integer... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.CURRENCY_CHANGE, values);
	}

	/**
	 * Fetch records that have <code>currency_before_change IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByCurrencyBeforeChange(Integer... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.CURRENCY_BEFORE_CHANGE, values);
	}

	/**
	 * Fetch records that have <code>currency_after_change IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByCurrencyAfterChange(Integer... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.CURRENCY_AFTER_CHANGE, values);
	}

	/**
	 * Fetch records that have <code>reason_for_change IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByReasonForChange(String... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.REASON_FOR_CHANGE, values);
	}

	/**
	 * Fetch records that have <code>details IN (values)</code>
	 */
	public List<UserCurrencyHistoryPojo> fetchByDetails(String... values) {
		return fetch(UserCurrencyHistory.USER_CURRENCY_HISTORY.DETAILS, values);
	}
}
