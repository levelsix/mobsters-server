/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IQuestConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "quest_config", schema = "mobsters")
public class QuestConfigPojo implements IQuestConfig {

	private static final long serialVersionUID = -779475038;

	private Integer id;
	private String  questName;
	private String  description;
	private String  doneResponse;
	private String  acceptDialogue;
	private Integer cashReward;
	private Integer oilReward;
	private Integer gemReward;
	private Integer expReward;
	private Integer monsterIdReward;
	private Boolean isCompleteMonster;
	private String  questsRequiredForThis;
	private String  questGiverName;
	private String  questGiverImagePrefix;
	private Integer priority;
	private String  carrotId;
	private String  monsterElement;

	public QuestConfigPojo() {}

	public QuestConfigPojo(QuestConfigPojo value) {
		this.id = value.id;
		this.questName = value.questName;
		this.description = value.description;
		this.doneResponse = value.doneResponse;
		this.acceptDialogue = value.acceptDialogue;
		this.cashReward = value.cashReward;
		this.oilReward = value.oilReward;
		this.gemReward = value.gemReward;
		this.expReward = value.expReward;
		this.monsterIdReward = value.monsterIdReward;
		this.isCompleteMonster = value.isCompleteMonster;
		this.questsRequiredForThis = value.questsRequiredForThis;
		this.questGiverName = value.questGiverName;
		this.questGiverImagePrefix = value.questGiverImagePrefix;
		this.priority = value.priority;
		this.carrotId = value.carrotId;
		this.monsterElement = value.monsterElement;
	}

	public QuestConfigPojo(
		Integer id,
		String  questName,
		String  description,
		String  doneResponse,
		String  acceptDialogue,
		Integer cashReward,
		Integer oilReward,
		Integer gemReward,
		Integer expReward,
		Integer monsterIdReward,
		Boolean isCompleteMonster,
		String  questsRequiredForThis,
		String  questGiverName,
		String  questGiverImagePrefix,
		Integer priority,
		String  carrotId,
		String  monsterElement
	) {
		this.id = id;
		this.questName = questName;
		this.description = description;
		this.doneResponse = doneResponse;
		this.acceptDialogue = acceptDialogue;
		this.cashReward = cashReward;
		this.oilReward = oilReward;
		this.gemReward = gemReward;
		this.expReward = expReward;
		this.monsterIdReward = monsterIdReward;
		this.isCompleteMonster = isCompleteMonster;
		this.questsRequiredForThis = questsRequiredForThis;
		this.questGiverName = questGiverName;
		this.questGiverImagePrefix = questGiverImagePrefix;
		this.priority = priority;
		this.carrotId = carrotId;
		this.monsterElement = monsterElement;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public QuestConfigPojo setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "quest_name", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getQuestName() {
		return this.questName;
	}

	@Override
	public QuestConfigPojo setQuestName(String questName) {
		this.questName = questName;
		return this;
	}

	@Column(name = "description", nullable = false, length = 65535)
	@NotNull
	@Size(max = 65535)
	@Override
	public String getDescription() {
		return this.description;
	}

	@Override
	public QuestConfigPojo setDescription(String description) {
		this.description = description;
		return this;
	}

	@Column(name = "done_response", nullable = false, length = 65535)
	@NotNull
	@Size(max = 65535)
	@Override
	public String getDoneResponse() {
		return this.doneResponse;
	}

	@Override
	public QuestConfigPojo setDoneResponse(String doneResponse) {
		this.doneResponse = doneResponse;
		return this;
	}

	@Column(name = "accept_dialogue", nullable = false, length = 65535)
	@NotNull
	@Size(max = 65535)
	@Override
	public String getAcceptDialogue() {
		return this.acceptDialogue;
	}

	@Override
	public QuestConfigPojo setAcceptDialogue(String acceptDialogue) {
		this.acceptDialogue = acceptDialogue;
		return this;
	}

	@Column(name = "cash_reward", precision = 10)
	@Override
	public Integer getCashReward() {
		return this.cashReward;
	}

	@Override
	public QuestConfigPojo setCashReward(Integer cashReward) {
		this.cashReward = cashReward;
		return this;
	}

	@Column(name = "oil_reward", precision = 10)
	@Override
	public Integer getOilReward() {
		return this.oilReward;
	}

	@Override
	public QuestConfigPojo setOilReward(Integer oilReward) {
		this.oilReward = oilReward;
		return this;
	}

	@Column(name = "gem_reward", precision = 10)
	@Override
	public Integer getGemReward() {
		return this.gemReward;
	}

	@Override
	public QuestConfigPojo setGemReward(Integer gemReward) {
		this.gemReward = gemReward;
		return this;
	}

	@Column(name = "exp_reward", precision = 10)
	@Override
	public Integer getExpReward() {
		return this.expReward;
	}

	@Override
	public QuestConfigPojo setExpReward(Integer expReward) {
		this.expReward = expReward;
		return this;
	}

	@Column(name = "monster_id_reward", precision = 10)
	@Override
	public Integer getMonsterIdReward() {
		return this.monsterIdReward;
	}

	@Override
	public QuestConfigPojo setMonsterIdReward(Integer monsterIdReward) {
		this.monsterIdReward = monsterIdReward;
		return this;
	}

	@Column(name = "is_complete_monster", precision = 1)
	@Override
	public Boolean getIsCompleteMonster() {
		return this.isCompleteMonster;
	}

	@Override
	public QuestConfigPojo setIsCompleteMonster(Boolean isCompleteMonster) {
		this.isCompleteMonster = isCompleteMonster;
		return this;
	}

	@Column(name = "quests_required_for_this", length = 90)
	@Size(max = 90)
	@Override
	public String getQuestsRequiredForThis() {
		return this.questsRequiredForThis;
	}

	@Override
	public QuestConfigPojo setQuestsRequiredForThis(String questsRequiredForThis) {
		this.questsRequiredForThis = questsRequiredForThis;
		return this;
	}

	@Column(name = "quest_giver_name", length = 45)
	@Size(max = 45)
	@Override
	public String getQuestGiverName() {
		return this.questGiverName;
	}

	@Override
	public QuestConfigPojo setQuestGiverName(String questGiverName) {
		this.questGiverName = questGiverName;
		return this;
	}

	@Column(name = "quest_giver_image_prefix", nullable = false, length = 75)
	@NotNull
	@Size(max = 75)
	@Override
	public String getQuestGiverImagePrefix() {
		return this.questGiverImagePrefix;
	}

	@Override
	public QuestConfigPojo setQuestGiverImagePrefix(String questGiverImagePrefix) {
		this.questGiverImagePrefix = questGiverImagePrefix;
		return this;
	}

	@Column(name = "priority", precision = 10)
	@Override
	public Integer getPriority() {
		return this.priority;
	}

	@Override
	public QuestConfigPojo setPriority(Integer priority) {
		this.priority = priority;
		return this;
	}

	@Column(name = "carrot_id", length = 45)
	@Size(max = 45)
	@Override
	public String getCarrotId() {
		return this.carrotId;
	}

	@Override
	public QuestConfigPojo setCarrotId(String carrotId) {
		this.carrotId = carrotId;
		return this;
	}

	@Column(name = "monster_element", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterElement() {
		return this.monsterElement;
	}

	@Override
	public QuestConfigPojo setMonsterElement(String monsterElement) {
		this.monsterElement = monsterElement;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IQuestConfig from) {
		setId(from.getId());
		setQuestName(from.getQuestName());
		setDescription(from.getDescription());
		setDoneResponse(from.getDoneResponse());
		setAcceptDialogue(from.getAcceptDialogue());
		setCashReward(from.getCashReward());
		setOilReward(from.getOilReward());
		setGemReward(from.getGemReward());
		setExpReward(from.getExpReward());
		setMonsterIdReward(from.getMonsterIdReward());
		setIsCompleteMonster(from.getIsCompleteMonster());
		setQuestsRequiredForThis(from.getQuestsRequiredForThis());
		setQuestGiverName(from.getQuestGiverName());
		setQuestGiverImagePrefix(from.getQuestGiverImagePrefix());
		setPriority(from.getPriority());
		setCarrotId(from.getCarrotId());
		setMonsterElement(from.getMonsterElement());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IQuestConfig> E into(E into) {
		into.from(this);
		return into;
	}
}
