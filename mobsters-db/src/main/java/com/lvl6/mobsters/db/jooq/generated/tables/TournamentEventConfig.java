/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentEventConfigRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentEventConfig extends TableImpl<TournamentEventConfigRecord> {

	private static final long serialVersionUID = 44850828;

	/**
	 * The reference instance of <code>mobsters.tournament_event_config</code>
	 */
	public static final TournamentEventConfig TOURNAMENT_EVENT_CONFIG = new TournamentEventConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TournamentEventConfigRecord> getRecordType() {
		return TournamentEventConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.tournament_event_config.id</code>.
	 */
	public final TableField<TournamentEventConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.tournament_event_config.start_time</code>.
	 */
	public final TableField<TournamentEventConfigRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.tournament_event_config.end_time</code>.
	 */
	public final TableField<TournamentEventConfigRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.tournament_event_config.event_name</code>.
	 */
	public final TableField<TournamentEventConfigRecord, String> EVENT_NAME = createField("event_name", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mobsters.tournament_event_config.rewards_given_out</code>.
	 */
	public final TableField<TournamentEventConfigRecord, Integer> REWARDS_GIVEN_OUT = createField("rewards_given_out", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.tournament_event_config</code> table reference
	 */
	public TournamentEventConfig() {
		this("tournament_event_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.tournament_event_config</code> table reference
	 */
	public TournamentEventConfig(String alias) {
		this(alias, TOURNAMENT_EVENT_CONFIG);
	}

	private TournamentEventConfig(String alias, Table<TournamentEventConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private TournamentEventConfig(String alias, Table<TournamentEventConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TournamentEventConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TOURNAMENT_EVENT_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TournamentEventConfigRecord> getPrimaryKey() {
		return Keys.KEY_TOURNAMENT_EVENT_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TournamentEventConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<TournamentEventConfigRecord>>asList(Keys.KEY_TOURNAMENT_EVENT_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentEventConfig as(String alias) {
		return new TournamentEventConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TournamentEventConfig rename(String name) {
		return new TournamentEventConfig(name, null);
	}
}
