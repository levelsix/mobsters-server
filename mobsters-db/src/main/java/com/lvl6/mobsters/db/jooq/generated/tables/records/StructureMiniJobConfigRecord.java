/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.StructureMiniJobConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IStructureMiniJobConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "structure_mini_job_config", schema = "mobsters")
public class StructureMiniJobConfigRecord extends UpdatableRecordImpl<StructureMiniJobConfigRecord> implements Record3<Integer, Integer, Integer>, IStructureMiniJobConfig {

	private static final long serialVersionUID = -328149575;

	/**
	 * Setter for <code>mobsters.structure_mini_job_config.struct_id</code>.
	 */
	@Override
	public StructureMiniJobConfigRecord setStructId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_mini_job_config.struct_id</code>.
	 */
	@Id
	@Column(name = "struct_id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getStructId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.structure_mini_job_config.generated_job_limit</code>.
	 */
	@Override
	public StructureMiniJobConfigRecord setGeneratedJobLimit(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_mini_job_config.generated_job_limit</code>.
	 */
	@Column(name = "generated_job_limit", precision = 7)
	@Override
	public Integer getGeneratedJobLimit() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.structure_mini_job_config.hours_between_job_generation</code>.
	 */
	@Override
	public StructureMiniJobConfigRecord setHoursBetweenJobGeneration(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_mini_job_config.hours_between_job_generation</code>.
	 */
	@Column(name = "hours_between_job_generation", precision = 7)
	@Override
	public Integer getHoursBetweenJobGeneration() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG.STRUCT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG.GENERATED_JOB_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG.HOURS_BETWEEN_JOB_GENERATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getStructId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getGeneratedJobLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getHoursBetweenJobGeneration();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureMiniJobConfigRecord value1(Integer value) {
		setStructId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureMiniJobConfigRecord value2(Integer value) {
		setGeneratedJobLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureMiniJobConfigRecord value3(Integer value) {
		setHoursBetweenJobGeneration(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureMiniJobConfigRecord values(Integer value1, Integer value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IStructureMiniJobConfig from) {
		setStructId(from.getStructId());
		setGeneratedJobLimit(from.getGeneratedJobLimit());
		setHoursBetweenJobGeneration(from.getHoursBetweenJobGeneration());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IStructureMiniJobConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StructureMiniJobConfigRecord
	 */
	public StructureMiniJobConfigRecord() {
		super(StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG);
	}

	/**
	 * Create a detached, initialised StructureMiniJobConfigRecord
	 */
	public StructureMiniJobConfigRecord(Integer structId, Integer generatedJobLimit, Integer hoursBetweenJobGeneration) {
		super(StructureMiniJobConfig.STRUCTURE_MINI_JOB_CONFIG);

		setValue(0, structId);
		setValue(1, generatedJobLimit);
		setValue(2, hoursBetweenJobGeneration);
	}
}
