/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

	private static final long serialVersionUID = 492813566;

	/**
	 * The reference instance of <code>mobsters.user</code>
	 */
	public static final User USER = new User();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserRecord> getRecordType() {
		return UserRecord.class;
	}

	/**
	 * The column <code>mobsters.user.id</code>.
	 */
	public final TableField<UserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.user.name</code>.
	 */
	public final TableField<UserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "");

	/**
	 * The column <code>mobsters.user.level</code>.
	 */
	public final TableField<UserRecord, Integer> LEVEL = createField("level", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.user.gems</code>.
	 */
	public final TableField<UserRecord, Integer> GEMS = createField("gems", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.user.cash</code>. soft currency
	 */
	public final TableField<UserRecord, Integer> CASH = createField("cash", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "soft currency");

	/**
	 * The column <code>mobsters.user.oil</code>. soft currency
	 */
	public final TableField<UserRecord, Integer> OIL = createField("oil", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "soft currency");

	/**
	 * The column <code>mobsters.user.experience</code>.
	 */
	public final TableField<UserRecord, Integer> EXPERIENCE = createField("experience", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.tasks_completed</code>.
	 */
	public final TableField<UserRecord, Integer> TASKS_COMPLETED = createField("tasks_completed", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.referral_code</code>.
	 */
	public final TableField<UserRecord, String> REFERRAL_CODE = createField("referral_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>mobsters.user.num_referrals</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_REFERRALS = createField("num_referrals", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.udid_for_history</code>.
	 */
	public final TableField<UserRecord, String> UDID_FOR_HISTORY = createField("udid_for_history", org.jooq.impl.SQLDataType.CHAR.length(250).nullable(false), this, "");

	/**
	 * The column <code>mobsters.user.last_login</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_LOGIN = createField("last_login", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.last_logout</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_LOGOUT = createField("last_logout", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.device_token</code>.
	 */
	public final TableField<UserRecord, String> DEVICE_TOKEN = createField("device_token", org.jooq.impl.SQLDataType.VARCHAR.length(90), this, "");

	/**
	 * The column <code>mobsters.user.num_badges</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_BADGES = createField("num_badges", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.is_fake</code>.
	 */
	public final TableField<UserRecord, Byte> IS_FAKE = createField("is_fake", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.create_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.is_admin</code>.
	 */
	public final TableField<UserRecord, Byte> IS_ADMIN = createField("is_admin", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.apsalar_id</code>.
	 */
	public final TableField<UserRecord, String> APSALAR_ID = createField("apsalar_id", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * The column <code>mobsters.user.num_coins_retrieved_from_structs</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_COINS_RETRIEVED_FROM_STRUCTS = createField("num_coins_retrieved_from_structs", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.num_oil_retrieved_from_structs</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_OIL_RETRIEVED_FROM_STRUCTS = createField("num_oil_retrieved_from_structs", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.num_consecutive_days_played</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_CONSECUTIVE_DAYS_PLAYED = createField("num_consecutive_days_played", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.clan_id</code>.
	 */
	public final TableField<UserRecord, String> CLAN_ID = createField("clan_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

	/**
	 * The column <code>mobsters.user.last_wall_post_notification_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_WALL_POST_NOTIFICATION_TIME = createField("last_wall_post_notification_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.kabam_naid</code>.
	 */
	public final TableField<UserRecord, Integer> KABAM_NAID = createField("kabam_naid", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.user.has_received_fb_reward</code>.
	 */
	public final TableField<UserRecord, Byte> HAS_RECEIVED_FB_REWARD = createField("has_received_fb_reward", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.num_beginner_sales_purchased</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_BEGINNER_SALES_PURCHASED = createField("num_beginner_sales_purchased", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.facebook_id</code>.
	 */
	public final TableField<UserRecord, String> FACEBOOK_ID = createField("facebook_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.user.fb_id_set_on_user_create</code>.
	 */
	public final TableField<UserRecord, Boolean> FB_ID_SET_ON_USER_CREATE = createField("fb_id_set_on_user_create", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.game_center_id</code>.
	 */
	public final TableField<UserRecord, String> GAME_CENTER_ID = createField("game_center_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.user.udid</code>.
	 */
	public final TableField<UserRecord, String> UDID = createField("udid", org.jooq.impl.SQLDataType.CHAR.length(250), this, "");

	/**
	 * The column <code>mobsters.user.last_obstacle_spawned_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_OBSTACLE_SPAWNED_TIME = createField("last_obstacle_spawned_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.num_obstacles_removed</code>.
	 */
	public final TableField<UserRecord, Integer> NUM_OBSTACLES_REMOVED = createField("num_obstacles_removed", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.last_mini_job_generated_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_MINI_JOB_GENERATED_TIME = createField("last_mini_job_generated_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.avatar_monster_id</code>.
	 */
	public final TableField<UserRecord, Integer> AVATAR_MONSTER_ID = createField("avatar_monster_id", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.email</code>.
	 */
	public final TableField<UserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>mobsters.user.fb_data</code>.
	 */
	public final TableField<UserRecord, String> FB_DATA = createField("fb_data", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mobsters.user.last_free_booster_pack_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_FREE_BOOSTER_PACK_TIME = createField("last_free_booster_pack_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.clan_helps</code>.
	 */
	public final TableField<UserRecord, Integer> CLAN_HELPS = createField("clan_helps", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.last_secret_gift_collect_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_SECRET_GIFT_COLLECT_TIME = createField("last_secret_gift_collect_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.pvp_defending_message</code>.
	 */
	public final TableField<UserRecord, String> PVP_DEFENDING_MESSAGE = createField("pvp_defending_message", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mobsters.user.last_team_donate_solicitation</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_TEAM_DONATE_SOLICITATION = createField("last_team_donate_solicitation", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.bought_rigged_booster_pack</code>.
	 */
	public final TableField<UserRecord, Boolean> BOUGHT_RIGGED_BOOSTER_PACK = createField("bought_rigged_booster_pack", org.jooq.impl.SQLDataType.BIT, this, "");

	/**
	 * The column <code>mobsters.user.sales_value</code>. 0: never bought anything
1: has bought a 4.99
2: has bought a 9.99
3: has bought a 19.99
4: has bought a 49.99
5: has bought a 99.99
	 */
	public final TableField<UserRecord, Integer> SALES_VALUE = createField("sales_value", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "0: never bought anything\n1: has bought a 4.99\n2: has bought a 9.99\n3: has bought a 19.99\n4: has bought a 49.99\n5: has bought a 99.99");

	/**
	 * The column <code>mobsters.user.sales_last_purchase_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> SALES_LAST_PURCHASE_TIME = createField("sales_last_purchase_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.sales_jump_two_tiers</code>.
	 */
	public final TableField<UserRecord, Boolean> SALES_JUMP_TWO_TIERS = createField("sales_jump_two_tiers", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.total_strength</code>.
	 */
	public final TableField<UserRecord, Integer> TOTAL_STRENGTH = createField("total_strength", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.segmentation_group</code>. starter/builder pack: alex/arin/ashwin/byron vs cooper
	group numbers 1-50:cooper,  51-100: alex

	 */
	public final TableField<UserRecord, Integer> SEGMENTATION_GROUP = createField("segmentation_group", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "starter/builder pack: alex/arin/ashwin/byron vs cooper\n	group numbers 1-50:cooper,  51-100: alex\n");

	/**
	 * The column <code>mobsters.user.gacha_credits</code>.
	 */
	public final TableField<UserRecord, Integer> GACHA_CREDITS = createField("gacha_credits", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.user.last_tango_gift_sent_time</code>.
	 */
	public final TableField<UserRecord, Timestamp> LAST_TANGO_GIFT_SENT_TIME = createField("last_tango_gift_sent_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.user.tango_id</code>.
	 */
	public final TableField<UserRecord, String> TANGO_ID = createField("tango_id", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.user.highest_toon_atk</code>. used to scale cake kids
	 */
	public final TableField<UserRecord, Integer> HIGHEST_TOON_ATK = createField("highest_toon_atk", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "used to scale cake kids");

	/**
	 * The column <code>mobsters.user.highest_toon_hp</code>. used to scale cake kids
	 */
	public final TableField<UserRecord, Integer> HIGHEST_TOON_HP = createField("highest_toon_hp", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "used to scale cake kids");

	/**
	 * Create a <code>mobsters.user</code> table reference
	 */
	public User() {
		this("user", null);
	}

	/**
	 * Create an aliased <code>mobsters.user</code> table reference
	 */
	public User(String alias) {
		this(alias, USER);
	}

	private User(String alias, Table<UserRecord> aliased) {
		this(alias, aliased, null);
	}

	private User(String alias, Table<UserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserRecord> getPrimaryKey() {
		return Keys.KEY_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserRecord>> getKeys() {
		return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY, Keys.KEY_USER_USER_2eRECRUIT_CODE_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public User as(String alias) {
		return new User(alias, this);
	}

	/**
	 * Rename this table
	 */
	public User rename(String name) {
		return new User(name, null);
	}
}
