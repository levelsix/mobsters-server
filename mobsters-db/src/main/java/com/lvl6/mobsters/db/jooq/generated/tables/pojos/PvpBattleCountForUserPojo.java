/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IPvpBattleCountForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "pvp_battle_count_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"attacker_id", "defender_id", "date"})
})
public class PvpBattleCountForUserPojo implements IPvpBattleCountForUser {

	private static final long serialVersionUID = -436719726;

	private String    attackerId;
	private String    defenderId;
	private Timestamp date;
	private Integer   count;

	public PvpBattleCountForUserPojo() {}

	public PvpBattleCountForUserPojo(PvpBattleCountForUserPojo value) {
		this.attackerId = value.attackerId;
		this.defenderId = value.defenderId;
		this.date = value.date;
		this.count = value.count;
	}

	public PvpBattleCountForUserPojo(
		String    attackerId,
		String    defenderId,
		Timestamp date,
		Integer   count
	) {
		this.attackerId = attackerId;
		this.defenderId = defenderId;
		this.date = date;
		this.count = count;
	}

	@Column(name = "attacker_id", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getAttackerId() {
		return this.attackerId;
	}

	@Override
	public PvpBattleCountForUserPojo setAttackerId(String attackerId) {
		this.attackerId = attackerId;
		return this;
	}

	@Column(name = "defender_id", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getDefenderId() {
		return this.defenderId;
	}

	@Override
	public PvpBattleCountForUserPojo setDefenderId(String defenderId) {
		this.defenderId = defenderId;
		return this;
	}

	@Column(name = "date", nullable = false)
	@NotNull
	@Override
	public Timestamp getDate() {
		return this.date;
	}

	@Override
	public PvpBattleCountForUserPojo setDate(Timestamp date) {
		this.date = date;
		return this;
	}

	@Column(name = "count", precision = 10)
	@Override
	public Integer getCount() {
		return this.count;
	}

	@Override
	public PvpBattleCountForUserPojo setCount(Integer count) {
		this.count = count;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPvpBattleCountForUser from) {
		setAttackerId(from.getAttackerId());
		setDefenderId(from.getDefenderId());
		setDate(from.getDate());
		setCount(from.getCount());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPvpBattleCountForUser> E into(E into) {
		into.from(this);
		return into;
	}


	public String toString() {
		com.lvl6.mobsters.db.jooq.generated.tables.records.PvpBattleCountForUserRecord poop = new com.lvl6.mobsters.db.jooq.generated.tables.records.PvpBattleCountForUserRecord();
		poop.from(this);
		return "PvpBattleCountForUserPojo[" + poop.valuesRow() + "]";
	}
}
