/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_config", schema = "mobsters")
public class MonsterConfigPojo implements IMonsterConfig {

	private static final long serialVersionUID = 1874190650;

	private Integer id;
	private String  evolutionGroup;
	private String  monsterGroup;
	private String  quality;
	private Byte    evolutionLevel;
	private String  displayName;
	private String  element;
	private String  imagePrefix;
	private Byte    numPuzzlePieces;
	private Integer minutesToCombinePieces;
	private Short   maxLevel;
	private Integer evolutionMonsterId;
	private Integer evolutionCatalystMonsterId;
	private Integer minutesToEvolve;
	private Byte    numEvolutionCatalysts;
	private String  carrotRecruited;
	private String  carrotDefeated;
	private String  carrotEvolved;
	private String  description;
	private String  evolutionCost;
	private String  animationType;
	private Integer verticalPixelOffset;
	private String  atkSoundFile;
	private Integer atkSoundAnimationFrame;
	private Integer atkAnimationRepeatedFramesStart;
	private Integer atkAnimationRepeatedFramesEnd;
	private String  shortName;
	private Double  shadowScaleFactor;
	private Integer baseOffensiveSkillId;
	private Integer baseDefensiveSkillId;
	private Integer pvpMonsterDropId;

	public MonsterConfigPojo() {}

	public MonsterConfigPojo(MonsterConfigPojo value) {
		this.id = value.id;
		this.evolutionGroup = value.evolutionGroup;
		this.monsterGroup = value.monsterGroup;
		this.quality = value.quality;
		this.evolutionLevel = value.evolutionLevel;
		this.displayName = value.displayName;
		this.element = value.element;
		this.imagePrefix = value.imagePrefix;
		this.numPuzzlePieces = value.numPuzzlePieces;
		this.minutesToCombinePieces = value.minutesToCombinePieces;
		this.maxLevel = value.maxLevel;
		this.evolutionMonsterId = value.evolutionMonsterId;
		this.evolutionCatalystMonsterId = value.evolutionCatalystMonsterId;
		this.minutesToEvolve = value.minutesToEvolve;
		this.numEvolutionCatalysts = value.numEvolutionCatalysts;
		this.carrotRecruited = value.carrotRecruited;
		this.carrotDefeated = value.carrotDefeated;
		this.carrotEvolved = value.carrotEvolved;
		this.description = value.description;
		this.evolutionCost = value.evolutionCost;
		this.animationType = value.animationType;
		this.verticalPixelOffset = value.verticalPixelOffset;
		this.atkSoundFile = value.atkSoundFile;
		this.atkSoundAnimationFrame = value.atkSoundAnimationFrame;
		this.atkAnimationRepeatedFramesStart = value.atkAnimationRepeatedFramesStart;
		this.atkAnimationRepeatedFramesEnd = value.atkAnimationRepeatedFramesEnd;
		this.shortName = value.shortName;
		this.shadowScaleFactor = value.shadowScaleFactor;
		this.baseOffensiveSkillId = value.baseOffensiveSkillId;
		this.baseDefensiveSkillId = value.baseDefensiveSkillId;
		this.pvpMonsterDropId = value.pvpMonsterDropId;
	}

	public MonsterConfigPojo(
		Integer id,
		String  evolutionGroup,
		String  monsterGroup,
		String  quality,
		Byte    evolutionLevel,
		String  displayName,
		String  element,
		String  imagePrefix,
		Byte    numPuzzlePieces,
		Integer minutesToCombinePieces,
		Short   maxLevel,
		Integer evolutionMonsterId,
		Integer evolutionCatalystMonsterId,
		Integer minutesToEvolve,
		Byte    numEvolutionCatalysts,
		String  carrotRecruited,
		String  carrotDefeated,
		String  carrotEvolved,
		String  description,
		String  evolutionCost,
		String  animationType,
		Integer verticalPixelOffset,
		String  atkSoundFile,
		Integer atkSoundAnimationFrame,
		Integer atkAnimationRepeatedFramesStart,
		Integer atkAnimationRepeatedFramesEnd,
		String  shortName,
		Double  shadowScaleFactor,
		Integer baseOffensiveSkillId,
		Integer baseDefensiveSkillId,
		Integer pvpMonsterDropId
	) {
		this.id = id;
		this.evolutionGroup = evolutionGroup;
		this.monsterGroup = monsterGroup;
		this.quality = quality;
		this.evolutionLevel = evolutionLevel;
		this.displayName = displayName;
		this.element = element;
		this.imagePrefix = imagePrefix;
		this.numPuzzlePieces = numPuzzlePieces;
		this.minutesToCombinePieces = minutesToCombinePieces;
		this.maxLevel = maxLevel;
		this.evolutionMonsterId = evolutionMonsterId;
		this.evolutionCatalystMonsterId = evolutionCatalystMonsterId;
		this.minutesToEvolve = minutesToEvolve;
		this.numEvolutionCatalysts = numEvolutionCatalysts;
		this.carrotRecruited = carrotRecruited;
		this.carrotDefeated = carrotDefeated;
		this.carrotEvolved = carrotEvolved;
		this.description = description;
		this.evolutionCost = evolutionCost;
		this.animationType = animationType;
		this.verticalPixelOffset = verticalPixelOffset;
		this.atkSoundFile = atkSoundFile;
		this.atkSoundAnimationFrame = atkSoundAnimationFrame;
		this.atkAnimationRepeatedFramesStart = atkAnimationRepeatedFramesStart;
		this.atkAnimationRepeatedFramesEnd = atkAnimationRepeatedFramesEnd;
		this.shortName = shortName;
		this.shadowScaleFactor = shadowScaleFactor;
		this.baseOffensiveSkillId = baseOffensiveSkillId;
		this.baseDefensiveSkillId = baseDefensiveSkillId;
		this.pvpMonsterDropId = pvpMonsterDropId;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public MonsterConfigPojo setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "evolution_group", length = 45)
	@Size(max = 45)
	@Override
	public String getEvolutionGroup() {
		return this.evolutionGroup;
	}

	@Override
	public MonsterConfigPojo setEvolutionGroup(String evolutionGroup) {
		this.evolutionGroup = evolutionGroup;
		return this;
	}

	@Column(name = "monster_group", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterGroup() {
		return this.monsterGroup;
	}

	@Override
	public MonsterConfigPojo setMonsterGroup(String monsterGroup) {
		this.monsterGroup = monsterGroup;
		return this;
	}

	@Column(name = "quality", length = 15)
	@Size(max = 15)
	@Override
	public String getQuality() {
		return this.quality;
	}

	@Override
	public MonsterConfigPojo setQuality(String quality) {
		this.quality = quality;
		return this;
	}

	@Column(name = "evolution_level", precision = 3)
	@Override
	public Byte getEvolutionLevel() {
		return this.evolutionLevel;
	}

	@Override
	public MonsterConfigPojo setEvolutionLevel(Byte evolutionLevel) {
		this.evolutionLevel = evolutionLevel;
		return this;
	}

	@Column(name = "display_name", length = 45)
	@Size(max = 45)
	@Override
	public String getDisplayName() {
		return this.displayName;
	}

	@Override
	public MonsterConfigPojo setDisplayName(String displayName) {
		this.displayName = displayName;
		return this;
	}

	@Column(name = "element", length = 15)
	@Size(max = 15)
	@Override
	public String getElement() {
		return this.element;
	}

	@Override
	public MonsterConfigPojo setElement(String element) {
		this.element = element;
		return this;
	}

	@Column(name = "image_prefix", length = 45)
	@Size(max = 45)
	@Override
	public String getImagePrefix() {
		return this.imagePrefix;
	}

	@Override
	public MonsterConfigPojo setImagePrefix(String imagePrefix) {
		this.imagePrefix = imagePrefix;
		return this;
	}

	@Column(name = "num_puzzle_pieces", precision = 3)
	@Override
	public Byte getNumPuzzlePieces() {
		return this.numPuzzlePieces;
	}

	@Override
	public MonsterConfigPojo setNumPuzzlePieces(Byte numPuzzlePieces) {
		this.numPuzzlePieces = numPuzzlePieces;
		return this;
	}

	@Column(name = "minutes_to_combine_pieces", precision = 7)
	@Override
	public Integer getMinutesToCombinePieces() {
		return this.minutesToCombinePieces;
	}

	@Override
	public MonsterConfigPojo setMinutesToCombinePieces(Integer minutesToCombinePieces) {
		this.minutesToCombinePieces = minutesToCombinePieces;
		return this;
	}

	@Column(name = "max_level", precision = 5)
	@Override
	public Short getMaxLevel() {
		return this.maxLevel;
	}

	@Override
	public MonsterConfigPojo setMaxLevel(Short maxLevel) {
		this.maxLevel = maxLevel;
		return this;
	}

	@Column(name = "evolution_monster_id", precision = 10)
	@Override
	public Integer getEvolutionMonsterId() {
		return this.evolutionMonsterId;
	}

	@Override
	public MonsterConfigPojo setEvolutionMonsterId(Integer evolutionMonsterId) {
		this.evolutionMonsterId = evolutionMonsterId;
		return this;
	}

	@Column(name = "evolution_catalyst_monster_id", precision = 10)
	@Override
	public Integer getEvolutionCatalystMonsterId() {
		return this.evolutionCatalystMonsterId;
	}

	@Override
	public MonsterConfigPojo setEvolutionCatalystMonsterId(Integer evolutionCatalystMonsterId) {
		this.evolutionCatalystMonsterId = evolutionCatalystMonsterId;
		return this;
	}

	@Column(name = "minutes_to_evolve", precision = 7)
	@Override
	public Integer getMinutesToEvolve() {
		return this.minutesToEvolve;
	}

	@Override
	public MonsterConfigPojo setMinutesToEvolve(Integer minutesToEvolve) {
		this.minutesToEvolve = minutesToEvolve;
		return this;
	}

	@Column(name = "num_evolution_catalysts", precision = 3)
	@Override
	public Byte getNumEvolutionCatalysts() {
		return this.numEvolutionCatalysts;
	}

	@Override
	public MonsterConfigPojo setNumEvolutionCatalysts(Byte numEvolutionCatalysts) {
		this.numEvolutionCatalysts = numEvolutionCatalysts;
		return this;
	}

	@Column(name = "carrot_recruited", length = 100)
	@Size(max = 100)
	@Override
	public String getCarrotRecruited() {
		return this.carrotRecruited;
	}

	@Override
	public MonsterConfigPojo setCarrotRecruited(String carrotRecruited) {
		this.carrotRecruited = carrotRecruited;
		return this;
	}

	@Column(name = "carrot_defeated", length = 100)
	@Size(max = 100)
	@Override
	public String getCarrotDefeated() {
		return this.carrotDefeated;
	}

	@Override
	public MonsterConfigPojo setCarrotDefeated(String carrotDefeated) {
		this.carrotDefeated = carrotDefeated;
		return this;
	}

	@Column(name = "carrot_evolved", length = 100)
	@Size(max = 100)
	@Override
	public String getCarrotEvolved() {
		return this.carrotEvolved;
	}

	@Override
	public MonsterConfigPojo setCarrotEvolved(String carrotEvolved) {
		this.carrotEvolved = carrotEvolved;
		return this;
	}

	@Column(name = "description", length = 65535)
	@Size(max = 65535)
	@Override
	public String getDescription() {
		return this.description;
	}

	@Override
	public MonsterConfigPojo setDescription(String description) {
		this.description = description;
		return this;
	}

	@Column(name = "evolution_cost", length = 45)
	@Size(max = 45)
	@Override
	public String getEvolutionCost() {
		return this.evolutionCost;
	}

	@Override
	public MonsterConfigPojo setEvolutionCost(String evolutionCost) {
		this.evolutionCost = evolutionCost;
		return this;
	}

	@Column(name = "animation_type", length = 45)
	@Size(max = 45)
	@Override
	public String getAnimationType() {
		return this.animationType;
	}

	@Override
	public MonsterConfigPojo setAnimationType(String animationType) {
		this.animationType = animationType;
		return this;
	}

	@Column(name = "vertical_pixel_offset", precision = 10)
	@Override
	public Integer getVerticalPixelOffset() {
		return this.verticalPixelOffset;
	}

	@Override
	public MonsterConfigPojo setVerticalPixelOffset(Integer verticalPixelOffset) {
		this.verticalPixelOffset = verticalPixelOffset;
		return this;
	}

	@Column(name = "atk_sound_file", length = 45)
	@Size(max = 45)
	@Override
	public String getAtkSoundFile() {
		return this.atkSoundFile;
	}

	@Override
	public MonsterConfigPojo setAtkSoundFile(String atkSoundFile) {
		this.atkSoundFile = atkSoundFile;
		return this;
	}

	@Column(name = "atk_sound_animation_frame", precision = 10)
	@Override
	public Integer getAtkSoundAnimationFrame() {
		return this.atkSoundAnimationFrame;
	}

	@Override
	public MonsterConfigPojo setAtkSoundAnimationFrame(Integer atkSoundAnimationFrame) {
		this.atkSoundAnimationFrame = atkSoundAnimationFrame;
		return this;
	}

	@Column(name = "atk_animation_repeated_frames_start", precision = 10)
	@Override
	public Integer getAtkAnimationRepeatedFramesStart() {
		return this.atkAnimationRepeatedFramesStart;
	}

	@Override
	public MonsterConfigPojo setAtkAnimationRepeatedFramesStart(Integer atkAnimationRepeatedFramesStart) {
		this.atkAnimationRepeatedFramesStart = atkAnimationRepeatedFramesStart;
		return this;
	}

	@Column(name = "atk_animation_repeated_frames_end", precision = 10)
	@Override
	public Integer getAtkAnimationRepeatedFramesEnd() {
		return this.atkAnimationRepeatedFramesEnd;
	}

	@Override
	public MonsterConfigPojo setAtkAnimationRepeatedFramesEnd(Integer atkAnimationRepeatedFramesEnd) {
		this.atkAnimationRepeatedFramesEnd = atkAnimationRepeatedFramesEnd;
		return this;
	}

	@Column(name = "short_name", length = 45)
	@Size(max = 45)
	@Override
	public String getShortName() {
		return this.shortName;
	}

	@Override
	public MonsterConfigPojo setShortName(String shortName) {
		this.shortName = shortName;
		return this;
	}

	@Column(name = "shadow_scale_factor", precision = 12)
	@Override
	public Double getShadowScaleFactor() {
		return this.shadowScaleFactor;
	}

	@Override
	public MonsterConfigPojo setShadowScaleFactor(Double shadowScaleFactor) {
		this.shadowScaleFactor = shadowScaleFactor;
		return this;
	}

	@Column(name = "base_offensive_skill_id", precision = 10)
	@Override
	public Integer getBaseOffensiveSkillId() {
		return this.baseOffensiveSkillId;
	}

	@Override
	public MonsterConfigPojo setBaseOffensiveSkillId(Integer baseOffensiveSkillId) {
		this.baseOffensiveSkillId = baseOffensiveSkillId;
		return this;
	}

	@Column(name = "base_defensive_skill_id", precision = 10)
	@Override
	public Integer getBaseDefensiveSkillId() {
		return this.baseDefensiveSkillId;
	}

	@Override
	public MonsterConfigPojo setBaseDefensiveSkillId(Integer baseDefensiveSkillId) {
		this.baseDefensiveSkillId = baseDefensiveSkillId;
		return this;
	}

	@Column(name = "pvp_monster_drop_id", precision = 10)
	@Override
	public Integer getPvpMonsterDropId() {
		return this.pvpMonsterDropId;
	}

	@Override
	public MonsterConfigPojo setPvpMonsterDropId(Integer pvpMonsterDropId) {
		this.pvpMonsterDropId = pvpMonsterDropId;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterConfig from) {
		setId(from.getId());
		setEvolutionGroup(from.getEvolutionGroup());
		setMonsterGroup(from.getMonsterGroup());
		setQuality(from.getQuality());
		setEvolutionLevel(from.getEvolutionLevel());
		setDisplayName(from.getDisplayName());
		setElement(from.getElement());
		setImagePrefix(from.getImagePrefix());
		setNumPuzzlePieces(from.getNumPuzzlePieces());
		setMinutesToCombinePieces(from.getMinutesToCombinePieces());
		setMaxLevel(from.getMaxLevel());
		setEvolutionMonsterId(from.getEvolutionMonsterId());
		setEvolutionCatalystMonsterId(from.getEvolutionCatalystMonsterId());
		setMinutesToEvolve(from.getMinutesToEvolve());
		setNumEvolutionCatalysts(from.getNumEvolutionCatalysts());
		setCarrotRecruited(from.getCarrotRecruited());
		setCarrotDefeated(from.getCarrotDefeated());
		setCarrotEvolved(from.getCarrotEvolved());
		setDescription(from.getDescription());
		setEvolutionCost(from.getEvolutionCost());
		setAnimationType(from.getAnimationType());
		setVerticalPixelOffset(from.getVerticalPixelOffset());
		setAtkSoundFile(from.getAtkSoundFile());
		setAtkSoundAnimationFrame(from.getAtkSoundAnimationFrame());
		setAtkAnimationRepeatedFramesStart(from.getAtkAnimationRepeatedFramesStart());
		setAtkAnimationRepeatedFramesEnd(from.getAtkAnimationRepeatedFramesEnd());
		setShortName(from.getShortName());
		setShadowScaleFactor(from.getShadowScaleFactor());
		setBaseOffensiveSkillId(from.getBaseOffensiveSkillId());
		setBaseDefensiveSkillId(from.getBaseDefensiveSkillId());
		setPvpMonsterDropId(from.getPvpMonsterDropId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterConfig> E into(E into) {
		into.from(this);
		return into;
	}


	public String toString() {
		com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterConfigRecord poop = new com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterConfigRecord();
		poop.from(this);
		return "MonsterConfigPojo[" + poop.valuesRow() + "]";
	}
}
