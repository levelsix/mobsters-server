/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.GiftRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IGiftRewardConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "gift_reward_config", schema = "mobsters")
public class GiftRewardConfigRecord extends UpdatableRecordImpl<GiftRewardConfigRecord> implements Record4<Integer, Integer, Integer, Double>, IGiftRewardConfig {

	private static final long serialVersionUID = 687191961;

	/**
	 * Setter for <code>mobsters.gift_reward_config.id</code>.
	 */
	@Override
	public GiftRewardConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.gift_reward_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.gift_reward_config.gift_id</code>.
	 */
	@Override
	public GiftRewardConfigRecord setGiftId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.gift_reward_config.gift_id</code>.
	 */
	@Column(name = "gift_id", precision = 10)
	@Override
	public Integer getGiftId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.gift_reward_config.reward_id</code>.
	 */
	@Override
	public GiftRewardConfigRecord setRewardId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.gift_reward_config.reward_id</code>.
	 */
	@Column(name = "reward_id", precision = 10)
	@Override
	public Integer getRewardId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.gift_reward_config.chance_of_drop</code>. these all add up to a value of 1 per clan gift…unless you have serious qualms about that in which case let byron know
	 */
	@Override
	public GiftRewardConfigRecord setChanceOfDrop(Double value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.gift_reward_config.chance_of_drop</code>. these all add up to a value of 1 per clan gift…unless you have serious qualms about that in which case let byron know
	 */
	@Column(name = "chance_of_drop", precision = 12)
	@Override
	public Double getChanceOfDrop() {
		return (Double) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, Double> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, Double> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return GiftRewardConfig.GIFT_REWARD_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return GiftRewardConfig.GIFT_REWARD_CONFIG.GIFT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return GiftRewardConfig.GIFT_REWARD_CONFIG.REWARD_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field4() {
		return GiftRewardConfig.GIFT_REWARD_CONFIG.CHANCE_OF_DROP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getGiftId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getRewardId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value4() {
		return getChanceOfDrop();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftRewardConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftRewardConfigRecord value2(Integer value) {
		setGiftId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftRewardConfigRecord value3(Integer value) {
		setRewardId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftRewardConfigRecord value4(Double value) {
		setChanceOfDrop(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GiftRewardConfigRecord values(Integer value1, Integer value2, Integer value3, Double value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IGiftRewardConfig from) {
		setId(from.getId());
		setGiftId(from.getGiftId());
		setRewardId(from.getRewardId());
		setChanceOfDrop(from.getChanceOfDrop());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IGiftRewardConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached GiftRewardConfigRecord
	 */
	public GiftRewardConfigRecord() {
		super(GiftRewardConfig.GIFT_REWARD_CONFIG);
	}

	/**
	 * Create a detached, initialised GiftRewardConfigRecord
	 */
	public GiftRewardConfigRecord(Integer id, Integer giftId, Integer rewardId, Double chanceOfDrop) {
		super(GiftRewardConfig.GIFT_REWARD_CONFIG);

		setValue(0, id);
		setValue(1, giftId);
		setValue(2, rewardId);
		setValue(3, chanceOfDrop);
	}
}
