/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventConfigRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiniEventConfig extends TableImpl<MiniEventConfigRecord> {

	private static final long serialVersionUID = 1609415205;

	/**
	 * The reference instance of <code>mobsters.mini_event_config</code>
	 */
	public static final MiniEventConfig MINI_EVENT_CONFIG = new MiniEventConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MiniEventConfigRecord> getRecordType() {
		return MiniEventConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.mini_event_config.id</code>.
	 */
	public final TableField<MiniEventConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_event_config.start_time</code>.
	 */
	public final TableField<MiniEventConfigRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.mini_event_config.end_time</code>.
	 */
	public final TableField<MiniEventConfigRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.mini_event_config.name</code>.
	 */
	public final TableField<MiniEventConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(75), this, "");

	/**
	 * The column <code>mobsters.mini_event_config.description</code>.
	 */
	public final TableField<MiniEventConfigRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>mobsters.mini_event_config.img</code>.
	 */
	public final TableField<MiniEventConfigRecord, String> IMG = createField("img", org.jooq.impl.SQLDataType.VARCHAR.length(75), this, "");

	/**
	 * The column <code>mobsters.mini_event_config.icon</code>.
	 */
	public final TableField<MiniEventConfigRecord, String> ICON = createField("icon", org.jooq.impl.SQLDataType.VARCHAR.length(75), this, "");

	/**
	 * Create a <code>mobsters.mini_event_config</code> table reference
	 */
	public MiniEventConfig() {
		this("mini_event_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.mini_event_config</code> table reference
	 */
	public MiniEventConfig(String alias) {
		this(alias, MINI_EVENT_CONFIG);
	}

	private MiniEventConfig(String alias, Table<MiniEventConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private MiniEventConfig(String alias, Table<MiniEventConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MiniEventConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MINI_EVENT_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MiniEventConfigRecord> getPrimaryKey() {
		return Keys.KEY_MINI_EVENT_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MiniEventConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<MiniEventConfigRecord>>asList(Keys.KEY_MINI_EVENT_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventConfig as(String alias) {
		return new MiniEventConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MiniEventConfig rename(String name) {
		return new MiniEventConfig(name, null);
	}
}
