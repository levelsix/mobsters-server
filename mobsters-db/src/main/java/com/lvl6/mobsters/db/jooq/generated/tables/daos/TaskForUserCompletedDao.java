/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskForUserCompleted;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.TaskForUserCompletedPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskForUserCompletedRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskForUserCompletedDao extends DAOImpl<TaskForUserCompletedRecord, TaskForUserCompletedPojo, Record2<String, Integer>> {

	/**
	 * Create a new TaskForUserCompletedDao without any configuration
	 */
	public TaskForUserCompletedDao() {
		super(TaskForUserCompleted.TASK_FOR_USER_COMPLETED, TaskForUserCompletedPojo.class);
	}

	/**
	 * Create a new TaskForUserCompletedDao with an attached configuration
	 */
	public TaskForUserCompletedDao(Configuration configuration) {
		super(TaskForUserCompleted.TASK_FOR_USER_COMPLETED, TaskForUserCompletedPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<String, Integer> getId(TaskForUserCompletedPojo object) {
		return compositeKeyRecord(object.getUserId(), object.getTaskId());
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<TaskForUserCompletedPojo> fetchByUserId(String... values) {
		return fetch(TaskForUserCompleted.TASK_FOR_USER_COMPLETED.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>task_id IN (values)</code>
	 */
	public List<TaskForUserCompletedPojo> fetchByTaskId(Integer... values) {
		return fetch(TaskForUserCompleted.TASK_FOR_USER_COMPLETED.TASK_ID, values);
	}

	/**
	 * Fetch records that have <code>time_of_entry IN (values)</code>
	 */
	public List<TaskForUserCompletedPojo> fetchByTimeOfEntry(Timestamp... values) {
		return fetch(TaskForUserCompleted.TASK_FOR_USER_COMPLETED.TIME_OF_ENTRY, values);
	}

	/**
	 * Fetch records that have <code>unclaimed_cash IN (values)</code>
	 */
	public List<TaskForUserCompletedPojo> fetchByUnclaimedCash(Integer... values) {
		return fetch(TaskForUserCompleted.TASK_FOR_USER_COMPLETED.UNCLAIMED_CASH, values);
	}

	/**
	 * Fetch records that have <code>unclaimed_oil IN (values)</code>
	 */
	public List<TaskForUserCompletedPojo> fetchByUnclaimedOil(Integer... values) {
		return fetch(TaskForUserCompleted.TASK_FOR_USER_COMPLETED.UNCLAIMED_OIL, values);
	}
}
