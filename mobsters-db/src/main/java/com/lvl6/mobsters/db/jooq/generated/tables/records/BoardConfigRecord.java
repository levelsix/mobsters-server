/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.BoardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IBoardConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "board_config", schema = "mobsters")
public class BoardConfigRecord extends UpdatableRecordImpl<BoardConfigRecord> implements Record4<Integer, Byte, Byte, String>, IBoardConfig {

	private static final long serialVersionUID = 818817224;

	/**
	 * Setter for <code>mobsters.board_config.id</code>.
	 */
	@Override
	public BoardConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.board_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.board_config.width</code>.
	 */
	@Override
	public BoardConfigRecord setWidth(Byte value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.board_config.width</code>.
	 */
	@Column(name = "width", precision = 3)
	@Override
	public Byte getWidth() {
		return (Byte) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.board_config.height</code>.
	 */
	@Override
	public BoardConfigRecord setHeight(Byte value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.board_config.height</code>.
	 */
	@Column(name = "height", precision = 3)
	@Override
	public Byte getHeight() {
		return (Byte) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.board_config.orb_elements</code>. bit representation of what elements are active. Example 100001, only two elements are active
	 */
	@Override
	public BoardConfigRecord setOrbElements(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.board_config.orb_elements</code>. bit representation of what elements are active. Example 100001, only two elements are active
	 */
	@Column(name = "orb_elements", length = 255)
	@Size(max = 255)
	@Override
	public String getOrbElements() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Byte, Byte, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Byte, Byte, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return BoardConfig.BOARD_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field2() {
		return BoardConfig.BOARD_CONFIG.WIDTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field3() {
		return BoardConfig.BOARD_CONFIG.HEIGHT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return BoardConfig.BOARD_CONFIG.ORB_ELEMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value2() {
		return getWidth();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value3() {
		return getHeight();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getOrbElements();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BoardConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BoardConfigRecord value2(Byte value) {
		setWidth(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BoardConfigRecord value3(Byte value) {
		setHeight(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BoardConfigRecord value4(String value) {
		setOrbElements(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BoardConfigRecord values(Integer value1, Byte value2, Byte value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IBoardConfig from) {
		setId(from.getId());
		setWidth(from.getWidth());
		setHeight(from.getHeight());
		setOrbElements(from.getOrbElements());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IBoardConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BoardConfigRecord
	 */
	public BoardConfigRecord() {
		super(BoardConfig.BOARD_CONFIG);
	}

	/**
	 * Create a detached, initialised BoardConfigRecord
	 */
	public BoardConfigRecord(Integer id, Byte width, Byte height, String orbElements) {
		super(BoardConfig.BOARD_CONFIG);

		setValue(0, id);
		setValue(1, width);
		setValue(2, height);
		setValue(3, orbElements);
	}
}
