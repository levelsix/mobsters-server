/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_config", schema = "mobsters")
public class MonsterConfigRecord extends UpdatableRecordImpl<MonsterConfigRecord> implements IMonsterConfig {

	private static final long serialVersionUID = -1099659966;

	/**
	 * Setter for <code>mobsters.monster_config.id</code>.
	 */
	@Override
	public MonsterConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.monster_config.evolution_group</code>. This is used to group and order monsters in an evolution line.
	 */
	@Override
	public MonsterConfigRecord setEvolutionGroup(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.evolution_group</code>. This is used to group and order monsters in an evolution line.
	 */
	@Column(name = "evolution_group", length = 45)
	@Size(max = 45)
	@Override
	public String getEvolutionGroup() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.monster_config.monster_group</code>. This is to classify, group together different monsters.
	 */
	@Override
	public MonsterConfigRecord setMonsterGroup(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.monster_group</code>. This is to classify, group together different monsters.
	 */
	@Column(name = "monster_group", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterGroup() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.monster_config.quality</code>. common, uncommon, etc.
	 */
	@Override
	public MonsterConfigRecord setQuality(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.quality</code>. common, uncommon, etc.
	 */
	@Column(name = "quality", length = 15)
	@Size(max = 15)
	@Override
	public String getQuality() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.monster_config.evolution_level</code>.
	 */
	@Override
	public MonsterConfigRecord setEvolutionLevel(Byte value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.evolution_level</code>.
	 */
	@Column(name = "evolution_level", precision = 3)
	@Override
	public Byte getEvolutionLevel() {
		return (Byte) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.monster_config.display_name</code>.
	 */
	@Override
	public MonsterConfigRecord setDisplayName(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.display_name</code>.
	 */
	@Column(name = "display_name", length = 45)
	@Size(max = 45)
	@Override
	public String getDisplayName() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.monster_config.element</code>.
	 */
	@Override
	public MonsterConfigRecord setElement(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.element</code>.
	 */
	@Column(name = "element", length = 15)
	@Size(max = 15)
	@Override
	public String getElement() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.monster_config.image_prefix</code>.
	 */
	@Override
	public MonsterConfigRecord setImagePrefix(String value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.image_prefix</code>.
	 */
	@Column(name = "image_prefix", length = 45)
	@Size(max = 45)
	@Override
	public String getImagePrefix() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.monster_config.num_puzzle_pieces</code>.
	 */
	@Override
	public MonsterConfigRecord setNumPuzzlePieces(Byte value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.num_puzzle_pieces</code>.
	 */
	@Column(name = "num_puzzle_pieces", precision = 3)
	@Override
	public Byte getNumPuzzlePieces() {
		return (Byte) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.monster_config.minutes_to_combine_pieces</code>.
	 */
	@Override
	public MonsterConfigRecord setMinutesToCombinePieces(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.minutes_to_combine_pieces</code>.
	 */
	@Column(name = "minutes_to_combine_pieces", precision = 7)
	@Override
	public Integer getMinutesToCombinePieces() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.monster_config.max_level</code>.
	 */
	@Override
	public MonsterConfigRecord setMaxLevel(Short value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.max_level</code>.
	 */
	@Column(name = "max_level", precision = 5)
	@Override
	public Short getMaxLevel() {
		return (Short) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.monster_config.evolution_monster_id</code>.
	 */
	@Override
	public MonsterConfigRecord setEvolutionMonsterId(Integer value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.evolution_monster_id</code>.
	 */
	@Column(name = "evolution_monster_id", precision = 10)
	@Override
	public Integer getEvolutionMonsterId() {
		return (Integer) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.monster_config.evolution_catalyst_monster_id</code>.
	 */
	@Override
	public MonsterConfigRecord setEvolutionCatalystMonsterId(Integer value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.evolution_catalyst_monster_id</code>.
	 */
	@Column(name = "evolution_catalyst_monster_id", precision = 10)
	@Override
	public Integer getEvolutionCatalystMonsterId() {
		return (Integer) getValue(12);
	}

	/**
	 * Setter for <code>mobsters.monster_config.minutes_to_evolve</code>.
	 */
	@Override
	public MonsterConfigRecord setMinutesToEvolve(Integer value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.minutes_to_evolve</code>.
	 */
	@Column(name = "minutes_to_evolve", precision = 7)
	@Override
	public Integer getMinutesToEvolve() {
		return (Integer) getValue(13);
	}

	/**
	 * Setter for <code>mobsters.monster_config.num_evolution_catalysts</code>. Required amount of evolution_catalyst_monster_ids
	 */
	@Override
	public MonsterConfigRecord setNumEvolutionCatalysts(Byte value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.num_evolution_catalysts</code>. Required amount of evolution_catalyst_monster_ids
	 */
	@Column(name = "num_evolution_catalysts", precision = 3)
	@Override
	public Byte getNumEvolutionCatalysts() {
		return (Byte) getValue(14);
	}

	/**
	 * Setter for <code>mobsters.monster_config.carrot_recruited</code>.
	 */
	@Override
	public MonsterConfigRecord setCarrotRecruited(String value) {
		setValue(15, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.carrot_recruited</code>.
	 */
	@Column(name = "carrot_recruited", length = 100)
	@Size(max = 100)
	@Override
	public String getCarrotRecruited() {
		return (String) getValue(15);
	}

	/**
	 * Setter for <code>mobsters.monster_config.carrot_defeated</code>.
	 */
	@Override
	public MonsterConfigRecord setCarrotDefeated(String value) {
		setValue(16, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.carrot_defeated</code>.
	 */
	@Column(name = "carrot_defeated", length = 100)
	@Size(max = 100)
	@Override
	public String getCarrotDefeated() {
		return (String) getValue(16);
	}

	/**
	 * Setter for <code>mobsters.monster_config.carrot_evolved</code>.
	 */
	@Override
	public MonsterConfigRecord setCarrotEvolved(String value) {
		setValue(17, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.carrot_evolved</code>.
	 */
	@Column(name = "carrot_evolved", length = 100)
	@Size(max = 100)
	@Override
	public String getCarrotEvolved() {
		return (String) getValue(17);
	}

	/**
	 * Setter for <code>mobsters.monster_config.description</code>.
	 */
	@Override
	public MonsterConfigRecord setDescription(String value) {
		setValue(18, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.description</code>.
	 */
	@Column(name = "description", length = 65535)
	@Size(max = 65535)
	@Override
	public String getDescription() {
		return (String) getValue(18);
	}

	/**
	 * Setter for <code>mobsters.monster_config.evolution_cost</code>.
	 */
	@Override
	public MonsterConfigRecord setEvolutionCost(String value) {
		setValue(19, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.evolution_cost</code>.
	 */
	@Column(name = "evolution_cost", length = 45)
	@Size(max = 45)
	@Override
	public String getEvolutionCost() {
		return (String) getValue(19);
	}

	/**
	 * Setter for <code>mobsters.monster_config.animation_type</code>.
	 */
	@Override
	public MonsterConfigRecord setAnimationType(String value) {
		setValue(20, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.animation_type</code>.
	 */
	@Column(name = "animation_type", length = 45)
	@Size(max = 45)
	@Override
	public String getAnimationType() {
		return (String) getValue(20);
	}

	/**
	 * Setter for <code>mobsters.monster_config.vertical_pixel_offset</code>.
	 */
	@Override
	public MonsterConfigRecord setVerticalPixelOffset(Integer value) {
		setValue(21, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.vertical_pixel_offset</code>.
	 */
	@Column(name = "vertical_pixel_offset", precision = 10)
	@Override
	public Integer getVerticalPixelOffset() {
		return (Integer) getValue(21);
	}

	/**
	 * Setter for <code>mobsters.monster_config.atk_sound_file</code>.
	 */
	@Override
	public MonsterConfigRecord setAtkSoundFile(String value) {
		setValue(22, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.atk_sound_file</code>.
	 */
	@Column(name = "atk_sound_file", length = 45)
	@Size(max = 45)
	@Override
	public String getAtkSoundFile() {
		return (String) getValue(22);
	}

	/**
	 * Setter for <code>mobsters.monster_config.atk_sound_animation_frame</code>. frame number
	 */
	@Override
	public MonsterConfigRecord setAtkSoundAnimationFrame(Integer value) {
		setValue(23, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.atk_sound_animation_frame</code>. frame number
	 */
	@Column(name = "atk_sound_animation_frame", precision = 10)
	@Override
	public Integer getAtkSoundAnimationFrame() {
		return (Integer) getValue(23);
	}

	/**
	 * Setter for <code>mobsters.monster_config.atk_animation_repeated_frames_start</code>.
	 */
	@Override
	public MonsterConfigRecord setAtkAnimationRepeatedFramesStart(Integer value) {
		setValue(24, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.atk_animation_repeated_frames_start</code>.
	 */
	@Column(name = "atk_animation_repeated_frames_start", precision = 10)
	@Override
	public Integer getAtkAnimationRepeatedFramesStart() {
		return (Integer) getValue(24);
	}

	/**
	 * Setter for <code>mobsters.monster_config.atk_animation_repeated_frames_end</code>.
	 */
	@Override
	public MonsterConfigRecord setAtkAnimationRepeatedFramesEnd(Integer value) {
		setValue(25, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.atk_animation_repeated_frames_end</code>.
	 */
	@Column(name = "atk_animation_repeated_frames_end", precision = 10)
	@Override
	public Integer getAtkAnimationRepeatedFramesEnd() {
		return (Integer) getValue(25);
	}

	/**
	 * Setter for <code>mobsters.monster_config.short_name</code>.
	 */
	@Override
	public MonsterConfigRecord setShortName(String value) {
		setValue(26, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.short_name</code>.
	 */
	@Column(name = "short_name", length = 45)
	@Size(max = 45)
	@Override
	public String getShortName() {
		return (String) getValue(26);
	}

	/**
	 * Setter for <code>mobsters.monster_config.shadow_scale_factor</code>.
	 */
	@Override
	public MonsterConfigRecord setShadowScaleFactor(Double value) {
		setValue(27, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.shadow_scale_factor</code>.
	 */
	@Column(name = "shadow_scale_factor", precision = 12)
	@Override
	public Double getShadowScaleFactor() {
		return (Double) getValue(27);
	}

	/**
	 * Setter for <code>mobsters.monster_config.base_offensive_skill_id</code>.
	 */
	@Override
	public MonsterConfigRecord setBaseOffensiveSkillId(Integer value) {
		setValue(28, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.base_offensive_skill_id</code>.
	 */
	@Column(name = "base_offensive_skill_id", precision = 10)
	@Override
	public Integer getBaseOffensiveSkillId() {
		return (Integer) getValue(28);
	}

	/**
	 * Setter for <code>mobsters.monster_config.base_defensive_skill_id</code>.
	 */
	@Override
	public MonsterConfigRecord setBaseDefensiveSkillId(Integer value) {
		setValue(29, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.base_defensive_skill_id</code>.
	 */
	@Column(name = "base_defensive_skill_id", precision = 10)
	@Override
	public Integer getBaseDefensiveSkillId() {
		return (Integer) getValue(29);
	}

	/**
	 * Setter for <code>mobsters.monster_config.pvp_monster_drop_id</code>.
	 */
	@Override
	public MonsterConfigRecord setPvpMonsterDropId(Integer value) {
		setValue(30, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_config.pvp_monster_drop_id</code>.
	 */
	@Column(name = "pvp_monster_drop_id", precision = 10)
	@Override
	public Integer getPvpMonsterDropId() {
		return (Integer) getValue(30);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterConfig from) {
		setId(from.getId());
		setEvolutionGroup(from.getEvolutionGroup());
		setMonsterGroup(from.getMonsterGroup());
		setQuality(from.getQuality());
		setEvolutionLevel(from.getEvolutionLevel());
		setDisplayName(from.getDisplayName());
		setElement(from.getElement());
		setImagePrefix(from.getImagePrefix());
		setNumPuzzlePieces(from.getNumPuzzlePieces());
		setMinutesToCombinePieces(from.getMinutesToCombinePieces());
		setMaxLevel(from.getMaxLevel());
		setEvolutionMonsterId(from.getEvolutionMonsterId());
		setEvolutionCatalystMonsterId(from.getEvolutionCatalystMonsterId());
		setMinutesToEvolve(from.getMinutesToEvolve());
		setNumEvolutionCatalysts(from.getNumEvolutionCatalysts());
		setCarrotRecruited(from.getCarrotRecruited());
		setCarrotDefeated(from.getCarrotDefeated());
		setCarrotEvolved(from.getCarrotEvolved());
		setDescription(from.getDescription());
		setEvolutionCost(from.getEvolutionCost());
		setAnimationType(from.getAnimationType());
		setVerticalPixelOffset(from.getVerticalPixelOffset());
		setAtkSoundFile(from.getAtkSoundFile());
		setAtkSoundAnimationFrame(from.getAtkSoundAnimationFrame());
		setAtkAnimationRepeatedFramesStart(from.getAtkAnimationRepeatedFramesStart());
		setAtkAnimationRepeatedFramesEnd(from.getAtkAnimationRepeatedFramesEnd());
		setShortName(from.getShortName());
		setShadowScaleFactor(from.getShadowScaleFactor());
		setBaseOffensiveSkillId(from.getBaseOffensiveSkillId());
		setBaseDefensiveSkillId(from.getBaseDefensiveSkillId());
		setPvpMonsterDropId(from.getPvpMonsterDropId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MonsterConfigRecord
	 */
	public MonsterConfigRecord() {
		super(MonsterConfig.MONSTER_CONFIG);
	}

	/**
	 * Create a detached, initialised MonsterConfigRecord
	 */
	public MonsterConfigRecord(Integer id, String evolutionGroup, String monsterGroup, String quality, Byte evolutionLevel, String displayName, String element, String imagePrefix, Byte numPuzzlePieces, Integer minutesToCombinePieces, Short maxLevel, Integer evolutionMonsterId, Integer evolutionCatalystMonsterId, Integer minutesToEvolve, Byte numEvolutionCatalysts, String carrotRecruited, String carrotDefeated, String carrotEvolved, String description, String evolutionCost, String animationType, Integer verticalPixelOffset, String atkSoundFile, Integer atkSoundAnimationFrame, Integer atkAnimationRepeatedFramesStart, Integer atkAnimationRepeatedFramesEnd, String shortName, Double shadowScaleFactor, Integer baseOffensiveSkillId, Integer baseDefensiveSkillId, Integer pvpMonsterDropId) {
		super(MonsterConfig.MONSTER_CONFIG);

		setValue(0, id);
		setValue(1, evolutionGroup);
		setValue(2, monsterGroup);
		setValue(3, quality);
		setValue(4, evolutionLevel);
		setValue(5, displayName);
		setValue(6, element);
		setValue(7, imagePrefix);
		setValue(8, numPuzzlePieces);
		setValue(9, minutesToCombinePieces);
		setValue(10, maxLevel);
		setValue(11, evolutionMonsterId);
		setValue(12, evolutionCatalystMonsterId);
		setValue(13, minutesToEvolve);
		setValue(14, numEvolutionCatalysts);
		setValue(15, carrotRecruited);
		setValue(16, carrotDefeated);
		setValue(17, carrotEvolved);
		setValue(18, description);
		setValue(19, evolutionCost);
		setValue(20, animationType);
		setValue(21, verticalPixelOffset);
		setValue(22, atkSoundFile);
		setValue(23, atkSoundAnimationFrame);
		setValue(24, atkAnimationRepeatedFramesStart);
		setValue(25, atkAnimationRepeatedFramesEnd);
		setValue(26, shortName);
		setValue(27, shadowScaleFactor);
		setValue(28, baseOffensiveSkillId);
		setValue(29, baseDefensiveSkillId);
		setValue(30, pvpMonsterDropId);
	}
}
