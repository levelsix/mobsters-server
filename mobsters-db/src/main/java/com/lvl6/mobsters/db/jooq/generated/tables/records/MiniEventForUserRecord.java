/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MiniEventForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_event_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "mini_event_timetable_id"})
})
public class MiniEventForUserRecord extends UpdatableRecordImpl<MiniEventForUserRecord> implements Record11<String, Integer, Integer, Timestamp, Integer, Boolean, Boolean, Boolean, Timestamp, Timestamp, Timestamp>, IMiniEventForUser {

	private static final long serialVersionUID = -1267411007;

	/**
	 * Setter for <code>mobsters.mini_event_for_user.user_id</code>.
	 */
	@Override
	public MiniEventForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.mini_event_timetable_id</code>.
	 */
	@Override
	public MiniEventForUserRecord setMiniEventTimetableId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.mini_event_timetable_id</code>.
	 */
	@Column(name = "mini_event_timetable_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getMiniEventTimetableId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.mini_event_id</code>.
	 */
	@Override
	public MiniEventForUserRecord setMiniEventId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.mini_event_id</code>.
	 */
	@Column(name = "mini_event_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getMiniEventId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.time_of_entry</code>.
	 */
	@Override
	public MiniEventForUserRecord setTimeOfEntry(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.time_of_entry</code>.
	 */
	@Column(name = "time_of_entry", nullable = false)
	@NotNull
	@Override
	public Timestamp getTimeOfEntry() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.user_lvl</code>. level of the user when he started mini_event
	 */
	@Override
	public MiniEventForUserRecord setUserLvl(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.user_lvl</code>. level of the user when he started mini_event
	 */
	@Column(name = "user_lvl", precision = 10)
	@Override
	public Integer getUserLvl() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.tier_one_redeemed</code>.
	 */
	@Override
	public MiniEventForUserRecord setTierOneRedeemed(Boolean value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.tier_one_redeemed</code>.
	 */
	@Column(name = "tier_one_redeemed", precision = 1)
	@Override
	public Boolean getTierOneRedeemed() {
		return (Boolean) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.tier_two_redeemed</code>.
	 */
	@Override
	public MiniEventForUserRecord setTierTwoRedeemed(Boolean value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.tier_two_redeemed</code>.
	 */
	@Column(name = "tier_two_redeemed", precision = 1)
	@Override
	public Boolean getTierTwoRedeemed() {
		return (Boolean) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.tier_three_redeemed</code>.
	 */
	@Override
	public MiniEventForUserRecord setTierThreeRedeemed(Boolean value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.tier_three_redeemed</code>.
	 */
	@Column(name = "tier_three_redeemed", precision = 1)
	@Override
	public Boolean getTierThreeRedeemed() {
		return (Boolean) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.tier_one_redeemed_time</code>.
	 */
	@Override
	public MiniEventForUserRecord setTierOneRedeemedTime(Timestamp value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.tier_one_redeemed_time</code>.
	 */
	@Column(name = "tier_one_redeemed_time")
	@Override
	public Timestamp getTierOneRedeemedTime() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.tier_two_redeemed_time</code>.
	 */
	@Override
	public MiniEventForUserRecord setTierTwoRedeemedTime(Timestamp value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.tier_two_redeemed_time</code>.
	 */
	@Column(name = "tier_two_redeemed_time")
	@Override
	public Timestamp getTierTwoRedeemedTime() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.mini_event_for_user.tier_three_redeemed_time</code>.
	 */
	@Override
	public MiniEventForUserRecord setTierThreeRedeemedTime(Timestamp value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_event_for_user.tier_three_redeemed_time</code>.
	 */
	@Column(name = "tier_three_redeemed_time")
	@Override
	public Timestamp getTierThreeRedeemedTime() {
		return (Timestamp) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<String, Integer, Integer, Timestamp, Integer, Boolean, Boolean, Boolean, Timestamp, Timestamp, Timestamp> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<String, Integer, Integer, Timestamp, Integer, Boolean, Boolean, Boolean, Timestamp, Timestamp, Timestamp> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.MINI_EVENT_TIMETABLE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.MINI_EVENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIME_OF_ENTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.USER_LVL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIER_ONE_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field7() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIER_TWO_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field8() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIER_THREE_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIER_ONE_REDEEMED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIER_TWO_REDEEMED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field11() {
		return MiniEventForUser.MINI_EVENT_FOR_USER.TIER_THREE_REDEEMED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getMiniEventTimetableId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getMiniEventId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getTimeOfEntry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getUserLvl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getTierOneRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value7() {
		return getTierTwoRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value8() {
		return getTierThreeRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getTierOneRedeemedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getTierTwoRedeemedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value11() {
		return getTierThreeRedeemedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value2(Integer value) {
		setMiniEventTimetableId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value3(Integer value) {
		setMiniEventId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value4(Timestamp value) {
		setTimeOfEntry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value5(Integer value) {
		setUserLvl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value6(Boolean value) {
		setTierOneRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value7(Boolean value) {
		setTierTwoRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value8(Boolean value) {
		setTierThreeRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value9(Timestamp value) {
		setTierOneRedeemedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value10(Timestamp value) {
		setTierTwoRedeemedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord value11(Timestamp value) {
		setTierThreeRedeemedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniEventForUserRecord values(String value1, Integer value2, Integer value3, Timestamp value4, Integer value5, Boolean value6, Boolean value7, Boolean value8, Timestamp value9, Timestamp value10, Timestamp value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniEventForUser from) {
		setUserId(from.getUserId());
		setMiniEventTimetableId(from.getMiniEventTimetableId());
		setMiniEventId(from.getMiniEventId());
		setTimeOfEntry(from.getTimeOfEntry());
		setUserLvl(from.getUserLvl());
		setTierOneRedeemed(from.getTierOneRedeemed());
		setTierTwoRedeemed(from.getTierTwoRedeemed());
		setTierThreeRedeemed(from.getTierThreeRedeemed());
		setTierOneRedeemedTime(from.getTierOneRedeemedTime());
		setTierTwoRedeemedTime(from.getTierTwoRedeemedTime());
		setTierThreeRedeemedTime(from.getTierThreeRedeemedTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniEventForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MiniEventForUserRecord
	 */
	public MiniEventForUserRecord() {
		super(MiniEventForUser.MINI_EVENT_FOR_USER);
	}

	/**
	 * Create a detached, initialised MiniEventForUserRecord
	 */
	public MiniEventForUserRecord(String userId, Integer miniEventTimetableId, Integer miniEventId, Timestamp timeOfEntry, Integer userLvl, Boolean tierOneRedeemed, Boolean tierTwoRedeemed, Boolean tierThreeRedeemed, Timestamp tierOneRedeemedTime, Timestamp tierTwoRedeemedTime, Timestamp tierThreeRedeemedTime) {
		super(MiniEventForUser.MINI_EVENT_FOR_USER);

		setValue(0, userId);
		setValue(1, miniEventTimetableId);
		setValue(2, miniEventId);
		setValue(3, timeOfEntry);
		setValue(4, userLvl);
		setValue(5, tierOneRedeemed);
		setValue(6, tierTwoRedeemed);
		setValue(7, tierThreeRedeemed);
		setValue(8, tierOneRedeemedTime);
		setValue(9, tierTwoRedeemedTime);
		setValue(10, tierThreeRedeemedTime);
	}
}
