/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.StructureForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.StructureForUserPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.StructureForUserRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StructureForUserDao extends DAOImpl<StructureForUserRecord, StructureForUserPojo, String> {

	/**
	 * Create a new StructureForUserDao without any configuration
	 */
	public StructureForUserDao() {
		super(StructureForUser.STRUCTURE_FOR_USER, StructureForUserPojo.class);
	}

	/**
	 * Create a new StructureForUserDao with an attached configuration
	 */
	public StructureForUserDao(Configuration configuration) {
		super(StructureForUser.STRUCTURE_FOR_USER, StructureForUserPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(StructureForUserPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchById(String... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public StructureForUserPojo fetchOneById(String value) {
		return fetchOne(StructureForUser.STRUCTURE_FOR_USER.ID, value);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByUserId(String... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>struct_id IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByStructId(Integer... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.STRUCT_ID, values);
	}

	/**
	 * Fetch records that have <code>last_retrieved IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByLastRetrieved(Timestamp... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.LAST_RETRIEVED, values);
	}

	/**
	 * Fetch records that have <code>xcoord IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByXcoord(Integer... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.XCOORD, values);
	}

	/**
	 * Fetch records that have <code>ycoord IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByYcoord(Integer... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.YCOORD, values);
	}

	/**
	 * Fetch records that have <code>purchase_time IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByPurchaseTime(Timestamp... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.PURCHASE_TIME, values);
	}

	/**
	 * Fetch records that have <code>is_complete IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByIsComplete(Byte... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.IS_COMPLETE, values);
	}

	/**
	 * Fetch records that have <code>orientation IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByOrientation(String... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.ORIENTATION, values);
	}

	/**
	 * Fetch records that have <code>fb_invite_struct_lvl IN (values)</code>
	 */
	public List<StructureForUserPojo> fetchByFbInviteStructLvl(Byte... values) {
		return fetch(StructureForUser.STRUCTURE_FOR_USER.FB_INVITE_STRUCT_LVL, values);
	}
}
