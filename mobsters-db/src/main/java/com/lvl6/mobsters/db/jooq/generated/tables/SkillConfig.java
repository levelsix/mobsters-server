/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.SkillConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkillConfig extends TableImpl<SkillConfigRecord> {

	private static final long serialVersionUID = -1571511899;

	/**
	 * The reference instance of <code>mobsters.skill_config</code>
	 */
	public static final SkillConfig SKILL_CONFIG = new SkillConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SkillConfigRecord> getRecordType() {
		return SkillConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.skill_config.id</code>.
	 */
	public final TableField<SkillConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.skill_config.name</code>.
	 */
	public final TableField<SkillConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.skill_config.orb_cost</code>.
	 */
	public final TableField<SkillConfigRecord, Integer> ORB_COST = createField("orb_cost", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.skill_config.type</code>. damage multiplier, drop cakes, etc
	 */
	public final TableField<SkillConfigRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "damage multiplier, drop cakes, etc");

	/**
	 * The column <code>mobsters.skill_config.activation_type</code>. Passive, user-activated and auto-activated
	 */
	public final TableField<SkillConfigRecord, String> ACTIVATION_TYPE = createField("activation_type", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "Passive, user-activated and auto-activated");

	/**
	 * The column <code>mobsters.skill_config.predec_id</code>. Predecessor id
	 */
	public final TableField<SkillConfigRecord, Integer> PREDEC_ID = createField("predec_id", org.jooq.impl.SQLDataType.INTEGER, this, "Predecessor id");

	/**
	 * The column <code>mobsters.skill_config.succ_id</code>. Successor id
	 */
	public final TableField<SkillConfigRecord, Integer> SUCC_ID = createField("succ_id", org.jooq.impl.SQLDataType.INTEGER, this, "Successor id");

	/**
	 * The column <code>mobsters.skill_config.defensive_desc</code>.
	 */
	public final TableField<SkillConfigRecord, String> DEFENSIVE_DESC = createField("defensive_desc", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>mobsters.skill_config.offensive_desc</code>.
	 */
	public final TableField<SkillConfigRecord, String> OFFENSIVE_DESC = createField("offensive_desc", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>mobsters.skill_config.img_name_prefix</code>.
	 */
	public final TableField<SkillConfigRecord, String> IMG_NAME_PREFIX = createField("img_name_prefix", org.jooq.impl.SQLDataType.VARCHAR.length(75), this, "");

	/**
	 * The column <code>mobsters.skill_config.skill_effect_duration</code>.
	 */
	public final TableField<SkillConfigRecord, Integer> SKILL_EFFECT_DURATION = createField("skill_effect_duration", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.skill_config.short_off_desc</code>. shorter description
	 */
	public final TableField<SkillConfigRecord, String> SHORT_OFF_DESC = createField("short_off_desc", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "shorter description");

	/**
	 * The column <code>mobsters.skill_config.short_def_desc</code>.
	 */
	public final TableField<SkillConfigRecord, String> SHORT_DEF_DESC = createField("short_def_desc", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>mobsters.skill_config</code> table reference
	 */
	public SkillConfig() {
		this("skill_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.skill_config</code> table reference
	 */
	public SkillConfig(String alias) {
		this(alias, SKILL_CONFIG);
	}

	private SkillConfig(String alias, Table<SkillConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private SkillConfig(String alias, Table<SkillConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SkillConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SKILL_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SkillConfigRecord> getPrimaryKey() {
		return Keys.KEY_SKILL_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SkillConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<SkillConfigRecord>>asList(Keys.KEY_SKILL_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SkillConfig as(String alias) {
		return new SkillConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SkillConfig rename(String name) {
		return new SkillConfig(name, null);
	}
}
