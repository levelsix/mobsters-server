/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterSnapshotForUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterSnapshotForUser extends TableImpl<MonsterSnapshotForUserRecord> {

	private static final long serialVersionUID = -1982588192;

	/**
	 * The reference instance of <code>mobsters.monster_snapshot_for_user</code>
	 */
	public static final MonsterSnapshotForUser MONSTER_SNAPSHOT_FOR_USER = new MonsterSnapshotForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MonsterSnapshotForUserRecord> getRecordType() {
		return MonsterSnapshotForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.id</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.time_of_entry</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, String> TIME_OF_ENTRY = createField("time_of_entry", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.user_id</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.type</code>. indicates a table
	 */
	public final TableField<MonsterSnapshotForUserRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CHAR.length(36), this, "indicates a table");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.id_in_table</code>. table is determined by type
	 */
	public final TableField<MonsterSnapshotForUserRecord, String> ID_IN_TABLE = createField("id_in_table", org.jooq.impl.SQLDataType.CHAR.length(36), this, "table is determined by type");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.monster_for_user_id</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, String> MONSTER_FOR_USER_ID = createField("monster_for_user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.monster_id</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> MONSTER_ID = createField("monster_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.current_exp</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> CURRENT_EXP = createField("current_exp", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.current_lvl</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> CURRENT_LVL = createField("current_lvl", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.current_hp</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> CURRENT_HP = createField("current_hp", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.team_slot_num</code>.
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> TEAM_SLOT_NUM = createField("team_slot_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.off_skill_id</code>. offensive skill id
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> OFF_SKILL_ID = createField("off_skill_id", org.jooq.impl.SQLDataType.INTEGER, this, "offensive skill id");

	/**
	 * The column <code>mobsters.monster_snapshot_for_user.def_skill_id</code>. defensive skill id
	 */
	public final TableField<MonsterSnapshotForUserRecord, Integer> DEF_SKILL_ID = createField("def_skill_id", org.jooq.impl.SQLDataType.INTEGER, this, "defensive skill id");

	/**
	 * Create a <code>mobsters.monster_snapshot_for_user</code> table reference
	 */
	public MonsterSnapshotForUser() {
		this("monster_snapshot_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.monster_snapshot_for_user</code> table reference
	 */
	public MonsterSnapshotForUser(String alias) {
		this(alias, MONSTER_SNAPSHOT_FOR_USER);
	}

	private MonsterSnapshotForUser(String alias, Table<MonsterSnapshotForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private MonsterSnapshotForUser(String alias, Table<MonsterSnapshotForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MonsterSnapshotForUserRecord> getPrimaryKey() {
		return Keys.KEY_MONSTER_SNAPSHOT_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MonsterSnapshotForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<MonsterSnapshotForUserRecord>>asList(Keys.KEY_MONSTER_SNAPSHOT_FOR_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUser as(String alias) {
		return new MonsterSnapshotForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MonsterSnapshotForUser rename(String name) {
		return new MonsterSnapshotForUser(name, null);
	}
}
