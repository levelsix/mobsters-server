/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterEnhancingForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterEnhancingForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_enhancing_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "monster_for_user_id"})
})
public class MonsterEnhancingForUserRecord extends UpdatableRecordImpl<MonsterEnhancingForUserRecord> implements Record5<String, String, Timestamp, Integer, Boolean>, IMonsterEnhancingForUser {

	private static final long serialVersionUID = 1836816232;

	/**
	 * Setter for <code>mobsters.monster_enhancing_for_user.user_id</code>.
	 */
	@Override
	public MonsterEnhancingForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_enhancing_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.monster_enhancing_for_user.monster_for_user_id</code>.
	 */
	@Override
	public MonsterEnhancingForUserRecord setMonsterForUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_enhancing_for_user.monster_for_user_id</code>.
	 */
	@Column(name = "monster_for_user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getMonsterForUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.monster_enhancing_for_user.expected_start_time</code>.
	 */
	@Override
	public MonsterEnhancingForUserRecord setExpectedStartTime(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_enhancing_for_user.expected_start_time</code>.
	 */
	@Column(name = "expected_start_time")
	@Override
	public Timestamp getExpectedStartTime() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.monster_enhancing_for_user.enhancing_cost</code>.
	 */
	@Override
	public MonsterEnhancingForUserRecord setEnhancingCost(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_enhancing_for_user.enhancing_cost</code>.
	 */
	@Column(name = "enhancing_cost", precision = 10)
	@Override
	public Integer getEnhancingCost() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.monster_enhancing_for_user.enhancing_complete</code>.
	 */
	@Override
	public MonsterEnhancingForUserRecord setEnhancingComplete(Boolean value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_enhancing_for_user.enhancing_complete</code>.
	 */
	@Column(name = "enhancing_complete", precision = 1)
	@Override
	public Boolean getEnhancingComplete() {
		return (Boolean) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, Timestamp, Integer, Boolean> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, Timestamp, Integer, Boolean> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.MONSTER_FOR_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.EXPECTED_START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.ENHANCING_COST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field5() {
		return MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.ENHANCING_COMPLETE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMonsterForUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getExpectedStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getEnhancingCost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value5() {
		return getEnhancingComplete();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEnhancingForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEnhancingForUserRecord value2(String value) {
		setMonsterForUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEnhancingForUserRecord value3(Timestamp value) {
		setExpectedStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEnhancingForUserRecord value4(Integer value) {
		setEnhancingCost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEnhancingForUserRecord value5(Boolean value) {
		setEnhancingComplete(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEnhancingForUserRecord values(String value1, String value2, Timestamp value3, Integer value4, Boolean value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterEnhancingForUser from) {
		setUserId(from.getUserId());
		setMonsterForUserId(from.getMonsterForUserId());
		setExpectedStartTime(from.getExpectedStartTime());
		setEnhancingCost(from.getEnhancingCost());
		setEnhancingComplete(from.getEnhancingComplete());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterEnhancingForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MonsterEnhancingForUserRecord
	 */
	public MonsterEnhancingForUserRecord() {
		super(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER);
	}

	/**
	 * Create a detached, initialised MonsterEnhancingForUserRecord
	 */
	public MonsterEnhancingForUserRecord(String userId, String monsterForUserId, Timestamp expectedStartTime, Integer enhancingCost, Boolean enhancingComplete) {
		super(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER);

		setValue(0, userId);
		setValue(1, monsterForUserId);
		setValue(2, expectedStartTime);
		setValue(3, enhancingCost);
		setValue(4, enhancingComplete);
	}
}
