/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.ClanForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IClanForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "clan_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "clan_id"})
})
public class ClanForUserRecord extends UpdatableRecordImpl<ClanForUserRecord> implements Record4<String, String, String, Timestamp>, IClanForUser {

	private static final long serialVersionUID = 185187201;

	/**
	 * Setter for <code>mobsters.clan_for_user.user_id</code>.
	 */
	@Override
	public ClanForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.clan_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.clan_for_user.clan_id</code>.
	 */
	@Override
	public ClanForUserRecord setClanId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.clan_for_user.clan_id</code>.
	 */
	@Column(name = "clan_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getClanId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.clan_for_user.status</code>.
	 */
	@Override
	public ClanForUserRecord setStatus(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.clan_for_user.status</code>.
	 */
	@Column(name = "status", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getStatus() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.clan_for_user.request_time</code>.
	 */
	@Override
	public ClanForUserRecord setRequestTime(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.clan_for_user.request_time</code>.
	 */
	@Column(name = "request_time", nullable = false)
	@NotNull
	@Override
	public Timestamp getRequestTime() {
		return (Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, String, Timestamp> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, String, Timestamp> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return ClanForUser.CLAN_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ClanForUser.CLAN_FOR_USER.CLAN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return ClanForUser.CLAN_FOR_USER.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return ClanForUser.CLAN_FOR_USER.REQUEST_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getClanId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getRequestTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClanForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClanForUserRecord value2(String value) {
		setClanId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClanForUserRecord value3(String value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClanForUserRecord value4(Timestamp value) {
		setRequestTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClanForUserRecord values(String value1, String value2, String value3, Timestamp value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IClanForUser from) {
		setUserId(from.getUserId());
		setClanId(from.getClanId());
		setStatus(from.getStatus());
		setRequestTime(from.getRequestTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IClanForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ClanForUserRecord
	 */
	public ClanForUserRecord() {
		super(ClanForUser.CLAN_FOR_USER);
	}

	/**
	 * Create a detached, initialised ClanForUserRecord
	 */
	public ClanForUserRecord(String userId, String clanId, String status, Timestamp requestTime) {
		super(ClanForUser.CLAN_FOR_USER);

		setValue(0, userId);
		setValue(1, clanId);
		setValue(2, status);
		setValue(3, requestTime);
	}
}
