/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.BattleItemQueueForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IBattleItemQueueForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "battle_item_queue_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "priority"})
})
public class BattleItemQueueForUserRecord extends UpdatableRecordImpl<BattleItemQueueForUserRecord> implements Record5<String, Integer, Integer, Timestamp, Double>, IBattleItemQueueForUser {

	private static final long serialVersionUID = -1396202329;

	/**
	 * Setter for <code>mobsters.battle_item_queue_for_user.user_id</code>.
	 */
	@Override
	public BattleItemQueueForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.battle_item_queue_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.battle_item_queue_for_user.priority</code>.
	 */
	@Override
	public BattleItemQueueForUserRecord setPriority(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.battle_item_queue_for_user.priority</code>.
	 */
	@Column(name = "priority", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getPriority() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.battle_item_queue_for_user.battle_item_id</code>.
	 */
	@Override
	public BattleItemQueueForUserRecord setBattleItemId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.battle_item_queue_for_user.battle_item_id</code>.
	 */
	@Column(name = "battle_item_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getBattleItemId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.battle_item_queue_for_user.expected_start_time</code>.
	 */
	@Override
	public BattleItemQueueForUserRecord setExpectedStartTime(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.battle_item_queue_for_user.expected_start_time</code>.
	 */
	@Column(name = "expected_start_time")
	@Override
	public Timestamp getExpectedStartTime() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.battle_item_queue_for_user.elapsed_time</code>.
	 */
	@Override
	public BattleItemQueueForUserRecord setElapsedTime(Double value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.battle_item_queue_for_user.elapsed_time</code>.
	 */
	@Column(name = "elapsed_time", nullable = false, precision = 12)
	@NotNull
	@Override
	public Double getElapsedTime() {
		return (Double) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Integer, Integer, Timestamp, Double> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Integer, Integer, Timestamp, Double> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.PRIORITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.BATTLE_ITEM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.EXPECTED_START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field5() {
		return BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER.ELAPSED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getPriority();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getBattleItemId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getExpectedStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value5() {
		return getElapsedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BattleItemQueueForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BattleItemQueueForUserRecord value2(Integer value) {
		setPriority(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BattleItemQueueForUserRecord value3(Integer value) {
		setBattleItemId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BattleItemQueueForUserRecord value4(Timestamp value) {
		setExpectedStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BattleItemQueueForUserRecord value5(Double value) {
		setElapsedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BattleItemQueueForUserRecord values(String value1, Integer value2, Integer value3, Timestamp value4, Double value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IBattleItemQueueForUser from) {
		setUserId(from.getUserId());
		setPriority(from.getPriority());
		setBattleItemId(from.getBattleItemId());
		setExpectedStartTime(from.getExpectedStartTime());
		setElapsedTime(from.getElapsedTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IBattleItemQueueForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BattleItemQueueForUserRecord
	 */
	public BattleItemQueueForUserRecord() {
		super(BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER);
	}

	/**
	 * Create a detached, initialised BattleItemQueueForUserRecord
	 */
	public BattleItemQueueForUserRecord(String userId, Integer priority, Integer battleItemId, Timestamp expectedStartTime, Double elapsedTime) {
		super(BattleItemQueueForUser.BATTLE_ITEM_QUEUE_FOR_USER);

		setValue(0, userId);
		setValue(1, priority);
		setValue(2, battleItemId);
		setValue(3, expectedStartTime);
		setValue(4, elapsedTime);
	}
}
