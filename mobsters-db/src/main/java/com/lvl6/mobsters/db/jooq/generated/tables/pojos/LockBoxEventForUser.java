/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ILockBoxEventForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "lock_box_event_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"lock_box_event_id", "user_id"})
})
public class LockBoxEventForUser implements ILockBoxEventForUser {

	private static final long serialVersionUID = -955364688;

	private Integer   lockBoxEventId;
	private String    userId;
	private Integer   numBoxes;
	private Timestamp lastOpeningTime;
	private Integer   numTimesCompleted;
	private Byte      hasBeenRedeemed;

	public LockBoxEventForUser() {}

	public LockBoxEventForUser(LockBoxEventForUser value) {
		this.lockBoxEventId = value.lockBoxEventId;
		this.userId = value.userId;
		this.numBoxes = value.numBoxes;
		this.lastOpeningTime = value.lastOpeningTime;
		this.numTimesCompleted = value.numTimesCompleted;
		this.hasBeenRedeemed = value.hasBeenRedeemed;
	}

	public LockBoxEventForUser(
		Integer   lockBoxEventId,
		String    userId,
		Integer   numBoxes,
		Timestamp lastOpeningTime,
		Integer   numTimesCompleted,
		Byte      hasBeenRedeemed
	) {
		this.lockBoxEventId = lockBoxEventId;
		this.userId = userId;
		this.numBoxes = numBoxes;
		this.lastOpeningTime = lastOpeningTime;
		this.numTimesCompleted = numTimesCompleted;
		this.hasBeenRedeemed = hasBeenRedeemed;
	}

	@Column(name = "lock_box_event_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getLockBoxEventId() {
		return this.lockBoxEventId;
	}

	@Override
	public LockBoxEventForUser setLockBoxEventId(Integer lockBoxEventId) {
		this.lockBoxEventId = lockBoxEventId;
		return this;
	}

	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public LockBoxEventForUser setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "num_boxes", precision = 10)
	@Override
	public Integer getNumBoxes() {
		return this.numBoxes;
	}

	@Override
	public LockBoxEventForUser setNumBoxes(Integer numBoxes) {
		this.numBoxes = numBoxes;
		return this;
	}

	@Column(name = "last_opening_time")
	@Override
	public Timestamp getLastOpeningTime() {
		return this.lastOpeningTime;
	}

	@Override
	public LockBoxEventForUser setLastOpeningTime(Timestamp lastOpeningTime) {
		this.lastOpeningTime = lastOpeningTime;
		return this;
	}

	@Column(name = "num_times_completed", precision = 10)
	@Override
	public Integer getNumTimesCompleted() {
		return this.numTimesCompleted;
	}

	@Override
	public LockBoxEventForUser setNumTimesCompleted(Integer numTimesCompleted) {
		this.numTimesCompleted = numTimesCompleted;
		return this;
	}

	@Column(name = "has_been_redeemed", precision = 3)
	@Override
	public Byte getHasBeenRedeemed() {
		return this.hasBeenRedeemed;
	}

	@Override
	public LockBoxEventForUser setHasBeenRedeemed(Byte hasBeenRedeemed) {
		this.hasBeenRedeemed = hasBeenRedeemed;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ILockBoxEventForUser from) {
		setLockBoxEventId(from.getLockBoxEventId());
		setUserId(from.getUserId());
		setNumBoxes(from.getNumBoxes());
		setLastOpeningTime(from.getLastOpeningTime());
		setNumTimesCompleted(from.getNumTimesCompleted());
		setHasBeenRedeemed(from.getHasBeenRedeemed());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ILockBoxEventForUser> E into(E into) {
		into.from(this);
		return into;
	}
}
