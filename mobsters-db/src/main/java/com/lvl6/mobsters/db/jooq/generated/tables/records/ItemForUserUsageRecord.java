/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.ItemForUserUsage;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IItemForUserUsage;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "item_for_user_usage", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "user_id"})
})
public class ItemForUserUsageRecord extends UpdatableRecordImpl<ItemForUserUsageRecord> implements Record6<String, String, Integer, Timestamp, String, String>, IItemForUserUsage {

	private static final long serialVersionUID = 1939914878;

	/**
	 * Setter for <code>mobsters.item_for_user_usage.id</code>.
	 */
	@Override
	public ItemForUserUsageRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.item_for_user_usage.id</code>.
	 */
	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.item_for_user_usage.user_id</code>.
	 */
	@Override
	public ItemForUserUsageRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.item_for_user_usage.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.item_for_user_usage.item_id</code>.
	 */
	@Override
	public ItemForUserUsageRecord setItemId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.item_for_user_usage.item_id</code>.
	 */
	@Column(name = "item_id", precision = 10)
	@Override
	public Integer getItemId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.item_for_user_usage.time_of_entry</code>.
	 */
	@Override
	public ItemForUserUsageRecord setTimeOfEntry(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.item_for_user_usage.time_of_entry</code>.
	 */
	@Column(name = "time_of_entry", nullable = false)
	@NotNull
	@Override
	public Timestamp getTimeOfEntry() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.item_for_user_usage.user_data_id</code>. The id of the entity the user is using the item on
	 */
	@Override
	public ItemForUserUsageRecord setUserDataId(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.item_for_user_usage.user_data_id</code>. The id of the entity the user is using the item on
	 */
	@Column(name = "user_data_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserDataId() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.item_for_user_usage.action_type</code>. healing, evolving, enhancing, building or upgrading structure
	 */
	@Override
	public ItemForUserUsageRecord setActionType(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.item_for_user_usage.action_type</code>. healing, evolving, enhancing, building or upgrading structure
	 */
	@Column(name = "action_type", length = 45)
	@Size(max = 45)
	@Override
	public String getActionType() {
		return (String) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, Integer, Timestamp, String, String> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, Integer, Timestamp, String, String> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return ItemForUserUsage.ITEM_FOR_USER_USAGE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ItemForUserUsage.ITEM_FOR_USER_USAGE.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return ItemForUserUsage.ITEM_FOR_USER_USAGE.ITEM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return ItemForUserUsage.ITEM_FOR_USER_USAGE.TIME_OF_ENTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return ItemForUserUsage.ITEM_FOR_USER_USAGE.USER_DATA_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return ItemForUserUsage.ITEM_FOR_USER_USAGE.ACTION_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getItemId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getTimeOfEntry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getUserDataId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getActionType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord value3(Integer value) {
		setItemId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord value4(Timestamp value) {
		setTimeOfEntry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord value5(String value) {
		setUserDataId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord value6(String value) {
		setActionType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemForUserUsageRecord values(String value1, String value2, Integer value3, Timestamp value4, String value5, String value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IItemForUserUsage from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setItemId(from.getItemId());
		setTimeOfEntry(from.getTimeOfEntry());
		setUserDataId(from.getUserDataId());
		setActionType(from.getActionType());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IItemForUserUsage> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ItemForUserUsageRecord
	 */
	public ItemForUserUsageRecord() {
		super(ItemForUserUsage.ITEM_FOR_USER_USAGE);
	}

	/**
	 * Create a detached, initialised ItemForUserUsageRecord
	 */
	public ItemForUserUsageRecord(String id, String userId, Integer itemId, Timestamp timeOfEntry, String userDataId, String actionType) {
		super(ItemForUserUsage.ITEM_FOR_USER_USAGE);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, itemId);
		setValue(3, timeOfEntry);
		setValue(4, userDataId);
		setValue(5, actionType);
	}
}
