/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobForUserHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiniJobForUserHistory extends TableImpl<MiniJobForUserHistoryRecord> {

	private static final long serialVersionUID = 1605475190;

	/**
	 * The reference instance of <code>mobsters.mini_job_for_user_history</code>
	 */
	public static final MiniJobForUserHistory MINI_JOB_FOR_USER_HISTORY = new MiniJobForUserHistory();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MiniJobForUserHistoryRecord> getRecordType() {
		return MiniJobForUserHistoryRecord.class;
	}

	/**
	 * The column <code>mobsters.mini_job_for_user_history.user_id</code>.
	 */
	public final TableField<MiniJobForUserHistoryRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user_history.mini_job_id</code>.
	 */
	public final TableField<MiniJobForUserHistoryRecord, String> MINI_JOB_ID = createField("mini_job_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user_history.time_completed</code>.
	 */
	public final TableField<MiniJobForUserHistoryRecord, Timestamp> TIME_COMPLETED = createField("time_completed", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user_history.base_dmg_received</code>.
	 */
	public final TableField<MiniJobForUserHistoryRecord, Integer> BASE_DMG_RECEIVED = createField("base_dmg_received", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user_history.time_started</code>.
	 */
	public final TableField<MiniJobForUserHistoryRecord, Timestamp> TIME_STARTED = createField("time_started", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user_history.user_monster_ids</code>.
	 */
	public final TableField<MiniJobForUserHistoryRecord, String> USER_MONSTER_IDS = createField("user_monster_ids", org.jooq.impl.SQLDataType.VARCHAR.length(511), this, "");

	/**
	 * Create a <code>mobsters.mini_job_for_user_history</code> table reference
	 */
	public MiniJobForUserHistory() {
		this("mini_job_for_user_history", null);
	}

	/**
	 * Create an aliased <code>mobsters.mini_job_for_user_history</code> table reference
	 */
	public MiniJobForUserHistory(String alias) {
		this(alias, MINI_JOB_FOR_USER_HISTORY);
	}

	private MiniJobForUserHistory(String alias, Table<MiniJobForUserHistoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private MiniJobForUserHistory(String alias, Table<MiniJobForUserHistoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MiniJobForUserHistoryRecord> getPrimaryKey() {
		return Keys.KEY_MINI_JOB_FOR_USER_HISTORY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MiniJobForUserHistoryRecord>> getKeys() {
		return Arrays.<UniqueKey<MiniJobForUserHistoryRecord>>asList(Keys.KEY_MINI_JOB_FOR_USER_HISTORY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUserHistory as(String alias) {
		return new MiniJobForUserHistory(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MiniJobForUserHistory rename(String name) {
		return new MiniJobForUserHistory(name, null);
	}
}
