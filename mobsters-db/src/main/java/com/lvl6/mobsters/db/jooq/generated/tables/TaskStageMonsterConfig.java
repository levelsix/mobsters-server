/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageMonsterConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskStageMonsterConfig extends TableImpl<TaskStageMonsterConfigRecord> {

	private static final long serialVersionUID = 1955424093;

	/**
	 * The reference instance of <code>mobsters.task_stage_monster_config</code>
	 */
	public static final TaskStageMonsterConfig TASK_STAGE_MONSTER_CONFIG = new TaskStageMonsterConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskStageMonsterConfigRecord> getRecordType() {
		return TaskStageMonsterConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.task_stage_monster_config.id</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.task_stage_id</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> TASK_STAGE_ID = createField("task_stage_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.monster_id</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MONSTER_ID = createField("monster_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.monster_type</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, String> MONSTER_TYPE = createField("monster_type", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.exp_reward</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> EXP_REWARD = createField("exp_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.min_cash_drop</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MIN_CASH_DROP = createField("min_cash_drop", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.max_cash_drop</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MAX_CASH_DROP = createField("max_cash_drop", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.min_oil_drop</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MIN_OIL_DROP = createField("min_oil_drop", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.max_oil_drop</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MAX_OIL_DROP = createField("max_oil_drop", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.puzzle_piece_drop_rate</code>. Can only drop a piece of a level-1 monster, or a complete level-something monster.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Double> PUZZLE_PIECE_DROP_RATE = createField("puzzle_piece_drop_rate", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "Can only drop a piece of a level-1 monster, or a complete level-something monster.");

	/**
	 * The column <code>mobsters.task_stage_monster_config.level</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> LEVEL = createField("level", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.chance_to_appear</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Double> CHANCE_TO_APPEAR = createField("chance_to_appear", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.dmg_multiplier</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Double> DMG_MULTIPLIER = createField("dmg_multiplier", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.monster_id_drop</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MONSTER_ID_DROP = createField("monster_id_drop", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.monster_drop_lvl</code>. The level of the monster that is dropped, if a monster does drop. Level 0 means a piece is dropped, and anything higher than one is complete monster.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> MONSTER_DROP_LVL = createField("monster_drop_lvl", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "The level of the monster that is dropped, if a monster does drop. Level 0 means a piece is dropped, and anything higher than one is complete monster.");

	/**
	 * The column <code>mobsters.task_stage_monster_config.defensive_skill_id</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Integer> DEFENSIVE_SKILL_ID = createField("defensive_skill_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.init_dialogue</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, String> INIT_DIALOGUE = createField("init_dialogue", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.default_dialogue</code>.
	 */
	public final TableField<TaskStageMonsterConfigRecord, String> DEFAULT_DIALOGUE = createField("default_dialogue", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mobsters.task_stage_monster_config.user_toon_hp_scale</code>. used to determine the value of level, specifically in the case of cake kids.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Double> USER_TOON_HP_SCALE = createField("user_toon_hp_scale", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "used to determine the value of level, specifically in the case of cake kids.");

	/**
	 * The column <code>mobsters.task_stage_monster_config.user_toon_atk_scale</code>. used to determine the value of level, specifically in the case of cake kids.
	 */
	public final TableField<TaskStageMonsterConfigRecord, Double> USER_TOON_ATK_SCALE = createField("user_toon_atk_scale", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "used to determine the value of level, specifically in the case of cake kids.");

	/**
	 * Create a <code>mobsters.task_stage_monster_config</code> table reference
	 */
	public TaskStageMonsterConfig() {
		this("task_stage_monster_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.task_stage_monster_config</code> table reference
	 */
	public TaskStageMonsterConfig(String alias) {
		this(alias, TASK_STAGE_MONSTER_CONFIG);
	}

	private TaskStageMonsterConfig(String alias, Table<TaskStageMonsterConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskStageMonsterConfig(String alias, Table<TaskStageMonsterConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TaskStageMonsterConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TASK_STAGE_MONSTER_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskStageMonsterConfigRecord> getPrimaryKey() {
		return Keys.KEY_TASK_STAGE_MONSTER_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskStageMonsterConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskStageMonsterConfigRecord>>asList(Keys.KEY_TASK_STAGE_MONSTER_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskStageMonsterConfig as(String alias) {
		return new TaskStageMonsterConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskStageMonsterConfig rename(String name) {
		return new TaskStageMonsterConfig(name, null);
	}
}
