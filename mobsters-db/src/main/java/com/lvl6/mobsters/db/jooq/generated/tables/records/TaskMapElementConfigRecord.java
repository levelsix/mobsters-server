/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskMapElementConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskMapElementConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_map_element_config", schema = "mobsters")
public class TaskMapElementConfigRecord extends UpdatableRecordImpl<TaskMapElementConfigRecord> implements Record17<Integer, Integer, Integer, Integer, String, Boolean, String, Integer, String, Integer, Integer, String, Integer, Integer, Double, Boolean, Integer>, ITaskMapElementConfig {

	private static final long serialVersionUID = 858839090;

	/**
	 * Setter for <code>mobsters.task_map_element_config.id</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.task_id</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setTaskId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.task_id</code>.
	 */
	@Column(name = "task_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getTaskId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.x_pos</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setXPos(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.x_pos</code>.
	 */
	@Column(name = "x_pos", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getXPos() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.y_pos</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setYPos(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.y_pos</code>.
	 */
	@Column(name = "y_pos", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getYPos() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.element</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setElement(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.element</code>.
	 */
	@Column(name = "element", length = 15)
	@Size(max = 15)
	@Override
	public String getElement() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.is_boss</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setIsBoss(Boolean value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.is_boss</code>.
	 */
	@Column(name = "is_boss", precision = 1)
	@Override
	public Boolean getIsBoss() {
		return (Boolean) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.boss_img_name</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setBossImgName(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.boss_img_name</code>.
	 */
	@Column(name = "boss_img_name", length = 75)
	@Size(max = 75)
	@Override
	public String getBossImgName() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.item_drop_id</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setItemDropId(Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.item_drop_id</code>.
	 */
	@Column(name = "item_drop_id", precision = 10)
	@Override
	public Integer getItemDropId() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.section_name</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setSectionName(String value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.section_name</code>.
	 */
	@Column(name = "section_name", length = 45)
	@Size(max = 45)
	@Override
	public String getSectionName() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.cash_reward</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setCashReward(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.cash_reward</code>.
	 */
	@Column(name = "cash_reward", precision = 10)
	@Override
	public Integer getCashReward() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.oil_reward</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setOilReward(Integer value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.oil_reward</code>.
	 */
	@Column(name = "oil_reward", precision = 10)
	@Override
	public Integer getOilReward() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.character_img_name</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setCharacterImgName(String value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.character_img_name</code>.
	 */
	@Column(name = "character_img_name", length = 75)
	@Size(max = 75)
	@Override
	public String getCharacterImgName() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.char_vert_pixel_offset</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setCharVertPixelOffset(Integer value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.char_vert_pixel_offset</code>.
	 */
	@Column(name = "char_vert_pixel_offset", precision = 10)
	@Override
	public Integer getCharVertPixelOffset() {
		return (Integer) getValue(12);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.char_horiz_pixel_offset</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setCharHorizPixelOffset(Integer value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.char_horiz_pixel_offset</code>.
	 */
	@Column(name = "char_horiz_pixel_offset", precision = 10)
	@Override
	public Integer getCharHorizPixelOffset() {
		return (Integer) getValue(13);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.char_scale_factor</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setCharScaleFactor(Double value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.char_scale_factor</code>.
	 */
	@Column(name = "char_scale_factor", precision = 12)
	@Override
	public Double getCharScaleFactor() {
		return (Double) getValue(14);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.is_fake</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setIsFake(Boolean value) {
		setValue(15, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.is_fake</code>.
	 */
	@Column(name = "is_fake", precision = 1)
	@Override
	public Boolean getIsFake() {
		return (Boolean) getValue(15);
	}

	/**
	 * Setter for <code>mobsters.task_map_element_config.strength</code>.
	 */
	@Override
	public TaskMapElementConfigRecord setStrength(Integer value) {
		setValue(16, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_map_element_config.strength</code>.
	 */
	@Column(name = "strength", precision = 10)
	@Override
	public Integer getStrength() {
		return (Integer) getValue(16);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record17 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row17<Integer, Integer, Integer, Integer, String, Boolean, String, Integer, String, Integer, Integer, String, Integer, Integer, Double, Boolean, Integer> fieldsRow() {
		return (Row17) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row17<Integer, Integer, Integer, Integer, String, Boolean, String, Integer, String, Integer, Integer, String, Integer, Integer, Double, Boolean, Integer> valuesRow() {
		return (Row17) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.TASK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.X_POS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.Y_POS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.ELEMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.IS_BOSS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.BOSS_IMG_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.ITEM_DROP_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.SECTION_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.CASH_REWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.OIL_REWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.CHARACTER_IMG_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field13() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.CHAR_VERT_PIXEL_OFFSET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field14() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.CHAR_HORIZ_PIXEL_OFFSET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field15() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.CHAR_SCALE_FACTOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field16() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.IS_FAKE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field17() {
		return TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG.STRENGTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTaskId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getXPos();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getYPos();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getElement();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getIsBoss();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getBossImgName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getItemDropId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getSectionName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getCashReward();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getOilReward();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getCharacterImgName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value13() {
		return getCharVertPixelOffset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value14() {
		return getCharHorizPixelOffset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value15() {
		return getCharScaleFactor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value16() {
		return getIsFake();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value17() {
		return getStrength();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value2(Integer value) {
		setTaskId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value3(Integer value) {
		setXPos(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value4(Integer value) {
		setYPos(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value5(String value) {
		setElement(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value6(Boolean value) {
		setIsBoss(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value7(String value) {
		setBossImgName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value8(Integer value) {
		setItemDropId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value9(String value) {
		setSectionName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value10(Integer value) {
		setCashReward(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value11(Integer value) {
		setOilReward(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value12(String value) {
		setCharacterImgName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value13(Integer value) {
		setCharVertPixelOffset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value14(Integer value) {
		setCharHorizPixelOffset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value15(Double value) {
		setCharScaleFactor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value16(Boolean value) {
		setIsFake(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord value17(Integer value) {
		setStrength(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfigRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, Boolean value6, String value7, Integer value8, String value9, Integer value10, Integer value11, String value12, Integer value13, Integer value14, Double value15, Boolean value16, Integer value17) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		value17(value17);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITaskMapElementConfig from) {
		setId(from.getId());
		setTaskId(from.getTaskId());
		setXPos(from.getXPos());
		setYPos(from.getYPos());
		setElement(from.getElement());
		setIsBoss(from.getIsBoss());
		setBossImgName(from.getBossImgName());
		setItemDropId(from.getItemDropId());
		setSectionName(from.getSectionName());
		setCashReward(from.getCashReward());
		setOilReward(from.getOilReward());
		setCharacterImgName(from.getCharacterImgName());
		setCharVertPixelOffset(from.getCharVertPixelOffset());
		setCharHorizPixelOffset(from.getCharHorizPixelOffset());
		setCharScaleFactor(from.getCharScaleFactor());
		setIsFake(from.getIsFake());
		setStrength(from.getStrength());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITaskMapElementConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TaskMapElementConfigRecord
	 */
	public TaskMapElementConfigRecord() {
		super(TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG);
	}

	/**
	 * Create a detached, initialised TaskMapElementConfigRecord
	 */
	public TaskMapElementConfigRecord(Integer id, Integer taskId, Integer xPos, Integer yPos, String element, Boolean isBoss, String bossImgName, Integer itemDropId, String sectionName, Integer cashReward, Integer oilReward, String characterImgName, Integer charVertPixelOffset, Integer charHorizPixelOffset, Double charScaleFactor, Boolean isFake, Integer strength) {
		super(TaskMapElementConfig.TASK_MAP_ELEMENT_CONFIG);

		setValue(0, id);
		setValue(1, taskId);
		setValue(2, xPos);
		setValue(3, yPos);
		setValue(4, element);
		setValue(5, isBoss);
		setValue(6, bossImgName);
		setValue(7, itemDropId);
		setValue(8, sectionName);
		setValue(9, cashReward);
		setValue(10, oilReward);
		setValue(11, characterImgName);
		setValue(12, charVertPixelOffset);
		setValue(13, charHorizPixelOffset);
		setValue(14, charScaleFactor);
		setValue(15, isFake);
		setValue(16, strength);
	}
}
