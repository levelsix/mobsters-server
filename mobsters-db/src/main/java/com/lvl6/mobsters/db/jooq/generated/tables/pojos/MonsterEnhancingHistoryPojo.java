/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterEnhancingHistory;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_enhancing_history", schema = "mobsters")
public class MonsterEnhancingHistoryPojo implements IMonsterEnhancingHistory {

	private static final long serialVersionUID = -1192846210;

	private String    id;
	private String    userId;
	private String    mfuIdBeingEnhanced;
	private String    feederMfuId;
	private Integer   currentExperience;
	private Integer   previousExperience;
	private Timestamp enhancingStartTime;
	private Timestamp timeOfEntry;
	private Integer   enhancingCost;

	public MonsterEnhancingHistoryPojo() {}

	public MonsterEnhancingHistoryPojo(MonsterEnhancingHistoryPojo value) {
		this.id = value.id;
		this.userId = value.userId;
		this.mfuIdBeingEnhanced = value.mfuIdBeingEnhanced;
		this.feederMfuId = value.feederMfuId;
		this.currentExperience = value.currentExperience;
		this.previousExperience = value.previousExperience;
		this.enhancingStartTime = value.enhancingStartTime;
		this.timeOfEntry = value.timeOfEntry;
		this.enhancingCost = value.enhancingCost;
	}

	public MonsterEnhancingHistoryPojo(
		String    id,
		String    userId,
		String    mfuIdBeingEnhanced,
		String    feederMfuId,
		Integer   currentExperience,
		Integer   previousExperience,
		Timestamp enhancingStartTime,
		Timestamp timeOfEntry,
		Integer   enhancingCost
	) {
		this.id = id;
		this.userId = userId;
		this.mfuIdBeingEnhanced = mfuIdBeingEnhanced;
		this.feederMfuId = feederMfuId;
		this.currentExperience = currentExperience;
		this.previousExperience = previousExperience;
		this.enhancingStartTime = enhancingStartTime;
		this.timeOfEntry = timeOfEntry;
		this.enhancingCost = enhancingCost;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return this.id;
	}

	@Override
	public MonsterEnhancingHistoryPojo setId(String id) {
		this.id = id;
		return this;
	}

	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public MonsterEnhancingHistoryPojo setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "mfu_id_being_enhanced", length = 36)
	@Size(max = 36)
	@Override
	public String getMfuIdBeingEnhanced() {
		return this.mfuIdBeingEnhanced;
	}

	@Override
	public MonsterEnhancingHistoryPojo setMfuIdBeingEnhanced(String mfuIdBeingEnhanced) {
		this.mfuIdBeingEnhanced = mfuIdBeingEnhanced;
		return this;
	}

	@Column(name = "feeder_mfu_id", length = 36)
	@Size(max = 36)
	@Override
	public String getFeederMfuId() {
		return this.feederMfuId;
	}

	@Override
	public MonsterEnhancingHistoryPojo setFeederMfuId(String feederMfuId) {
		this.feederMfuId = feederMfuId;
		return this;
	}

	@Column(name = "current_experience", precision = 10)
	@Override
	public Integer getCurrentExperience() {
		return this.currentExperience;
	}

	@Override
	public MonsterEnhancingHistoryPojo setCurrentExperience(Integer currentExperience) {
		this.currentExperience = currentExperience;
		return this;
	}

	@Column(name = "previous_experience", precision = 10)
	@Override
	public Integer getPreviousExperience() {
		return this.previousExperience;
	}

	@Override
	public MonsterEnhancingHistoryPojo setPreviousExperience(Integer previousExperience) {
		this.previousExperience = previousExperience;
		return this;
	}

	@Column(name = "enhancing_start_time")
	@Override
	public Timestamp getEnhancingStartTime() {
		return this.enhancingStartTime;
	}

	@Override
	public MonsterEnhancingHistoryPojo setEnhancingStartTime(Timestamp enhancingStartTime) {
		this.enhancingStartTime = enhancingStartTime;
		return this;
	}

	@Column(name = "time_of_entry")
	@Override
	public Timestamp getTimeOfEntry() {
		return this.timeOfEntry;
	}

	@Override
	public MonsterEnhancingHistoryPojo setTimeOfEntry(Timestamp timeOfEntry) {
		this.timeOfEntry = timeOfEntry;
		return this;
	}

	@Column(name = "enhancing_cost", precision = 10)
	@Override
	public Integer getEnhancingCost() {
		return this.enhancingCost;
	}

	@Override
	public MonsterEnhancingHistoryPojo setEnhancingCost(Integer enhancingCost) {
		this.enhancingCost = enhancingCost;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterEnhancingHistory from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setMfuIdBeingEnhanced(from.getMfuIdBeingEnhanced());
		setFeederMfuId(from.getFeederMfuId());
		setCurrentExperience(from.getCurrentExperience());
		setPreviousExperience(from.getPreviousExperience());
		setEnhancingStartTime(from.getEnhancingStartTime());
		setTimeOfEntry(from.getTimeOfEntry());
		setEnhancingCost(from.getEnhancingCost());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterEnhancingHistory> E into(E into) {
		into.from(this);
		return into;
	}
}
