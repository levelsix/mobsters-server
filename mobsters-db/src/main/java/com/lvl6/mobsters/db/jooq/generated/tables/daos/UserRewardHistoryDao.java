/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.UserRewardHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.UserRewardHistoryPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.UserRewardHistoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRewardHistoryDao extends DAOImpl<UserRewardHistoryRecord, UserRewardHistoryPojo, String> {

	/**
	 * Create a new UserRewardHistoryDao without any configuration
	 */
	public UserRewardHistoryDao() {
		super(UserRewardHistory.USER_REWARD_HISTORY, UserRewardHistoryPojo.class);
	}

	/**
	 * Create a new UserRewardHistoryDao with an attached configuration
	 */
	public UserRewardHistoryDao(Configuration configuration) {
		super(UserRewardHistory.USER_REWARD_HISTORY, UserRewardHistoryPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(UserRewardHistoryPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchById(String... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public UserRewardHistoryPojo fetchOneById(String value) {
		return fetchOne(UserRewardHistory.USER_REWARD_HISTORY.ID, value);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByUserId(String... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>date IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByDate(Timestamp... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.DATE, values);
	}

	/**
	 * Fetch records that have <code>reward_id IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByRewardId(Integer... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.REWARD_ID, values);
	}

	/**
	 * Fetch records that have <code>static_data_id IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByStaticDataId(Integer... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.STATIC_DATA_ID, values);
	}

	/**
	 * Fetch records that have <code>reward_type IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByRewardType(String... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.REWARD_TYPE, values);
	}

	/**
	 * Fetch records that have <code>reason_for_reward IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByReasonForReward(String... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.REASON_FOR_REWARD, values);
	}

	/**
	 * Fetch records that have <code>details IN (values)</code>
	 */
	public List<UserRewardHistoryPojo> fetchByDetails(String... values) {
		return fetch(UserRewardHistory.USER_REWARD_HISTORY.DETAILS, values);
	}
}
