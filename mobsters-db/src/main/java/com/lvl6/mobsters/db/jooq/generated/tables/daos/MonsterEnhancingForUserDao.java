/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterEnhancingForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.MonsterEnhancingForUserPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEnhancingForUserRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterEnhancingForUserDao extends DAOImpl<MonsterEnhancingForUserRecord, MonsterEnhancingForUserPojo, Record2<String, String>> {

	/**
	 * Create a new MonsterEnhancingForUserDao without any configuration
	 */
	public MonsterEnhancingForUserDao() {
		super(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER, MonsterEnhancingForUserPojo.class);
	}

	/**
	 * Create a new MonsterEnhancingForUserDao with an attached configuration
	 */
	public MonsterEnhancingForUserDao(Configuration configuration) {
		super(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER, MonsterEnhancingForUserPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<String, String> getId(MonsterEnhancingForUserPojo object) {
		return compositeKeyRecord(object.getUserId(), object.getMonsterForUserId());
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<MonsterEnhancingForUserPojo> fetchByUserId(String... values) {
		return fetch(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>monster_for_user_id IN (values)</code>
	 */
	public List<MonsterEnhancingForUserPojo> fetchByMonsterForUserId(String... values) {
		return fetch(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.MONSTER_FOR_USER_ID, values);
	}

	/**
	 * Fetch records that have <code>expected_start_time IN (values)</code>
	 */
	public List<MonsterEnhancingForUserPojo> fetchByExpectedStartTime(Timestamp... values) {
		return fetch(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.EXPECTED_START_TIME, values);
	}

	/**
	 * Fetch records that have <code>enhancing_cost IN (values)</code>
	 */
	public List<MonsterEnhancingForUserPojo> fetchByEnhancingCost(Integer... values) {
		return fetch(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.ENHANCING_COST, values);
	}

	/**
	 * Fetch records that have <code>enhancing_complete IN (values)</code>
	 */
	public List<MonsterEnhancingForUserPojo> fetchByEnhancingComplete(Boolean... values) {
		return fetch(MonsterEnhancingForUser.MONSTER_ENHANCING_FOR_USER.ENHANCING_COMPLETE, values);
	}
}
