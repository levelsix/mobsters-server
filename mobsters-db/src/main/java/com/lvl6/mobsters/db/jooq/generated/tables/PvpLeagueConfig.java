/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.PvpLeagueConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PvpLeagueConfig extends TableImpl<PvpLeagueConfigRecord> {

	private static final long serialVersionUID = -413809247;

	/**
	 * The reference instance of <code>mobsters.pvp_league_config</code>
	 */
	public static final PvpLeagueConfig PVP_LEAGUE_CONFIG = new PvpLeagueConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PvpLeagueConfigRecord> getRecordType() {
		return PvpLeagueConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.pvp_league_config.id</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.league_name</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, String> LEAGUE_NAME = createField("league_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.img_prefix</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, String> IMG_PREFIX = createField("img_prefix", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.description</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.min_elo</code>. Can be less than a lower league's max elo. Lowest league has lowest min elo. if user's elo is lower than lowest league, user is in lowest league
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> MIN_ELO = createField("min_elo", org.jooq.impl.SQLDataType.INTEGER, this, "Can be less than a lower league's max elo. Lowest league has lowest min elo. if user's elo is lower than lowest league, user is in lowest league");

	/**
	 * The column <code>mobsters.pvp_league_config.max_elo</code>. Can be more than higher league's max elo. Highest league has highest min elo. if user's elo is more than highest league, user is in highest league
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> MAX_ELO = createField("max_elo", org.jooq.impl.SQLDataType.INTEGER, this, "Can be more than higher league's max elo. Highest league has highest min elo. if user's elo is more than highest league, user is in highest league");

	/**
	 * The column <code>mobsters.pvp_league_config.min_rank</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> MIN_RANK = createField("min_rank", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.max_rank</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> MAX_RANK = createField("max_rank", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.predecessor_id</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> PREDECESSOR_ID = createField("predecessor_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.pvp_league_config.successor_id</code>.
	 */
	public final TableField<PvpLeagueConfigRecord, Integer> SUCCESSOR_ID = createField("successor_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.pvp_league_config</code> table reference
	 */
	public PvpLeagueConfig() {
		this("pvp_league_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.pvp_league_config</code> table reference
	 */
	public PvpLeagueConfig(String alias) {
		this(alias, PVP_LEAGUE_CONFIG);
	}

	private PvpLeagueConfig(String alias, Table<PvpLeagueConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private PvpLeagueConfig(String alias, Table<PvpLeagueConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PvpLeagueConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PVP_LEAGUE_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PvpLeagueConfigRecord> getPrimaryKey() {
		return Keys.KEY_PVP_LEAGUE_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PvpLeagueConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<PvpLeagueConfigRecord>>asList(Keys.KEY_PVP_LEAGUE_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfig as(String alias) {
		return new PvpLeagueConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PvpLeagueConfig rename(String name) {
		return new PvpLeagueConfig(name, null);
	}
}
