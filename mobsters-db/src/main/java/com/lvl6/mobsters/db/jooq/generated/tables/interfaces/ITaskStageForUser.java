/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_stage_for_user", schema = "mobsters")
public interface ITaskStageForUser extends Serializable {

	/**
	 * Setter for <code>mobsters.task_stage_for_user.id</code>.
	 */
	public ITaskStageForUser setId(String value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	public String getId();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.task_for_user_id</code>. primary key in task table
	 */
	public ITaskStageForUser setTaskForUserId(String value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.task_for_user_id</code>. primary key in task table
	 */
	@Column(name = "task_for_user_id", length = 36)
	@Size(max = 36)
	public String getTaskForUserId();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.stage_num</code>. nth stage of a task
	 */
	public ITaskStageForUser setStageNum(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.stage_num</code>. nth stage of a task
	 */
	@Column(name = "stage_num", precision = 10)
	public Integer getStageNum();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.task_stage_monster_id</code>. primary key in task stage monster table, not monster id, which would be task stage monster monster id

	 */
	public ITaskStageForUser setTaskStageMonsterId(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.task_stage_monster_id</code>. primary key in task stage monster table, not monster id, which would be task stage monster monster id

	 */
	@Column(name = "task_stage_monster_id", precision = 10)
	public Integer getTaskStageMonsterId();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.monster_type</code>.
	 */
	public ITaskStageForUser setMonsterType(String value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.monster_type</code>.
	 */
	@Column(name = "monster_type", length = 45)
	@Size(max = 45)
	public String getMonsterType();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.exp_gained</code>.
	 */
	public ITaskStageForUser setExpGained(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.exp_gained</code>.
	 */
	@Column(name = "exp_gained", precision = 10)
	public Integer getExpGained();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.cash_gained</code>.
	 */
	public ITaskStageForUser setCashGained(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.cash_gained</code>.
	 */
	@Column(name = "cash_gained", precision = 10)
	public Integer getCashGained();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.oil_gained</code>.
	 */
	public ITaskStageForUser setOilGained(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.oil_gained</code>.
	 */
	@Column(name = "oil_gained", precision = 10)
	public Integer getOilGained();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.monster_piece_dropped</code>.
	 */
	public ITaskStageForUser setMonsterPieceDropped(Boolean value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.monster_piece_dropped</code>.
	 */
	@Column(name = "monster_piece_dropped", precision = 1)
	public Boolean getMonsterPieceDropped();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.item_id_dropped</code>. 0 means no item dropped
	 */
	public ITaskStageForUser setItemIdDropped(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.item_id_dropped</code>. 0 means no item dropped
	 */
	@Column(name = "item_id_dropped", precision = 10)
	public Integer getItemIdDropped();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.attacked_first</code>.
	 */
	public ITaskStageForUser setAttackedFirst(Boolean value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.attacked_first</code>.
	 */
	@Column(name = "attacked_first", precision = 1)
	public Boolean getAttackedFirst();

	/**
	 * Setter for <code>mobsters.task_stage_for_user.monster_lvl</code>. the lvl here could be different from task_stage_monster.lvl, specifically in the case of cake kids.
	 */
	public ITaskStageForUser setMonsterLvl(Integer value);

	/**
	 * Getter for <code>mobsters.task_stage_for_user.monster_lvl</code>. the lvl here could be different from task_stage_monster.lvl, specifically in the case of cake kids.
	 */
	@Column(name = "monster_lvl", precision = 10)
	public Integer getMonsterLvl();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface ITaskStageForUser
	 */
	public void from(com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskStageForUser from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface ITaskStageForUser
	 */
	public <E extends com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskStageForUser> E into(E into);
}
