/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_event_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "mini_event_timetable_id"})
})
public class MiniEventForUserPojo implements IMiniEventForUser {

	private static final long serialVersionUID = 1078566675;

	private String    userId;
	private Integer   miniEventTimetableId;
	private Integer   miniEventId;
	private Timestamp timeOfEntry;
	private Integer   userLvl;
	private Boolean   tierOneRedeemed;
	private Boolean   tierTwoRedeemed;
	private Boolean   tierThreeRedeemed;
	private Timestamp tierOneRedeemedTime;
	private Timestamp tierTwoRedeemedTime;
	private Timestamp tierThreeRedeemedTime;

	public MiniEventForUserPojo() {}

	public MiniEventForUserPojo(MiniEventForUserPojo value) {
		this.userId = value.userId;
		this.miniEventTimetableId = value.miniEventTimetableId;
		this.miniEventId = value.miniEventId;
		this.timeOfEntry = value.timeOfEntry;
		this.userLvl = value.userLvl;
		this.tierOneRedeemed = value.tierOneRedeemed;
		this.tierTwoRedeemed = value.tierTwoRedeemed;
		this.tierThreeRedeemed = value.tierThreeRedeemed;
		this.tierOneRedeemedTime = value.tierOneRedeemedTime;
		this.tierTwoRedeemedTime = value.tierTwoRedeemedTime;
		this.tierThreeRedeemedTime = value.tierThreeRedeemedTime;
	}

	public MiniEventForUserPojo(
		String    userId,
		Integer   miniEventTimetableId,
		Integer   miniEventId,
		Timestamp timeOfEntry,
		Integer   userLvl,
		Boolean   tierOneRedeemed,
		Boolean   tierTwoRedeemed,
		Boolean   tierThreeRedeemed,
		Timestamp tierOneRedeemedTime,
		Timestamp tierTwoRedeemedTime,
		Timestamp tierThreeRedeemedTime
	) {
		this.userId = userId;
		this.miniEventTimetableId = miniEventTimetableId;
		this.miniEventId = miniEventId;
		this.timeOfEntry = timeOfEntry;
		this.userLvl = userLvl;
		this.tierOneRedeemed = tierOneRedeemed;
		this.tierTwoRedeemed = tierTwoRedeemed;
		this.tierThreeRedeemed = tierThreeRedeemed;
		this.tierOneRedeemedTime = tierOneRedeemedTime;
		this.tierTwoRedeemedTime = tierTwoRedeemedTime;
		this.tierThreeRedeemedTime = tierThreeRedeemedTime;
	}

	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public MiniEventForUserPojo setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "mini_event_timetable_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getMiniEventTimetableId() {
		return this.miniEventTimetableId;
	}

	@Override
	public MiniEventForUserPojo setMiniEventTimetableId(Integer miniEventTimetableId) {
		this.miniEventTimetableId = miniEventTimetableId;
		return this;
	}

	@Column(name = "mini_event_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getMiniEventId() {
		return this.miniEventId;
	}

	@Override
	public MiniEventForUserPojo setMiniEventId(Integer miniEventId) {
		this.miniEventId = miniEventId;
		return this;
	}

	@Column(name = "time_of_entry", nullable = false)
	@NotNull
	@Override
	public Timestamp getTimeOfEntry() {
		return this.timeOfEntry;
	}

	@Override
	public MiniEventForUserPojo setTimeOfEntry(Timestamp timeOfEntry) {
		this.timeOfEntry = timeOfEntry;
		return this;
	}

	@Column(name = "user_lvl", precision = 10)
	@Override
	public Integer getUserLvl() {
		return this.userLvl;
	}

	@Override
	public MiniEventForUserPojo setUserLvl(Integer userLvl) {
		this.userLvl = userLvl;
		return this;
	}

	@Column(name = "tier_one_redeemed", precision = 1)
	@Override
	public Boolean getTierOneRedeemed() {
		return this.tierOneRedeemed;
	}

	@Override
	public MiniEventForUserPojo setTierOneRedeemed(Boolean tierOneRedeemed) {
		this.tierOneRedeemed = tierOneRedeemed;
		return this;
	}

	@Column(name = "tier_two_redeemed", precision = 1)
	@Override
	public Boolean getTierTwoRedeemed() {
		return this.tierTwoRedeemed;
	}

	@Override
	public MiniEventForUserPojo setTierTwoRedeemed(Boolean tierTwoRedeemed) {
		this.tierTwoRedeemed = tierTwoRedeemed;
		return this;
	}

	@Column(name = "tier_three_redeemed", precision = 1)
	@Override
	public Boolean getTierThreeRedeemed() {
		return this.tierThreeRedeemed;
	}

	@Override
	public MiniEventForUserPojo setTierThreeRedeemed(Boolean tierThreeRedeemed) {
		this.tierThreeRedeemed = tierThreeRedeemed;
		return this;
	}

	@Column(name = "tier_one_redeemed_time")
	@Override
	public Timestamp getTierOneRedeemedTime() {
		return this.tierOneRedeemedTime;
	}

	@Override
	public MiniEventForUserPojo setTierOneRedeemedTime(Timestamp tierOneRedeemedTime) {
		this.tierOneRedeemedTime = tierOneRedeemedTime;
		return this;
	}

	@Column(name = "tier_two_redeemed_time")
	@Override
	public Timestamp getTierTwoRedeemedTime() {
		return this.tierTwoRedeemedTime;
	}

	@Override
	public MiniEventForUserPojo setTierTwoRedeemedTime(Timestamp tierTwoRedeemedTime) {
		this.tierTwoRedeemedTime = tierTwoRedeemedTime;
		return this;
	}

	@Column(name = "tier_three_redeemed_time")
	@Override
	public Timestamp getTierThreeRedeemedTime() {
		return this.tierThreeRedeemedTime;
	}

	@Override
	public MiniEventForUserPojo setTierThreeRedeemedTime(Timestamp tierThreeRedeemedTime) {
		this.tierThreeRedeemedTime = tierThreeRedeemedTime;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniEventForUser from) {
		setUserId(from.getUserId());
		setMiniEventTimetableId(from.getMiniEventTimetableId());
		setMiniEventId(from.getMiniEventId());
		setTimeOfEntry(from.getTimeOfEntry());
		setUserLvl(from.getUserLvl());
		setTierOneRedeemed(from.getTierOneRedeemed());
		setTierTwoRedeemed(from.getTierTwoRedeemed());
		setTierThreeRedeemed(from.getTierThreeRedeemed());
		setTierOneRedeemedTime(from.getTierOneRedeemedTime());
		setTierTwoRedeemedTime(from.getTierTwoRedeemedTime());
		setTierThreeRedeemedTime(from.getTierThreeRedeemedTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniEventForUser> E into(E into) {
		into.from(this);
		return into;
	}


	public String toString() {
		com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventForUserRecord poop = new com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventForUserRecord();
		poop.from(this);
		return "MiniEventForUserPojo[" + poop.valuesRow() + "]";
	}
}
