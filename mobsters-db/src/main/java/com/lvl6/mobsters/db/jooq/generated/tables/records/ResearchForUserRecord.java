/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.ResearchForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IResearchForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "research_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "user_id"})
})
public class ResearchForUserRecord extends UpdatableRecordImpl<ResearchForUserRecord> implements Record5<String, String, Integer, Timestamp, Boolean>, IResearchForUser {

	private static final long serialVersionUID = -661113115;

	/**
	 * Setter for <code>mobsters.research_for_user.id</code>.
	 */
	@Override
	public ResearchForUserRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_for_user.id</code>.
	 */
	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.research_for_user.user_id</code>.
	 */
	@Override
	public ResearchForUserRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.research_for_user.research_id</code>.
	 */
	@Override
	public ResearchForUserRecord setResearchId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_for_user.research_id</code>.
	 */
	@Column(name = "research_id", precision = 10)
	@Override
	public Integer getResearchId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.research_for_user.time_purchased</code>.
	 */
	@Override
	public ResearchForUserRecord setTimePurchased(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_for_user.time_purchased</code>.
	 */
	@Column(name = "time_purchased")
	@Override
	public Timestamp getTimePurchased() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.research_for_user.is_complete</code>.
	 */
	@Override
	public ResearchForUserRecord setIsComplete(Boolean value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_for_user.is_complete</code>.
	 */
	@Column(name = "is_complete", precision = 1)
	@Override
	public Boolean getIsComplete() {
		return (Boolean) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, Integer, Timestamp, Boolean> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, Integer, Timestamp, Boolean> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return ResearchForUser.RESEARCH_FOR_USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ResearchForUser.RESEARCH_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return ResearchForUser.RESEARCH_FOR_USER.RESEARCH_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return ResearchForUser.RESEARCH_FOR_USER.TIME_PURCHASED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field5() {
		return ResearchForUser.RESEARCH_FOR_USER.IS_COMPLETE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getResearchId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getTimePurchased();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value5() {
		return getIsComplete();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchForUserRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchForUserRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchForUserRecord value3(Integer value) {
		setResearchId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchForUserRecord value4(Timestamp value) {
		setTimePurchased(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchForUserRecord value5(Boolean value) {
		setIsComplete(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchForUserRecord values(String value1, String value2, Integer value3, Timestamp value4, Boolean value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IResearchForUser from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setResearchId(from.getResearchId());
		setTimePurchased(from.getTimePurchased());
		setIsComplete(from.getIsComplete());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IResearchForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ResearchForUserRecord
	 */
	public ResearchForUserRecord() {
		super(ResearchForUser.RESEARCH_FOR_USER);
	}

	/**
	 * Create a detached, initialised ResearchForUserRecord
	 */
	public ResearchForUserRecord(String id, String userId, Integer researchId, Timestamp timePurchased, Boolean isComplete) {
		super(ResearchForUser.RESEARCH_FOR_USER);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, researchId);
		setValue(3, timePurchased);
		setValue(4, isComplete);
	}
}
