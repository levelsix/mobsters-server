/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterSnapshotForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.MonsterSnapshotForUserPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterSnapshotForUserRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterSnapshotForUserDao extends DAOImpl<MonsterSnapshotForUserRecord, MonsterSnapshotForUserPojo, Record3<String, String, String>> {

	/**
	 * Create a new MonsterSnapshotForUserDao without any configuration
	 */
	public MonsterSnapshotForUserDao() {
		super(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER, MonsterSnapshotForUserPojo.class);
	}

	/**
	 * Create a new MonsterSnapshotForUserDao with an attached configuration
	 */
	public MonsterSnapshotForUserDao(Configuration configuration) {
		super(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER, MonsterSnapshotForUserPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record3<String, String, String> getId(MonsterSnapshotForUserPojo object) {
		return compositeKeyRecord(object.getId(), object.getTimeOfEntry(), object.getUserId());
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchById(String... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.ID, values);
	}

	/**
	 * Fetch records that have <code>time_of_entry IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByTimeOfEntry(String... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TIME_OF_ENTRY, values);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByUserId(String... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>type IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByType(String... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TYPE, values);
	}

	/**
	 * Fetch records that have <code>id_in_table IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByIdInTable(String... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.ID_IN_TABLE, values);
	}

	/**
	 * Fetch records that have <code>monster_for_user_id IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByMonsterForUserId(String... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.MONSTER_FOR_USER_ID, values);
	}

	/**
	 * Fetch records that have <code>monster_id IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByMonsterId(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.MONSTER_ID, values);
	}

	/**
	 * Fetch records that have <code>current_exp IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByCurrentExp(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.CURRENT_EXP, values);
	}

	/**
	 * Fetch records that have <code>current_lvl IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByCurrentLvl(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.CURRENT_LVL, values);
	}

	/**
	 * Fetch records that have <code>current_hp IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByCurrentHp(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.CURRENT_HP, values);
	}

	/**
	 * Fetch records that have <code>team_slot_num IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByTeamSlotNum(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TEAM_SLOT_NUM, values);
	}

	/**
	 * Fetch records that have <code>off_skill_id IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByOffSkillId(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.OFF_SKILL_ID, values);
	}

	/**
	 * Fetch records that have <code>def_skill_id IN (values)</code>
	 */
	public List<MonsterSnapshotForUserPojo> fetchByDefSkillId(Integer... values) {
		return fetch(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.DEF_SKILL_ID, values);
	}
}
