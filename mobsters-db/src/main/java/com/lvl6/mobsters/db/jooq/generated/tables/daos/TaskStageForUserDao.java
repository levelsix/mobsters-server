/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskStageForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.TaskStageForUserPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskStageForUserRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskStageForUserDao extends DAOImpl<TaskStageForUserRecord, TaskStageForUserPojo, String> {

	/**
	 * Create a new TaskStageForUserDao without any configuration
	 */
	public TaskStageForUserDao() {
		super(TaskStageForUser.TASK_STAGE_FOR_USER, TaskStageForUserPojo.class);
	}

	/**
	 * Create a new TaskStageForUserDao with an attached configuration
	 */
	public TaskStageForUserDao(Configuration configuration) {
		super(TaskStageForUser.TASK_STAGE_FOR_USER, TaskStageForUserPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(TaskStageForUserPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchById(String... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public TaskStageForUserPojo fetchOneById(String value) {
		return fetchOne(TaskStageForUser.TASK_STAGE_FOR_USER.ID, value);
	}

	/**
	 * Fetch records that have <code>task_for_user_id IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByTaskForUserId(String... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.TASK_FOR_USER_ID, values);
	}

	/**
	 * Fetch records that have <code>stage_num IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByStageNum(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.STAGE_NUM, values);
	}

	/**
	 * Fetch records that have <code>task_stage_monster_id IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByTaskStageMonsterId(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.TASK_STAGE_MONSTER_ID, values);
	}

	/**
	 * Fetch records that have <code>monster_type IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByMonsterType(String... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.MONSTER_TYPE, values);
	}

	/**
	 * Fetch records that have <code>exp_gained IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByExpGained(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.EXP_GAINED, values);
	}

	/**
	 * Fetch records that have <code>cash_gained IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByCashGained(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.CASH_GAINED, values);
	}

	/**
	 * Fetch records that have <code>oil_gained IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByOilGained(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.OIL_GAINED, values);
	}

	/**
	 * Fetch records that have <code>monster_piece_dropped IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByMonsterPieceDropped(Boolean... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.MONSTER_PIECE_DROPPED, values);
	}

	/**
	 * Fetch records that have <code>item_id_dropped IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByItemIdDropped(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.ITEM_ID_DROPPED, values);
	}

	/**
	 * Fetch records that have <code>attacked_first IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByAttackedFirst(Boolean... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.ATTACKED_FIRST, values);
	}

	/**
	 * Fetch records that have <code>monster_lvl IN (values)</code>
	 */
	public List<TaskStageForUserPojo> fetchByMonsterLvl(Integer... values) {
		return fetch(TaskStageForUser.TASK_STAGE_FOR_USER.MONSTER_LVL, values);
	}
}
