/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.AchievementConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementConfig extends TableImpl<AchievementConfigRecord> {

	private static final long serialVersionUID = 1540757087;

	/**
	 * The reference instance of <code>mobsters.achievement_config</code>
	 */
	public static final AchievementConfig ACHIEVEMENT_CONFIG = new AchievementConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AchievementConfigRecord> getRecordType() {
		return AchievementConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.achievement_config.id</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.achievement_config.name</code>.
	 */
	public final TableField<AchievementConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.achievement_config.description</code>.
	 */
	public final TableField<AchievementConfigRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.achievement_config.gem_reward</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> GEM_REWARD = createField("gem_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.achievement_config.lvl</code>.
	 */
	public final TableField<AchievementConfigRecord, Byte> LVL = createField("lvl", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.achievement_config.achievement_type</code>.
	 */
	public final TableField<AchievementConfigRecord, String> ACHIEVEMENT_TYPE = createField("achievement_type", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.achievement_config.resource_type</code>. could be null
	 */
	public final TableField<AchievementConfigRecord, String> RESOURCE_TYPE = createField("resource_type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "could be null");

	/**
	 * The column <code>mobsters.achievement_config.monster_element</code>. could be null
	 */
	public final TableField<AchievementConfigRecord, String> MONSTER_ELEMENT = createField("monster_element", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "could be null");

	/**
	 * The column <code>mobsters.achievement_config.monster_quality</code>. could be null
	 */
	public final TableField<AchievementConfigRecord, String> MONSTER_QUALITY = createField("monster_quality", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "could be null");

	/**
	 * The column <code>mobsters.achievement_config.static_data_id</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> STATIC_DATA_ID = createField("static_data_id", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.achievement_config.quantity</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.achievement_config.priority</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.achievement_config.prerequisite_id</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> PREREQUISITE_ID = createField("prerequisite_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.achievement_config.successor_id</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> SUCCESSOR_ID = createField("successor_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.achievement_config.exp_reward</code>.
	 */
	public final TableField<AchievementConfigRecord, Integer> EXP_REWARD = createField("exp_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.achievement_config</code> table reference
	 */
	public AchievementConfig() {
		this("achievement_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.achievement_config</code> table reference
	 */
	public AchievementConfig(String alias) {
		this(alias, ACHIEVEMENT_CONFIG);
	}

	private AchievementConfig(String alias, Table<AchievementConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private AchievementConfig(String alias, Table<AchievementConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AchievementConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ACHIEVEMENT_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AchievementConfigRecord> getPrimaryKey() {
		return Keys.KEY_ACHIEVEMENT_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AchievementConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<AchievementConfigRecord>>asList(Keys.KEY_ACHIEVEMENT_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfig as(String alias) {
		return new AchievementConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AchievementConfig rename(String name) {
		return new AchievementConfig(name, null);
	}
}
