/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IReferral;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "referral", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"referrer_id", "newly_referred_id"})
})
public class ReferralPojo implements IReferral {

	private static final long serialVersionUID = 537540827;

	private Integer   referrerId;
	private Integer   newlyReferredId;
	private Timestamp timeOfReferral;
	private Integer   coinsGivenToReferrer;

	public ReferralPojo() {}

	public ReferralPojo(ReferralPojo value) {
		this.referrerId = value.referrerId;
		this.newlyReferredId = value.newlyReferredId;
		this.timeOfReferral = value.timeOfReferral;
		this.coinsGivenToReferrer = value.coinsGivenToReferrer;
	}

	public ReferralPojo(
		Integer   referrerId,
		Integer   newlyReferredId,
		Timestamp timeOfReferral,
		Integer   coinsGivenToReferrer
	) {
		this.referrerId = referrerId;
		this.newlyReferredId = newlyReferredId;
		this.timeOfReferral = timeOfReferral;
		this.coinsGivenToReferrer = coinsGivenToReferrer;
	}

	@Column(name = "referrer_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getReferrerId() {
		return this.referrerId;
	}

	@Override
	public ReferralPojo setReferrerId(Integer referrerId) {
		this.referrerId = referrerId;
		return this;
	}

	@Column(name = "newly_referred_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getNewlyReferredId() {
		return this.newlyReferredId;
	}

	@Override
	public ReferralPojo setNewlyReferredId(Integer newlyReferredId) {
		this.newlyReferredId = newlyReferredId;
		return this;
	}

	@Column(name = "time_of_referral")
	@Override
	public Timestamp getTimeOfReferral() {
		return this.timeOfReferral;
	}

	@Override
	public ReferralPojo setTimeOfReferral(Timestamp timeOfReferral) {
		this.timeOfReferral = timeOfReferral;
		return this;
	}

	@Column(name = "coins_given_to_referrer", precision = 10)
	@Override
	public Integer getCoinsGivenToReferrer() {
		return this.coinsGivenToReferrer;
	}

	@Override
	public ReferralPojo setCoinsGivenToReferrer(Integer coinsGivenToReferrer) {
		this.coinsGivenToReferrer = coinsGivenToReferrer;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IReferral from) {
		setReferrerId(from.getReferrerId());
		setNewlyReferredId(from.getNewlyReferredId());
		setTimeOfReferral(from.getTimeOfReferral());
		setCoinsGivenToReferrer(from.getCoinsGivenToReferrer());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IReferral> E into(E into) {
		into.from(this);
		return into;
	}
}
