/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IBoosterItemConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "booster_item_config", schema = "mobsters")
public class BoosterItemConfigPojo implements IBoosterItemConfig {

	private static final long serialVersionUID = -740435992;

	private Integer id;
	private Integer boosterPackId;
	private Integer monsterId;
	private Byte    numPieces;
	private Boolean isComplete;
	private Boolean isSpecial;
	private Integer gemReward;
	private Integer cashReward;
	private Double  chanceToAppear;
	private Integer itemId;
	private Integer itemQuantity;
	private Integer rewardId;

	public BoosterItemConfigPojo() {}

	public BoosterItemConfigPojo(BoosterItemConfigPojo value) {
		this.id = value.id;
		this.boosterPackId = value.boosterPackId;
		this.monsterId = value.monsterId;
		this.numPieces = value.numPieces;
		this.isComplete = value.isComplete;
		this.isSpecial = value.isSpecial;
		this.gemReward = value.gemReward;
		this.cashReward = value.cashReward;
		this.chanceToAppear = value.chanceToAppear;
		this.itemId = value.itemId;
		this.itemQuantity = value.itemQuantity;
		this.rewardId = value.rewardId;
	}

	public BoosterItemConfigPojo(
		Integer id,
		Integer boosterPackId,
		Integer monsterId,
		Byte    numPieces,
		Boolean isComplete,
		Boolean isSpecial,
		Integer gemReward,
		Integer cashReward,
		Double  chanceToAppear,
		Integer itemId,
		Integer itemQuantity,
		Integer rewardId
	) {
		this.id = id;
		this.boosterPackId = boosterPackId;
		this.monsterId = monsterId;
		this.numPieces = numPieces;
		this.isComplete = isComplete;
		this.isSpecial = isSpecial;
		this.gemReward = gemReward;
		this.cashReward = cashReward;
		this.chanceToAppear = chanceToAppear;
		this.itemId = itemId;
		this.itemQuantity = itemQuantity;
		this.rewardId = rewardId;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public BoosterItemConfigPojo setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "booster_pack_id", precision = 10)
	@Override
	public Integer getBoosterPackId() {
		return this.boosterPackId;
	}

	@Override
	public BoosterItemConfigPojo setBoosterPackId(Integer boosterPackId) {
		this.boosterPackId = boosterPackId;
		return this;
	}

	@Column(name = "monster_id", precision = 7)
	@Override
	public Integer getMonsterId() {
		return this.monsterId;
	}

	@Override
	public BoosterItemConfigPojo setMonsterId(Integer monsterId) {
		this.monsterId = monsterId;
		return this;
	}

	@Column(name = "num_pieces", precision = 3)
	@Override
	public Byte getNumPieces() {
		return this.numPieces;
	}

	@Override
	public BoosterItemConfigPojo setNumPieces(Byte numPieces) {
		this.numPieces = numPieces;
		return this;
	}

	@Column(name = "is_complete", precision = 1)
	@Override
	public Boolean getIsComplete() {
		return this.isComplete;
	}

	@Override
	public BoosterItemConfigPojo setIsComplete(Boolean isComplete) {
		this.isComplete = isComplete;
		return this;
	}

	@Column(name = "is_special", nullable = false, precision = 1)
	@NotNull
	@Override
	public Boolean getIsSpecial() {
		return this.isSpecial;
	}

	@Override
	public BoosterItemConfigPojo setIsSpecial(Boolean isSpecial) {
		this.isSpecial = isSpecial;
		return this;
	}

	@Column(name = "gem_reward", precision = 7)
	@Override
	public Integer getGemReward() {
		return this.gemReward;
	}

	@Override
	public BoosterItemConfigPojo setGemReward(Integer gemReward) {
		this.gemReward = gemReward;
		return this;
	}

	@Column(name = "cash_reward", precision = 10)
	@Override
	public Integer getCashReward() {
		return this.cashReward;
	}

	@Override
	public BoosterItemConfigPojo setCashReward(Integer cashReward) {
		this.cashReward = cashReward;
		return this;
	}

	@Column(name = "chance_to_appear", precision = 12)
	@Override
	public Double getChanceToAppear() {
		return this.chanceToAppear;
	}

	@Override
	public BoosterItemConfigPojo setChanceToAppear(Double chanceToAppear) {
		this.chanceToAppear = chanceToAppear;
		return this;
	}

	@Column(name = "item_id", precision = 10)
	@Override
	public Integer getItemId() {
		return this.itemId;
	}

	@Override
	public BoosterItemConfigPojo setItemId(Integer itemId) {
		this.itemId = itemId;
		return this;
	}

	@Column(name = "item_quantity", precision = 10)
	@Override
	public Integer getItemQuantity() {
		return this.itemQuantity;
	}

	@Override
	public BoosterItemConfigPojo setItemQuantity(Integer itemQuantity) {
		this.itemQuantity = itemQuantity;
		return this;
	}

	@Column(name = "reward_id", precision = 10)
	@Override
	public Integer getRewardId() {
		return this.rewardId;
	}

	@Override
	public BoosterItemConfigPojo setRewardId(Integer rewardId) {
		this.rewardId = rewardId;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IBoosterItemConfig from) {
		setId(from.getId());
		setBoosterPackId(from.getBoosterPackId());
		setMonsterId(from.getMonsterId());
		setNumPieces(from.getNumPieces());
		setIsComplete(from.getIsComplete());
		setIsSpecial(from.getIsSpecial());
		setGemReward(from.getGemReward());
		setCashReward(from.getCashReward());
		setChanceToAppear(from.getChanceToAppear());
		setItemId(from.getItemId());
		setItemQuantity(from.getItemQuantity());
		setRewardId(from.getRewardId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IBoosterItemConfig> E into(E into) {
		into.from(this);
		return into;
	}
}
