/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.AchievementForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IAchievementForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "achievement_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "achievement_id"})
})
public class AchievementForUserRecord extends UpdatableRecordImpl<AchievementForUserRecord> implements Record7<String, Integer, Integer, Boolean, Timestamp, Boolean, Timestamp>, IAchievementForUser {

	private static final long serialVersionUID = -871154701;

	/**
	 * Setter for <code>mobsters.achievement_for_user.user_id</code>.
	 */
	@Override
	public AchievementForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.achievement_for_user.achievement_id</code>.
	 */
	@Override
	public AchievementForUserRecord setAchievementId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.achievement_id</code>.
	 */
	@Column(name = "achievement_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getAchievementId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.achievement_for_user.progress</code>.
	 */
	@Override
	public AchievementForUserRecord setProgress(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.progress</code>.
	 */
	@Column(name = "progress", precision = 10)
	@Override
	public Integer getProgress() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.achievement_for_user.is_complete</code>.
	 */
	@Override
	public AchievementForUserRecord setIsComplete(Boolean value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.is_complete</code>.
	 */
	@Column(name = "is_complete", precision = 1)
	@Override
	public Boolean getIsComplete() {
		return (Boolean) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.achievement_for_user.time_completed</code>.
	 */
	@Override
	public AchievementForUserRecord setTimeCompleted(Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.time_completed</code>.
	 */
	@Column(name = "time_completed")
	@Override
	public Timestamp getTimeCompleted() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.achievement_for_user.is_redeemed</code>.
	 */
	@Override
	public AchievementForUserRecord setIsRedeemed(Boolean value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.is_redeemed</code>.
	 */
	@Column(name = "is_redeemed", precision = 1)
	@Override
	public Boolean getIsRedeemed() {
		return (Boolean) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.achievement_for_user.time_redeemed</code>.
	 */
	@Override
	public AchievementForUserRecord setTimeRedeemed(Timestamp value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_for_user.time_redeemed</code>.
	 */
	@Column(name = "time_redeemed")
	@Override
	public Timestamp getTimeRedeemed() {
		return (Timestamp) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, Integer, Integer, Boolean, Timestamp, Boolean, Timestamp> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, Integer, Integer, Boolean, Timestamp, Boolean, Timestamp> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.ACHIEVEMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.PROGRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field4() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.IS_COMPLETE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.TIME_COMPLETED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.IS_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return AchievementForUser.ACHIEVEMENT_FOR_USER.TIME_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getAchievementId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getProgress();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value4() {
		return getIsComplete();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getTimeCompleted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getIsRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getTimeRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value2(Integer value) {
		setAchievementId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value3(Integer value) {
		setProgress(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value4(Boolean value) {
		setIsComplete(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value5(Timestamp value) {
		setTimeCompleted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value6(Boolean value) {
		setIsRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord value7(Timestamp value) {
		setTimeRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementForUserRecord values(String value1, Integer value2, Integer value3, Boolean value4, Timestamp value5, Boolean value6, Timestamp value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IAchievementForUser from) {
		setUserId(from.getUserId());
		setAchievementId(from.getAchievementId());
		setProgress(from.getProgress());
		setIsComplete(from.getIsComplete());
		setTimeCompleted(from.getTimeCompleted());
		setIsRedeemed(from.getIsRedeemed());
		setTimeRedeemed(from.getTimeRedeemed());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IAchievementForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AchievementForUserRecord
	 */
	public AchievementForUserRecord() {
		super(AchievementForUser.ACHIEVEMENT_FOR_USER);
	}

	/**
	 * Create a detached, initialised AchievementForUserRecord
	 */
	public AchievementForUserRecord(String userId, Integer achievementId, Integer progress, Boolean isComplete, Timestamp timeCompleted, Boolean isRedeemed, Timestamp timeRedeemed) {
		super(AchievementForUser.ACHIEVEMENT_FOR_USER);

		setValue(0, userId);
		setValue(1, achievementId);
		setValue(2, progress);
		setValue(3, isComplete);
		setValue(4, timeCompleted);
		setValue(5, isRedeemed);
		setValue(6, timeRedeemed);
	}
}
