/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IItemForUserUsage;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "item_for_user_usage", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "user_id"})
})
public class ItemForUserUsage implements IItemForUserUsage {

	private static final long serialVersionUID = 373260215;

	private String    id;
	private String    userId;
	private Integer   itemId;
	private Timestamp timeOfEntry;
	private String    userDataId;
	private String    actionType;

	public ItemForUserUsage() {}

	public ItemForUserUsage(ItemForUserUsage value) {
		this.id = value.id;
		this.userId = value.userId;
		this.itemId = value.itemId;
		this.timeOfEntry = value.timeOfEntry;
		this.userDataId = value.userDataId;
		this.actionType = value.actionType;
	}

	public ItemForUserUsage(
		String    id,
		String    userId,
		Integer   itemId,
		Timestamp timeOfEntry,
		String    userDataId,
		String    actionType
	) {
		this.id = id;
		this.userId = userId;
		this.itemId = itemId;
		this.timeOfEntry = timeOfEntry;
		this.userDataId = userDataId;
		this.actionType = actionType;
	}

	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return this.id;
	}

	@Override
	public ItemForUserUsage setId(String id) {
		this.id = id;
		return this;
	}

	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public ItemForUserUsage setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "item_id", precision = 10)
	@Override
	public Integer getItemId() {
		return this.itemId;
	}

	@Override
	public ItemForUserUsage setItemId(Integer itemId) {
		this.itemId = itemId;
		return this;
	}

	@Column(name = "time_of_entry", nullable = false)
	@NotNull
	@Override
	public Timestamp getTimeOfEntry() {
		return this.timeOfEntry;
	}

	@Override
	public ItemForUserUsage setTimeOfEntry(Timestamp timeOfEntry) {
		this.timeOfEntry = timeOfEntry;
		return this;
	}

	@Column(name = "user_data_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserDataId() {
		return this.userDataId;
	}

	@Override
	public ItemForUserUsage setUserDataId(String userDataId) {
		this.userDataId = userDataId;
		return this;
	}

	@Column(name = "action_type", length = 45)
	@Size(max = 45)
	@Override
	public String getActionType() {
		return this.actionType;
	}

	@Override
	public ItemForUserUsage setActionType(String actionType) {
		this.actionType = actionType;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IItemForUserUsage from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setItemId(from.getItemId());
		setTimeOfEntry(from.getTimeOfEntry());
		setUserDataId(from.getUserDataId());
		setActionType(from.getActionType());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IItemForUserUsage> E into(E into) {
		into.from(this);
		return into;
	}
}
