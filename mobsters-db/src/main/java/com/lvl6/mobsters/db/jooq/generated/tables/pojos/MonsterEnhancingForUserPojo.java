/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterEnhancingForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_enhancing_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "monster_for_user_id"})
})
public class MonsterEnhancingForUserPojo implements IMonsterEnhancingForUser {

	private static final long serialVersionUID = -113758131;

	private String    userId;
	private String    monsterForUserId;
	private Timestamp expectedStartTime;
	private Integer   enhancingCost;
	private Boolean   enhancingComplete;

	public MonsterEnhancingForUserPojo() {}

	public MonsterEnhancingForUserPojo(MonsterEnhancingForUserPojo value) {
		this.userId = value.userId;
		this.monsterForUserId = value.monsterForUserId;
		this.expectedStartTime = value.expectedStartTime;
		this.enhancingCost = value.enhancingCost;
		this.enhancingComplete = value.enhancingComplete;
	}

	public MonsterEnhancingForUserPojo(
		String    userId,
		String    monsterForUserId,
		Timestamp expectedStartTime,
		Integer   enhancingCost,
		Boolean   enhancingComplete
	) {
		this.userId = userId;
		this.monsterForUserId = monsterForUserId;
		this.expectedStartTime = expectedStartTime;
		this.enhancingCost = enhancingCost;
		this.enhancingComplete = enhancingComplete;
	}

	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public MonsterEnhancingForUserPojo setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "monster_for_user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getMonsterForUserId() {
		return this.monsterForUserId;
	}

	@Override
	public MonsterEnhancingForUserPojo setMonsterForUserId(String monsterForUserId) {
		this.monsterForUserId = monsterForUserId;
		return this;
	}

	@Column(name = "expected_start_time")
	@Override
	public Timestamp getExpectedStartTime() {
		return this.expectedStartTime;
	}

	@Override
	public MonsterEnhancingForUserPojo setExpectedStartTime(Timestamp expectedStartTime) {
		this.expectedStartTime = expectedStartTime;
		return this;
	}

	@Column(name = "enhancing_cost", precision = 10)
	@Override
	public Integer getEnhancingCost() {
		return this.enhancingCost;
	}

	@Override
	public MonsterEnhancingForUserPojo setEnhancingCost(Integer enhancingCost) {
		this.enhancingCost = enhancingCost;
		return this;
	}

	@Column(name = "enhancing_complete", precision = 1)
	@Override
	public Boolean getEnhancingComplete() {
		return this.enhancingComplete;
	}

	@Override
	public MonsterEnhancingForUserPojo setEnhancingComplete(Boolean enhancingComplete) {
		this.enhancingComplete = enhancingComplete;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterEnhancingForUser from) {
		setUserId(from.getUserId());
		setMonsterForUserId(from.getMonsterForUserId());
		setExpectedStartTime(from.getExpectedStartTime());
		setEnhancingCost(from.getEnhancingCost());
		setEnhancingComplete(from.getEnhancingComplete());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterEnhancingForUser> E into(E into) {
		into.from(this);
		return into;
	}


	public String toString() {
		com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEnhancingForUserRecord poop = new com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEnhancingForUserRecord();
		poop.from(this);
		return "MonsterEnhancingForUserPojo[" + poop.valuesRow() + "]";
	}
}
