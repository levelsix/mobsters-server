/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterHealingHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.MonsterHealingHistoryPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterHealingHistoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterHealingHistoryDao extends DAOImpl<MonsterHealingHistoryRecord, MonsterHealingHistoryPojo, String> {

	/**
	 * Create a new MonsterHealingHistoryDao without any configuration
	 */
	public MonsterHealingHistoryDao() {
		super(MonsterHealingHistory.MONSTER_HEALING_HISTORY, MonsterHealingHistoryPojo.class);
	}

	/**
	 * Create a new MonsterHealingHistoryDao with an attached configuration
	 */
	public MonsterHealingHistoryDao(Configuration configuration) {
		super(MonsterHealingHistory.MONSTER_HEALING_HISTORY, MonsterHealingHistoryPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(MonsterHealingHistoryPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<MonsterHealingHistoryPojo> fetchById(String... values) {
		return fetch(MonsterHealingHistory.MONSTER_HEALING_HISTORY.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public MonsterHealingHistoryPojo fetchOneById(String value) {
		return fetchOne(MonsterHealingHistory.MONSTER_HEALING_HISTORY.ID, value);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<MonsterHealingHistoryPojo> fetchByUserId(String... values) {
		return fetch(MonsterHealingHistory.MONSTER_HEALING_HISTORY.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>monster_for_user_id IN (values)</code>
	 */
	public List<MonsterHealingHistoryPojo> fetchByMonsterForUserId(String... values) {
		return fetch(MonsterHealingHistory.MONSTER_HEALING_HISTORY.MONSTER_FOR_USER_ID, values);
	}

	/**
	 * Fetch records that have <code>queued_time IN (values)</code>
	 */
	public List<MonsterHealingHistoryPojo> fetchByQueuedTime(Timestamp... values) {
		return fetch(MonsterHealingHistory.MONSTER_HEALING_HISTORY.QUEUED_TIME, values);
	}

	/**
	 * Fetch records that have <code>unqueued_time IN (values)</code>
	 */
	public List<MonsterHealingHistoryPojo> fetchByUnqueuedTime(Timestamp... values) {
		return fetch(MonsterHealingHistory.MONSTER_HEALING_HISTORY.UNQUEUED_TIME, values);
	}

	/**
	 * Fetch records that have <code>finished_healing IN (values)</code>
	 */
	public List<MonsterHealingHistoryPojo> fetchByFinishedHealing(Boolean... values) {
		return fetch(MonsterHealingHistory.MONSTER_HEALING_HISTORY.FINISHED_HEALING, values);
	}
}
