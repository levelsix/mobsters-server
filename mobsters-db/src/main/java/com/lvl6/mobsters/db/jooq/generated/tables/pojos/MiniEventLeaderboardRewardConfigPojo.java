/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventLeaderboardRewardConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_event_leaderboard_reward_config", schema = "mobsters")
public class MiniEventLeaderboardRewardConfigPojo implements IMiniEventLeaderboardRewardConfig {

	private static final long serialVersionUID = 1362473247;

	private Integer id;
	private Integer miniEventId;
	private Integer rewardId;
	private Integer leaderboardPos;

	public MiniEventLeaderboardRewardConfigPojo() {}

	public MiniEventLeaderboardRewardConfigPojo(MiniEventLeaderboardRewardConfigPojo value) {
		this.id = value.id;
		this.miniEventId = value.miniEventId;
		this.rewardId = value.rewardId;
		this.leaderboardPos = value.leaderboardPos;
	}

	public MiniEventLeaderboardRewardConfigPojo(
		Integer id,
		Integer miniEventId,
		Integer rewardId,
		Integer leaderboardPos
	) {
		this.id = id;
		this.miniEventId = miniEventId;
		this.rewardId = rewardId;
		this.leaderboardPos = leaderboardPos;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public MiniEventLeaderboardRewardConfigPojo setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "mini_event_id", precision = 10)
	@Override
	public Integer getMiniEventId() {
		return this.miniEventId;
	}

	@Override
	public MiniEventLeaderboardRewardConfigPojo setMiniEventId(Integer miniEventId) {
		this.miniEventId = miniEventId;
		return this;
	}

	@Column(name = "reward_id", precision = 10)
	@Override
	public Integer getRewardId() {
		return this.rewardId;
	}

	@Override
	public MiniEventLeaderboardRewardConfigPojo setRewardId(Integer rewardId) {
		this.rewardId = rewardId;
		return this;
	}

	@Column(name = "leaderboard_pos", precision = 10)
	@Override
	public Integer getLeaderboardPos() {
		return this.leaderboardPos;
	}

	@Override
	public MiniEventLeaderboardRewardConfigPojo setLeaderboardPos(Integer leaderboardPos) {
		this.leaderboardPos = leaderboardPos;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniEventLeaderboardRewardConfig from) {
		setId(from.getId());
		setMiniEventId(from.getMiniEventId());
		setRewardId(from.getRewardId());
		setLeaderboardPos(from.getLeaderboardPos());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniEventLeaderboardRewardConfig> E into(E into) {
		into.from(this);
		return into;
	}


	public String toString() {
		com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventLeaderboardRewardConfigRecord poop = new com.lvl6.mobsters.db.jooq.generated.tables.records.MiniEventLeaderboardRewardConfigRecord();
		poop.from(this);
		return "MiniEventLeaderboardRewardConfigPojo[" + poop.valuesRow() + "]";
	}
}
