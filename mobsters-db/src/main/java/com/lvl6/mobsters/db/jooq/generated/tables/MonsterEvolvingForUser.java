/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterEvolvingForUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterEvolvingForUser extends TableImpl<MonsterEvolvingForUserRecord> {

	private static final long serialVersionUID = 1310309929;

	/**
	 * The reference instance of <code>mobsters.monster_evolving_for_user</code>
	 */
	public static final MonsterEvolvingForUser MONSTER_EVOLVING_FOR_USER = new MonsterEvolvingForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MonsterEvolvingForUserRecord> getRecordType() {
		return MonsterEvolvingForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.monster_evolving_for_user.catalyst_user_monster_id</code>.
	 */
	public final TableField<MonsterEvolvingForUserRecord, String> CATALYST_USER_MONSTER_ID = createField("catalyst_user_monster_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_evolving_for_user.user_monster_id_one</code>.
	 */
	public final TableField<MonsterEvolvingForUserRecord, String> USER_MONSTER_ID_ONE = createField("user_monster_id_one", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_evolving_for_user.user_monster_id_two</code>.
	 */
	public final TableField<MonsterEvolvingForUserRecord, String> USER_MONSTER_ID_TWO = createField("user_monster_id_two", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_evolving_for_user.user_id</code>.
	 */
	public final TableField<MonsterEvolvingForUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

	/**
	 * The column <code>mobsters.monster_evolving_for_user.start_time</code>.
	 */
	public final TableField<MonsterEvolvingForUserRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>mobsters.monster_evolving_for_user</code> table reference
	 */
	public MonsterEvolvingForUser() {
		this("monster_evolving_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.monster_evolving_for_user</code> table reference
	 */
	public MonsterEvolvingForUser(String alias) {
		this(alias, MONSTER_EVOLVING_FOR_USER);
	}

	private MonsterEvolvingForUser(String alias, Table<MonsterEvolvingForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private MonsterEvolvingForUser(String alias, Table<MonsterEvolvingForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MonsterEvolvingForUserRecord> getPrimaryKey() {
		return Keys.KEY_MONSTER_EVOLVING_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MonsterEvolvingForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<MonsterEvolvingForUserRecord>>asList(Keys.KEY_MONSTER_EVOLVING_FOR_USER_PRIMARY, Keys.KEY_MONSTER_EVOLVING_FOR_USER_CATALYST_USER_MONSTER_ID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterEvolvingForUser as(String alias) {
		return new MonsterEvolvingForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MonsterEvolvingForUser rename(String name) {
		return new MonsterEvolvingForUser(name, null);
	}
}
