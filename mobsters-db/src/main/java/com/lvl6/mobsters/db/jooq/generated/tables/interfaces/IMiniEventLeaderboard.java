/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_event_leaderboard", schema = "mobsters")
public interface IMiniEventLeaderboard extends Serializable {

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.user_id</code>.
	 */
	public IMiniEventLeaderboard setUserId(String value);

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	public String getUserId();

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.mini_event_timetable_id</code>.
	 */
	public IMiniEventLeaderboard setMiniEventTimetableId(Integer value);

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.mini_event_timetable_id</code>.
	 */
	@Column(name = "mini_event_timetable_id", precision = 10)
	public Integer getMiniEventTimetableId();

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.name</code>.
	 */
	public IMiniEventLeaderboard setName(String value);

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.name</code>.
	 */
	@Column(name = "name", length = 400)
	@Size(max = 400)
	public String getName();

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.avatar_id</code>.
	 */
	public IMiniEventLeaderboard setAvatarId(Integer value);

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.avatar_id</code>.
	 */
	@Column(name = "avatar_id", precision = 10)
	public Integer getAvatarId();

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.clan_tag</code>.
	 */
	public IMiniEventLeaderboard setClanTag(String value);

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.clan_tag</code>.
	 */
	@Column(name = "clan_tag", length = 127)
	@Size(max = 127)
	public String getClanTag();

	/**
	 * Setter for <code>mobsters.mini_event_leaderboard.pts_for_mini_event</code>.
	 */
	public IMiniEventLeaderboard setPtsForMiniEvent(Long value);

	/**
	 * Getter for <code>mobsters.mini_event_leaderboard.pts_for_mini_event</code>.
	 */
	@Column(name = "pts_for_mini_event", nullable = false, precision = 19)
	@NotNull
	public Long getPtsForMiniEvent();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface IMiniEventLeaderboard
	 */
	public void from(com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventLeaderboard from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface IMiniEventLeaderboard
	 */
	public <E extends com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventLeaderboard> E into(E into);
}
