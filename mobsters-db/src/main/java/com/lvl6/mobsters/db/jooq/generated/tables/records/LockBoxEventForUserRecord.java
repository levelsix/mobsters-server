/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.LockBoxEventForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ILockBoxEventForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "lock_box_event_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"lock_box_event_id", "user_id"})
})
public class LockBoxEventForUserRecord extends UpdatableRecordImpl<LockBoxEventForUserRecord> implements Record6<Integer, String, Integer, Timestamp, Integer, Byte>, ILockBoxEventForUser {

	private static final long serialVersionUID = -1514572241;

	/**
	 * Setter for <code>mobsters.lock_box_event_for_user.lock_box_event_id</code>.
	 */
	@Override
	public LockBoxEventForUserRecord setLockBoxEventId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lock_box_event_for_user.lock_box_event_id</code>.
	 */
	@Column(name = "lock_box_event_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getLockBoxEventId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.lock_box_event_for_user.user_id</code>.
	 */
	@Override
	public LockBoxEventForUserRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lock_box_event_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.lock_box_event_for_user.num_boxes</code>.
	 */
	@Override
	public LockBoxEventForUserRecord setNumBoxes(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lock_box_event_for_user.num_boxes</code>.
	 */
	@Column(name = "num_boxes", precision = 10)
	@Override
	public Integer getNumBoxes() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.lock_box_event_for_user.last_opening_time</code>.
	 */
	@Override
	public LockBoxEventForUserRecord setLastOpeningTime(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lock_box_event_for_user.last_opening_time</code>.
	 */
	@Column(name = "last_opening_time")
	@Override
	public Timestamp getLastOpeningTime() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.lock_box_event_for_user.num_times_completed</code>.
	 */
	@Override
	public LockBoxEventForUserRecord setNumTimesCompleted(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lock_box_event_for_user.num_times_completed</code>.
	 */
	@Column(name = "num_times_completed", precision = 10)
	@Override
	public Integer getNumTimesCompleted() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.lock_box_event_for_user.has_been_redeemed</code>.
	 */
	@Override
	public LockBoxEventForUserRecord setHasBeenRedeemed(Byte value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lock_box_event_for_user.has_been_redeemed</code>.
	 */
	@Column(name = "has_been_redeemed", precision = 3)
	@Override
	public Byte getHasBeenRedeemed() {
		return (Byte) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Integer, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Integer, Timestamp, Integer, Byte> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Integer, Timestamp, Integer, Byte> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.LOCK_BOX_EVENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.NUM_BOXES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.LAST_OPENING_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.NUM_TIMES_COMPLETED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field6() {
		return LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER.HAS_BEEN_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getLockBoxEventId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getNumBoxes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getLastOpeningTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getNumTimesCompleted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value6() {
		return getHasBeenRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord value1(Integer value) {
		setLockBoxEventId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord value3(Integer value) {
		setNumBoxes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord value4(Timestamp value) {
		setLastOpeningTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord value5(Integer value) {
		setNumTimesCompleted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord value6(Byte value) {
		setHasBeenRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LockBoxEventForUserRecord values(Integer value1, String value2, Integer value3, Timestamp value4, Integer value5, Byte value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ILockBoxEventForUser from) {
		setLockBoxEventId(from.getLockBoxEventId());
		setUserId(from.getUserId());
		setNumBoxes(from.getNumBoxes());
		setLastOpeningTime(from.getLastOpeningTime());
		setNumTimesCompleted(from.getNumTimesCompleted());
		setHasBeenRedeemed(from.getHasBeenRedeemed());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ILockBoxEventForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LockBoxEventForUserRecord
	 */
	public LockBoxEventForUserRecord() {
		super(LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER);
	}

	/**
	 * Create a detached, initialised LockBoxEventForUserRecord
	 */
	public LockBoxEventForUserRecord(Integer lockBoxEventId, String userId, Integer numBoxes, Timestamp lastOpeningTime, Integer numTimesCompleted, Byte hasBeenRedeemed) {
		super(LockBoxEventForUser.LOCK_BOX_EVENT_FOR_USER);

		setValue(0, lockBoxEventId);
		setValue(1, userId);
		setValue(2, numBoxes);
		setValue(3, lastOpeningTime);
		setValue(4, numTimesCompleted);
		setValue(5, hasBeenRedeemed);
	}
}
