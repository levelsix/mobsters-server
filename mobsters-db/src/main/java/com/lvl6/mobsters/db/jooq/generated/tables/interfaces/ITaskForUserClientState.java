/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_for_user_client_state", schema = "mobsters")
public interface ITaskForUserClientState extends Serializable {

	/**
	 * Setter for <code>mobsters.task_for_user_client_state.user_id</code>.
	 */
	public ITaskForUserClientState setUserId(String value);

	/**
	 * Getter for <code>mobsters.task_for_user_client_state.user_id</code>.
	 */
	@Id
	@Column(name = "user_id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	public String getUserId();

	/**
	 * Setter for <code>mobsters.task_for_user_client_state.client_state</code>.
	 */
	public ITaskForUserClientState setClientState(byte[] value);

	/**
	 * Getter for <code>mobsters.task_for_user_client_state.client_state</code>.
	 */
	@Column(name = "client_state", length = 16777215)
	public byte[] getClientState();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface ITaskForUserClientState
	 */
	public void from(com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskForUserClientState from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface ITaskForUserClientState
	 */
	public <E extends com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskForUserClientState> E into(E into);
}
