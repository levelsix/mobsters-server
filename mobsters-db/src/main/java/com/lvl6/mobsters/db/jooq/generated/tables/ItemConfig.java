/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ItemConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemConfig extends TableImpl<ItemConfigRecord> {

	private static final long serialVersionUID = -85262573;

	/**
	 * The reference instance of <code>mobsters.item_config</code>
	 */
	public static final ItemConfig ITEM_CONFIG = new ItemConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ItemConfigRecord> getRecordType() {
		return ItemConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.item_config.id</code>.
	 */
	public final TableField<ItemConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.item_config.name</code>.
	 */
	public final TableField<ItemConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.item_config.short_name</code>.
	 */
	public final TableField<ItemConfigRecord, String> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.item_config.img_name</code>.
	 */
	public final TableField<ItemConfigRecord, String> IMG_NAME = createField("img_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.item_config.item_type</code>. Specifies pointer to a table: BOOSTER_PACK type is booster_pack table, MONSTER is monster table
	 */
	public final TableField<ItemConfigRecord, String> ITEM_TYPE = createField("item_type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "Specifies pointer to a table: BOOSTER_PACK type is booster_pack table, MONSTER is monster table");

	/**
	 * The column <code>mobsters.item_config.static_data_id</code>. refers to id in a table, e.g. booster_pack, monster. 
	 */
	public final TableField<ItemConfigRecord, Integer> STATIC_DATA_ID = createField("static_data_id", org.jooq.impl.SQLDataType.INTEGER, this, "refers to id in a table, e.g. booster_pack, monster. ");

	/**
	 * The column <code>mobsters.item_config.amount</code>.
	 */
	public final TableField<ItemConfigRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.item_config.always_display_to_user</code>.
	 */
	public final TableField<ItemConfigRecord, Boolean> ALWAYS_DISPLAY_TO_USER = createField("always_display_to_user", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.item_config.action_game_type</code>.
	 */
	public final TableField<ItemConfigRecord, String> ACTION_GAME_TYPE = createField("action_game_type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.item_config.quality</code>.
	 */
	public final TableField<ItemConfigRecord, String> QUALITY = createField("quality", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>mobsters.item_config.secret_gift_chance</code>.
	 */
	public final TableField<ItemConfigRecord, Double> SECRET_GIFT_CHANCE = createField("secret_gift_chance", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * Create a <code>mobsters.item_config</code> table reference
	 */
	public ItemConfig() {
		this("item_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.item_config</code> table reference
	 */
	public ItemConfig(String alias) {
		this(alias, ITEM_CONFIG);
	}

	private ItemConfig(String alias, Table<ItemConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private ItemConfig(String alias, Table<ItemConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ItemConfigRecord> getPrimaryKey() {
		return Keys.KEY_ITEM_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ItemConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<ItemConfigRecord>>asList(Keys.KEY_ITEM_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemConfig as(String alias) {
		return new ItemConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ItemConfig rename(String name) {
		return new ItemConfig(name, null);
	}
}
