/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.pojos.TaskConfigPojo;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskConfigRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskConfigDao extends DAOImpl<TaskConfigRecord, TaskConfigPojo, Integer> {

	/**
	 * Create a new TaskConfigDao without any configuration
	 */
	public TaskConfigDao() {
		super(TaskConfig.TASK_CONFIG, TaskConfigPojo.class);
	}

	/**
	 * Create a new TaskConfigDao with an attached configuration
	 */
	public TaskConfigDao(Configuration configuration) {
		super(TaskConfig.TASK_CONFIG, TaskConfigPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(TaskConfigPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchById(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public TaskConfigPojo fetchOneById(Integer value) {
		return fetchOne(TaskConfig.TASK_CONFIG.ID, value);
	}

	/**
	 * Fetch records that have <code>good_name IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByGoodName(String... values) {
		return fetch(TaskConfig.TASK_CONFIG.GOOD_NAME, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByDescription(String... values) {
		return fetch(TaskConfig.TASK_CONFIG.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>city_id IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByCityId(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.CITY_ID, values);
	}

	/**
	 * Fetch records that have <code>asset_num_within_city IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByAssetNumWithinCity(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.ASSET_NUM_WITHIN_CITY, values);
	}

	/**
	 * Fetch records that have <code>prerequisite_task_id IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByPrerequisiteTaskId(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.PREREQUISITE_TASK_ID, values);
	}

	/**
	 * Fetch records that have <code>prerequisite_quest_id IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByPrerequisiteQuestId(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.PREREQUISITE_QUEST_ID, values);
	}

	/**
	 * Fetch records that have <code>board_width IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByBoardWidth(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.BOARD_WIDTH, values);
	}

	/**
	 * Fetch records that have <code>board_height IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByBoardHeight(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.BOARD_HEIGHT, values);
	}

	/**
	 * Fetch records that have <code>ground_img_prefix IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByGroundImgPrefix(String... values) {
		return fetch(TaskConfig.TASK_CONFIG.GROUND_IMG_PREFIX, values);
	}

	/**
	 * Fetch records that have <code>init_defeated_dialogue IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByInitDefeatedDialogue(String... values) {
		return fetch(TaskConfig.TASK_CONFIG.INIT_DEFEATED_DIALOGUE, values);
	}

	/**
	 * Fetch records that have <code>exp_reward IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByExpReward(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.EXP_REWARD, values);
	}

	/**
	 * Fetch records that have <code>board_id IN (values)</code>
	 */
	public List<TaskConfigPojo> fetchByBoardId(Integer... values) {
		return fetch(TaskConfig.TASK_CONFIG.BOARD_ID, values);
	}
}
