/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentEventForUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentEventForUser extends TableImpl<TournamentEventForUserRecord> {

	private static final long serialVersionUID = 989550264;

	/**
	 * The reference instance of <code>mobsters.tournament_event_for_user</code>
	 */
	public static final TournamentEventForUser TOURNAMENT_EVENT_FOR_USER = new TournamentEventForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TournamentEventForUserRecord> getRecordType() {
		return TournamentEventForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.tournament_event_for_user.tournament_event_id</code>.
	 */
	public final TableField<TournamentEventForUserRecord, Integer> TOURNAMENT_EVENT_ID = createField("tournament_event_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.tournament_event_for_user.user_id</code>.
	 */
	public final TableField<TournamentEventForUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.tournament_event_for_user.battles_won</code>.
	 */
	public final TableField<TournamentEventForUserRecord, Integer> BATTLES_WON = createField("battles_won", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.tournament_event_for_user.battles_lost</code>.
	 */
	public final TableField<TournamentEventForUserRecord, Integer> BATTLES_LOST = createField("battles_lost", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.tournament_event_for_user.battles_fled</code>.
	 */
	public final TableField<TournamentEventForUserRecord, Integer> BATTLES_FLED = createField("battles_fled", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.tournament_event_for_user</code> table reference
	 */
	public TournamentEventForUser() {
		this("tournament_event_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.tournament_event_for_user</code> table reference
	 */
	public TournamentEventForUser(String alias) {
		this(alias, TOURNAMENT_EVENT_FOR_USER);
	}

	private TournamentEventForUser(String alias, Table<TournamentEventForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private TournamentEventForUser(String alias, Table<TournamentEventForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TournamentEventForUserRecord> getPrimaryKey() {
		return Keys.KEY_TOURNAMENT_EVENT_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TournamentEventForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<TournamentEventForUserRecord>>asList(Keys.KEY_TOURNAMENT_EVENT_FOR_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentEventForUser as(String alias) {
		return new TournamentEventForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TournamentEventForUser rename(String name) {
		return new TournamentEventForUser(name, null);
	}
}
