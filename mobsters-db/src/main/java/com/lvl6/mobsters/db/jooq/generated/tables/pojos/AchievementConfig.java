/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IAchievementConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "achievement_config", schema = "mobsters")
public class AchievementConfig implements IAchievementConfig {

	private static final long serialVersionUID = 1474022175;

	private Integer id;
	private String  name;
	private String  description;
	private Integer gemReward;
	private Byte    lvl;
	private String  achievementType;
	private String  resourceType;
	private String  monsterElement;
	private String  monsterQuality;
	private Integer staticDataId;
	private Integer quantity;
	private Integer priority;
	private Integer prerequisiteId;
	private Integer successorId;
	private Integer expReward;

	public AchievementConfig() {}

	public AchievementConfig(AchievementConfig value) {
		this.id = value.id;
		this.name = value.name;
		this.description = value.description;
		this.gemReward = value.gemReward;
		this.lvl = value.lvl;
		this.achievementType = value.achievementType;
		this.resourceType = value.resourceType;
		this.monsterElement = value.monsterElement;
		this.monsterQuality = value.monsterQuality;
		this.staticDataId = value.staticDataId;
		this.quantity = value.quantity;
		this.priority = value.priority;
		this.prerequisiteId = value.prerequisiteId;
		this.successorId = value.successorId;
		this.expReward = value.expReward;
	}

	public AchievementConfig(
		Integer id,
		String  name,
		String  description,
		Integer gemReward,
		Byte    lvl,
		String  achievementType,
		String  resourceType,
		String  monsterElement,
		String  monsterQuality,
		Integer staticDataId,
		Integer quantity,
		Integer priority,
		Integer prerequisiteId,
		Integer successorId,
		Integer expReward
	) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.gemReward = gemReward;
		this.lvl = lvl;
		this.achievementType = achievementType;
		this.resourceType = resourceType;
		this.monsterElement = monsterElement;
		this.monsterQuality = monsterQuality;
		this.staticDataId = staticDataId;
		this.quantity = quantity;
		this.priority = priority;
		this.prerequisiteId = prerequisiteId;
		this.successorId = successorId;
		this.expReward = expReward;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public AchievementConfig setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "name", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getName() {
		return this.name;
	}

	@Override
	public AchievementConfig setName(String name) {
		this.name = name;
		return this;
	}

	@Column(name = "description", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getDescription() {
		return this.description;
	}

	@Override
	public AchievementConfig setDescription(String description) {
		this.description = description;
		return this;
	}

	@Column(name = "gem_reward", precision = 10)
	@Override
	public Integer getGemReward() {
		return this.gemReward;
	}

	@Override
	public AchievementConfig setGemReward(Integer gemReward) {
		this.gemReward = gemReward;
		return this;
	}

	@Column(name = "lvl", nullable = false, precision = 3)
	@NotNull
	@Override
	public Byte getLvl() {
		return this.lvl;
	}

	@Override
	public AchievementConfig setLvl(Byte lvl) {
		this.lvl = lvl;
		return this;
	}

	@Column(name = "achievement_type", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getAchievementType() {
		return this.achievementType;
	}

	@Override
	public AchievementConfig setAchievementType(String achievementType) {
		this.achievementType = achievementType;
		return this;
	}

	@Column(name = "resource_type", length = 45)
	@Size(max = 45)
	@Override
	public String getResourceType() {
		return this.resourceType;
	}

	@Override
	public AchievementConfig setResourceType(String resourceType) {
		this.resourceType = resourceType;
		return this;
	}

	@Column(name = "monster_element", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterElement() {
		return this.monsterElement;
	}

	@Override
	public AchievementConfig setMonsterElement(String monsterElement) {
		this.monsterElement = monsterElement;
		return this;
	}

	@Column(name = "monster_quality", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterQuality() {
		return this.monsterQuality;
	}

	@Override
	public AchievementConfig setMonsterQuality(String monsterQuality) {
		this.monsterQuality = monsterQuality;
		return this;
	}

	@Column(name = "static_data_id", precision = 10)
	@Override
	public Integer getStaticDataId() {
		return this.staticDataId;
	}

	@Override
	public AchievementConfig setStaticDataId(Integer staticDataId) {
		this.staticDataId = staticDataId;
		return this;
	}

	@Column(name = "quantity", precision = 10)
	@Override
	public Integer getQuantity() {
		return this.quantity;
	}

	@Override
	public AchievementConfig setQuantity(Integer quantity) {
		this.quantity = quantity;
		return this;
	}

	@Column(name = "priority", precision = 10)
	@Override
	public Integer getPriority() {
		return this.priority;
	}

	@Override
	public AchievementConfig setPriority(Integer priority) {
		this.priority = priority;
		return this;
	}

	@Column(name = "prerequisite_id", precision = 10)
	@Override
	public Integer getPrerequisiteId() {
		return this.prerequisiteId;
	}

	@Override
	public AchievementConfig setPrerequisiteId(Integer prerequisiteId) {
		this.prerequisiteId = prerequisiteId;
		return this;
	}

	@Column(name = "successor_id", precision = 10)
	@Override
	public Integer getSuccessorId() {
		return this.successorId;
	}

	@Override
	public AchievementConfig setSuccessorId(Integer successorId) {
		this.successorId = successorId;
		return this;
	}

	@Column(name = "exp_reward", precision = 10)
	@Override
	public Integer getExpReward() {
		return this.expReward;
	}

	@Override
	public AchievementConfig setExpReward(Integer expReward) {
		this.expReward = expReward;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IAchievementConfig from) {
		setId(from.getId());
		setName(from.getName());
		setDescription(from.getDescription());
		setGemReward(from.getGemReward());
		setLvl(from.getLvl());
		setAchievementType(from.getAchievementType());
		setResourceType(from.getResourceType());
		setMonsterElement(from.getMonsterElement());
		setMonsterQuality(from.getMonsterQuality());
		setStaticDataId(from.getStaticDataId());
		setQuantity(from.getQuantity());
		setPriority(from.getPriority());
		setPrerequisiteId(from.getPrerequisiteId());
		setSuccessorId(from.getSuccessorId());
		setExpReward(from.getExpReward());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IAchievementConfig> E into(E into) {
		into.from(this);
		return into;
	}
}
