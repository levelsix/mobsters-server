/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ICityElementConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "city_element_config", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"city_id", "asset_id"})
})
public class CityElementConfig implements ICityElementConfig {

	private static final long serialVersionUID = 1645067863;

	private Integer cityId;
	private Integer assetId;
	private String  elemType;
	private Double  xCoordinate;
	private Double  yCoordinate;
	private Double  xLength;
	private Double  yLength;
	private String  imgIdGood;
	private String  orientation;
	private Double  spriteLandingCoordinateX;
	private Double  spriteLandingCoordinateY;

	public CityElementConfig() {}

	public CityElementConfig(CityElementConfig value) {
		this.cityId = value.cityId;
		this.assetId = value.assetId;
		this.elemType = value.elemType;
		this.xCoordinate = value.xCoordinate;
		this.yCoordinate = value.yCoordinate;
		this.xLength = value.xLength;
		this.yLength = value.yLength;
		this.imgIdGood = value.imgIdGood;
		this.orientation = value.orientation;
		this.spriteLandingCoordinateX = value.spriteLandingCoordinateX;
		this.spriteLandingCoordinateY = value.spriteLandingCoordinateY;
	}

	public CityElementConfig(
		Integer cityId,
		Integer assetId,
		String  elemType,
		Double  xCoordinate,
		Double  yCoordinate,
		Double  xLength,
		Double  yLength,
		String  imgIdGood,
		String  orientation,
		Double  spriteLandingCoordinateX,
		Double  spriteLandingCoordinateY
	) {
		this.cityId = cityId;
		this.assetId = assetId;
		this.elemType = elemType;
		this.xCoordinate = xCoordinate;
		this.yCoordinate = yCoordinate;
		this.xLength = xLength;
		this.yLength = yLength;
		this.imgIdGood = imgIdGood;
		this.orientation = orientation;
		this.spriteLandingCoordinateX = spriteLandingCoordinateX;
		this.spriteLandingCoordinateY = spriteLandingCoordinateY;
	}

	@Column(name = "city_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getCityId() {
		return this.cityId;
	}

	@Override
	public CityElementConfig setCityId(Integer cityId) {
		this.cityId = cityId;
		return this;
	}

	@Column(name = "asset_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getAssetId() {
		return this.assetId;
	}

	@Override
	public CityElementConfig setAssetId(Integer assetId) {
		this.assetId = assetId;
		return this;
	}

	@Column(name = "elem_type", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getElemType() {
		return this.elemType;
	}

	@Override
	public CityElementConfig setElemType(String elemType) {
		this.elemType = elemType;
		return this;
	}

	@Column(name = "x_coordinate", nullable = false, precision = 12)
	@NotNull
	@Override
	public Double getXCoordinate() {
		return this.xCoordinate;
	}

	@Override
	public CityElementConfig setXCoordinate(Double xCoordinate) {
		this.xCoordinate = xCoordinate;
		return this;
	}

	@Column(name = "y_coordinate", nullable = false, precision = 12)
	@NotNull
	@Override
	public Double getYCoordinate() {
		return this.yCoordinate;
	}

	@Override
	public CityElementConfig setYCoordinate(Double yCoordinate) {
		this.yCoordinate = yCoordinate;
		return this;
	}

	@Column(name = "x_length", precision = 12)
	@Override
	public Double getXLength() {
		return this.xLength;
	}

	@Override
	public CityElementConfig setXLength(Double xLength) {
		this.xLength = xLength;
		return this;
	}

	@Column(name = "y_length", precision = 12)
	@Override
	public Double getYLength() {
		return this.yLength;
	}

	@Override
	public CityElementConfig setYLength(Double yLength) {
		this.yLength = yLength;
		return this;
	}

	@Column(name = "img_id_good", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getImgIdGood() {
		return this.imgIdGood;
	}

	@Override
	public CityElementConfig setImgIdGood(String imgIdGood) {
		this.imgIdGood = imgIdGood;
		return this;
	}

	@Column(name = "orientation", length = 45)
	@Size(max = 45)
	@Override
	public String getOrientation() {
		return this.orientation;
	}

	@Override
	public CityElementConfig setOrientation(String orientation) {
		this.orientation = orientation;
		return this;
	}

	@Column(name = "sprite_landing_coordinate_x", precision = 12)
	@Override
	public Double getSpriteLandingCoordinateX() {
		return this.spriteLandingCoordinateX;
	}

	@Override
	public CityElementConfig setSpriteLandingCoordinateX(Double spriteLandingCoordinateX) {
		this.spriteLandingCoordinateX = spriteLandingCoordinateX;
		return this;
	}

	@Column(name = "sprite_landing_coordinate_y", precision = 12)
	@Override
	public Double getSpriteLandingCoordinateY() {
		return this.spriteLandingCoordinateY;
	}

	@Override
	public CityElementConfig setSpriteLandingCoordinateY(Double spriteLandingCoordinateY) {
		this.spriteLandingCoordinateY = spriteLandingCoordinateY;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ICityElementConfig from) {
		setCityId(from.getCityId());
		setAssetId(from.getAssetId());
		setElemType(from.getElemType());
		setXCoordinate(from.getXCoordinate());
		setYCoordinate(from.getYCoordinate());
		setXLength(from.getXLength());
		setYLength(from.getYLength());
		setImgIdGood(from.getImgIdGood());
		setOrientation(from.getOrientation());
		setSpriteLandingCoordinateX(from.getSpriteLandingCoordinateX());
		setSpriteLandingCoordinateY(from.getSpriteLandingCoordinateY());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ICityElementConfig> E into(E into) {
		into.from(this);
		return into;
	}
}
