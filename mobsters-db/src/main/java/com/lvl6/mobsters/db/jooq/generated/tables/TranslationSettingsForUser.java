/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TranslationSettingsForUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TranslationSettingsForUser extends TableImpl<TranslationSettingsForUserRecord> {

	private static final long serialVersionUID = 2021551804;

	/**
	 * The reference instance of <code>mobsters.translation_settings_for_user</code>
	 */
	public static final TranslationSettingsForUser TRANSLATION_SETTINGS_FOR_USER = new TranslationSettingsForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TranslationSettingsForUserRecord> getRecordType() {
		return TranslationSettingsForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.translation_settings_for_user.id</code>.
	 */
	public final TableField<TranslationSettingsForUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.translation_settings_for_user.receiver_user_id</code>. this is the person who gets the private chats/global messages, his language setting is what’s used
	 */
	public final TableField<TranslationSettingsForUserRecord, String> RECEIVER_USER_ID = createField("receiver_user_id", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "this is the person who gets the private chats/global messages, his language setting is what’s used");

	/**
	 * The column <code>mobsters.translation_settings_for_user.sender_user_id</code>. null if it’s global chat
	 */
	public final TableField<TranslationSettingsForUserRecord, String> SENDER_USER_ID = createField("sender_user_id", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "null if it’s global chat");

	/**
	 * The column <code>mobsters.translation_settings_for_user.language</code>. default is the global language setting
	 */
	public final TableField<TranslationSettingsForUserRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "default is the global language setting");

	/**
	 * The column <code>mobsters.translation_settings_for_user.chat_type</code>. currently can be global or private
	 */
	public final TableField<TranslationSettingsForUserRecord, String> CHAT_TYPE = createField("chat_type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "currently can be global or private");

	/**
	 * The column <code>mobsters.translation_settings_for_user.translations_on</code>.
	 */
	public final TableField<TranslationSettingsForUserRecord, Boolean> TRANSLATIONS_ON = createField("translations_on", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.translation_settings_for_user</code> table reference
	 */
	public TranslationSettingsForUser() {
		this("translation_settings_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.translation_settings_for_user</code> table reference
	 */
	public TranslationSettingsForUser(String alias) {
		this(alias, TRANSLATION_SETTINGS_FOR_USER);
	}

	private TranslationSettingsForUser(String alias, Table<TranslationSettingsForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private TranslationSettingsForUser(String alias, Table<TranslationSettingsForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TranslationSettingsForUserRecord> getPrimaryKey() {
		return Keys.KEY_TRANSLATION_SETTINGS_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TranslationSettingsForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<TranslationSettingsForUserRecord>>asList(Keys.KEY_TRANSLATION_SETTINGS_FOR_USER_PRIMARY, Keys.KEY_TRANSLATION_SETTINGS_FOR_USER_UNIQ_RECEIVER_USER_ID_SENDER_USER_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TranslationSettingsForUser as(String alias) {
		return new TranslationSettingsForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TranslationSettingsForUser rename(String name) {
		return new TranslationSettingsForUser(name, null);
	}
}
