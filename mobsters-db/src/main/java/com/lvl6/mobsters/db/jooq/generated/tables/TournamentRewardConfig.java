/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentRewardConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentRewardConfig extends TableImpl<TournamentRewardConfigRecord> {

	private static final long serialVersionUID = 1955377125;

	/**
	 * The reference instance of <code>mobsters.tournament_reward_config</code>
	 */
	public static final TournamentRewardConfig TOURNAMENT_REWARD_CONFIG = new TournamentRewardConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TournamentRewardConfigRecord> getRecordType() {
		return TournamentRewardConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.tournament_reward_config.id</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.min_rank</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> MIN_RANK = createField("min_rank", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.max_rank</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> MAX_RANK = createField("max_rank", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.gold_rewarded</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> GOLD_REWARDED = createField("gold_rewarded", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.background_image_name</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, String> BACKGROUND_IMAGE_NAME = createField("background_image_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.prize_image_name</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, String> PRIZE_IMAGE_NAME = createField("prize_image_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.blue</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> BLUE = createField("blue", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.green</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> GREEN = createField("green", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.tournament_reward_config.red</code>.
	 */
	public final TableField<TournamentRewardConfigRecord, Integer> RED = createField("red", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.tournament_reward_config</code> table reference
	 */
	public TournamentRewardConfig() {
		this("tournament_reward_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.tournament_reward_config</code> table reference
	 */
	public TournamentRewardConfig(String alias) {
		this(alias, TOURNAMENT_REWARD_CONFIG);
	}

	private TournamentRewardConfig(String alias, Table<TournamentRewardConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private TournamentRewardConfig(String alias, Table<TournamentRewardConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TournamentRewardConfigRecord> getPrimaryKey() {
		return Keys.KEY_TOURNAMENT_REWARD_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TournamentRewardConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<TournamentRewardConfigRecord>>asList(Keys.KEY_TOURNAMENT_REWARD_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfig as(String alias) {
		return new TournamentRewardConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TournamentRewardConfig rename(String name) {
		return new TournamentRewardConfig(name, null);
	}
}
