/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IObstacleConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "obstacle_config", schema = "mobsters")
public class ObstacleConfigPojo implements IObstacleConfig {

	private static final long serialVersionUID = -2073169965;

	private Integer id;
	private String  name;
	private String  removalCostType;
	private Integer cost;
	private Integer secondsToRemove;
	private Byte    width;
	private Byte    height;
	private String  imgName;
	private Double  imgVerticalPixelOffset;
	private String  description;
	private Double  chanceToAppear;
	private String  shadowImgName;
	private Double  shadowVerticalOffset;
	private Double  shadowHorizontalOffset;

	public ObstacleConfigPojo() {}

	public ObstacleConfigPojo(ObstacleConfigPojo value) {
		this.id = value.id;
		this.name = value.name;
		this.removalCostType = value.removalCostType;
		this.cost = value.cost;
		this.secondsToRemove = value.secondsToRemove;
		this.width = value.width;
		this.height = value.height;
		this.imgName = value.imgName;
		this.imgVerticalPixelOffset = value.imgVerticalPixelOffset;
		this.description = value.description;
		this.chanceToAppear = value.chanceToAppear;
		this.shadowImgName = value.shadowImgName;
		this.shadowVerticalOffset = value.shadowVerticalOffset;
		this.shadowHorizontalOffset = value.shadowHorizontalOffset;
	}

	public ObstacleConfigPojo(
		Integer id,
		String  name,
		String  removalCostType,
		Integer cost,
		Integer secondsToRemove,
		Byte    width,
		Byte    height,
		String  imgName,
		Double  imgVerticalPixelOffset,
		String  description,
		Double  chanceToAppear,
		String  shadowImgName,
		Double  shadowVerticalOffset,
		Double  shadowHorizontalOffset
	) {
		this.id = id;
		this.name = name;
		this.removalCostType = removalCostType;
		this.cost = cost;
		this.secondsToRemove = secondsToRemove;
		this.width = width;
		this.height = height;
		this.imgName = imgName;
		this.imgVerticalPixelOffset = imgVerticalPixelOffset;
		this.description = description;
		this.chanceToAppear = chanceToAppear;
		this.shadowImgName = shadowImgName;
		this.shadowVerticalOffset = shadowVerticalOffset;
		this.shadowHorizontalOffset = shadowHorizontalOffset;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public ObstacleConfigPojo setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "name", length = 45)
	@Size(max = 45)
	@Override
	public String getName() {
		return this.name;
	}

	@Override
	public ObstacleConfigPojo setName(String name) {
		this.name = name;
		return this;
	}

	@Column(name = "removal_cost_type", length = 45)
	@Size(max = 45)
	@Override
	public String getRemovalCostType() {
		return this.removalCostType;
	}

	@Override
	public ObstacleConfigPojo setRemovalCostType(String removalCostType) {
		this.removalCostType = removalCostType;
		return this;
	}

	@Column(name = "cost", precision = 7)
	@Override
	public Integer getCost() {
		return this.cost;
	}

	@Override
	public ObstacleConfigPojo setCost(Integer cost) {
		this.cost = cost;
		return this;
	}

	@Column(name = "seconds_to_remove", precision = 7)
	@Override
	public Integer getSecondsToRemove() {
		return this.secondsToRemove;
	}

	@Override
	public ObstacleConfigPojo setSecondsToRemove(Integer secondsToRemove) {
		this.secondsToRemove = secondsToRemove;
		return this;
	}

	@Column(name = "width", precision = 3)
	@Override
	public Byte getWidth() {
		return this.width;
	}

	@Override
	public ObstacleConfigPojo setWidth(Byte width) {
		this.width = width;
		return this;
	}

	@Column(name = "height", precision = 3)
	@Override
	public Byte getHeight() {
		return this.height;
	}

	@Override
	public ObstacleConfigPojo setHeight(Byte height) {
		this.height = height;
		return this;
	}

	@Column(name = "img_name", length = 45)
	@Size(max = 45)
	@Override
	public String getImgName() {
		return this.imgName;
	}

	@Override
	public ObstacleConfigPojo setImgName(String imgName) {
		this.imgName = imgName;
		return this;
	}

	@Column(name = "img_vertical_pixel_offset", precision = 12)
	@Override
	public Double getImgVerticalPixelOffset() {
		return this.imgVerticalPixelOffset;
	}

	@Override
	public ObstacleConfigPojo setImgVerticalPixelOffset(Double imgVerticalPixelOffset) {
		this.imgVerticalPixelOffset = imgVerticalPixelOffset;
		return this;
	}

	@Column(name = "description", length = 45)
	@Size(max = 45)
	@Override
	public String getDescription() {
		return this.description;
	}

	@Override
	public ObstacleConfigPojo setDescription(String description) {
		this.description = description;
		return this;
	}

	@Column(name = "chance_to_appear", precision = 12)
	@Override
	public Double getChanceToAppear() {
		return this.chanceToAppear;
	}

	@Override
	public ObstacleConfigPojo setChanceToAppear(Double chanceToAppear) {
		this.chanceToAppear = chanceToAppear;
		return this;
	}

	@Column(name = "shadow_img_name", length = 45)
	@Size(max = 45)
	@Override
	public String getShadowImgName() {
		return this.shadowImgName;
	}

	@Override
	public ObstacleConfigPojo setShadowImgName(String shadowImgName) {
		this.shadowImgName = shadowImgName;
		return this;
	}

	@Column(name = "shadow_vertical_offset", precision = 12)
	@Override
	public Double getShadowVerticalOffset() {
		return this.shadowVerticalOffset;
	}

	@Override
	public ObstacleConfigPojo setShadowVerticalOffset(Double shadowVerticalOffset) {
		this.shadowVerticalOffset = shadowVerticalOffset;
		return this;
	}

	@Column(name = "shadow_horizontal_offset", precision = 12)
	@Override
	public Double getShadowHorizontalOffset() {
		return this.shadowHorizontalOffset;
	}

	@Override
	public ObstacleConfigPojo setShadowHorizontalOffset(Double shadowHorizontalOffset) {
		this.shadowHorizontalOffset = shadowHorizontalOffset;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IObstacleConfig from) {
		setId(from.getId());
		setName(from.getName());
		setRemovalCostType(from.getRemovalCostType());
		setCost(from.getCost());
		setSecondsToRemove(from.getSecondsToRemove());
		setWidth(from.getWidth());
		setHeight(from.getHeight());
		setImgName(from.getImgName());
		setImgVerticalPixelOffset(from.getImgVerticalPixelOffset());
		setDescription(from.getDescription());
		setChanceToAppear(from.getChanceToAppear());
		setShadowImgName(from.getShadowImgName());
		setShadowVerticalOffset(from.getShadowVerticalOffset());
		setShadowHorizontalOffset(from.getShadowHorizontalOffset());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IObstacleConfig> E into(E into) {
		into.from(this);
		return into;
	}
}
