/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITranslationSettingsForUser;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "translation_settings_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"receiver_user_id", "sender_user_id"})
})
public class TranslationSettingsForUserPojo implements ITranslationSettingsForUser {

	private static final long serialVersionUID = 1514801554;

	private String  id;
	private String  receiverUserId;
	private String  senderUserId;
	private String  language;
	private String  chatType;
	private Boolean translationsOn;

	public TranslationSettingsForUserPojo() {}

	public TranslationSettingsForUserPojo(TranslationSettingsForUserPojo value) {
		this.id = value.id;
		this.receiverUserId = value.receiverUserId;
		this.senderUserId = value.senderUserId;
		this.language = value.language;
		this.chatType = value.chatType;
		this.translationsOn = value.translationsOn;
	}

	public TranslationSettingsForUserPojo(
		String  id,
		String  receiverUserId,
		String  senderUserId,
		String  language,
		String  chatType,
		Boolean translationsOn
	) {
		this.id = id;
		this.receiverUserId = receiverUserId;
		this.senderUserId = senderUserId;
		this.language = language;
		this.chatType = chatType;
		this.translationsOn = translationsOn;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return this.id;
	}

	@Override
	public TranslationSettingsForUserPojo setId(String id) {
		this.id = id;
		return this;
	}

	@Column(name = "receiver_user_id", length = 45)
	@Size(max = 45)
	@Override
	public String getReceiverUserId() {
		return this.receiverUserId;
	}

	@Override
	public TranslationSettingsForUserPojo setReceiverUserId(String receiverUserId) {
		this.receiverUserId = receiverUserId;
		return this;
	}

	@Column(name = "sender_user_id", length = 45)
	@Size(max = 45)
	@Override
	public String getSenderUserId() {
		return this.senderUserId;
	}

	@Override
	public TranslationSettingsForUserPojo setSenderUserId(String senderUserId) {
		this.senderUserId = senderUserId;
		return this;
	}

	@Column(name = "language", length = 45)
	@Size(max = 45)
	@Override
	public String getLanguage() {
		return this.language;
	}

	@Override
	public TranslationSettingsForUserPojo setLanguage(String language) {
		this.language = language;
		return this;
	}

	@Column(name = "chat_type", length = 45)
	@Size(max = 45)
	@Override
	public String getChatType() {
		return this.chatType;
	}

	@Override
	public TranslationSettingsForUserPojo setChatType(String chatType) {
		this.chatType = chatType;
		return this;
	}

	@Column(name = "translations_on", precision = 1)
	@Override
	public Boolean getTranslationsOn() {
		return this.translationsOn;
	}

	@Override
	public TranslationSettingsForUserPojo setTranslationsOn(Boolean translationsOn) {
		this.translationsOn = translationsOn;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITranslationSettingsForUser from) {
		setId(from.getId());
		setReceiverUserId(from.getReceiverUserId());
		setSenderUserId(from.getSenderUserId());
		setLanguage(from.getLanguage());
		setChatType(from.getChatType());
		setTranslationsOn(from.getTranslationsOn());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITranslationSettingsForUser> E into(E into) {
		into.from(this);
		return into;
	}
}
