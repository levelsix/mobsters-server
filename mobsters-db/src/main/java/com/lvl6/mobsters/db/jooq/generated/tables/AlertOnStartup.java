/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.AlertOnStartupRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlertOnStartup extends TableImpl<AlertOnStartupRecord> {

	private static final long serialVersionUID = -2090989997;

	/**
	 * The reference instance of <code>mobsters.alert_on_startup</code>
	 */
	public static final AlertOnStartup ALERT_ON_STARTUP = new AlertOnStartup();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AlertOnStartupRecord> getRecordType() {
		return AlertOnStartupRecord.class;
	}

	/**
	 * The column <code>mobsters.alert_on_startup.id</code>.
	 */
	public final TableField<AlertOnStartupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.alert_on_startup.message</code>.
	 */
	public final TableField<AlertOnStartupRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR.length(90), this, "");

	/**
	 * The column <code>mobsters.alert_on_startup.is_active</code>.
	 */
	public final TableField<AlertOnStartupRecord, Boolean> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.alert_on_startup</code> table reference
	 */
	public AlertOnStartup() {
		this("alert_on_startup", null);
	}

	/**
	 * Create an aliased <code>mobsters.alert_on_startup</code> table reference
	 */
	public AlertOnStartup(String alias) {
		this(alias, ALERT_ON_STARTUP);
	}

	private AlertOnStartup(String alias, Table<AlertOnStartupRecord> aliased) {
		this(alias, aliased, null);
	}

	private AlertOnStartup(String alias, Table<AlertOnStartupRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AlertOnStartupRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ALERT_ON_STARTUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AlertOnStartupRecord> getPrimaryKey() {
		return Keys.KEY_ALERT_ON_STARTUP_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AlertOnStartupRecord>> getKeys() {
		return Arrays.<UniqueKey<AlertOnStartupRecord>>asList(Keys.KEY_ALERT_ON_STARTUP_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlertOnStartup as(String alias) {
		return new AlertOnStartup(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AlertOnStartup rename(String name) {
		return new AlertOnStartup(name, null);
	}
}
