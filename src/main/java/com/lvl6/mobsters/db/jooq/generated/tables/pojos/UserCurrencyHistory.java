/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IUserCurrencyHistory;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_currency_history", schema = "mobsters")
public class UserCurrencyHistory implements IUserCurrencyHistory {

	private static final long serialVersionUID = 216548163;

	private String    id;
	private String    userId;
	private Timestamp date;
	private String    resourceType;
	private Integer   currencyChange;
	private Integer   currencyBeforeChange;
	private Integer   currencyAfterChange;
	private String    reasonForChange;
	private String    details;

	public UserCurrencyHistory() {}

	public UserCurrencyHistory(UserCurrencyHistory value) {
		this.id = value.id;
		this.userId = value.userId;
		this.date = value.date;
		this.resourceType = value.resourceType;
		this.currencyChange = value.currencyChange;
		this.currencyBeforeChange = value.currencyBeforeChange;
		this.currencyAfterChange = value.currencyAfterChange;
		this.reasonForChange = value.reasonForChange;
		this.details = value.details;
	}

	public UserCurrencyHistory(
		String    id,
		String    userId,
		Timestamp date,
		String    resourceType,
		Integer   currencyChange,
		Integer   currencyBeforeChange,
		Integer   currencyAfterChange,
		String    reasonForChange,
		String    details
	) {
		this.id = id;
		this.userId = userId;
		this.date = date;
		this.resourceType = resourceType;
		this.currencyChange = currencyChange;
		this.currencyBeforeChange = currencyBeforeChange;
		this.currencyAfterChange = currencyAfterChange;
		this.reasonForChange = reasonForChange;
		this.details = details;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return this.id;
	}

	@Override
	public UserCurrencyHistory setId(String id) {
		this.id = id;
		return this;
	}

	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public UserCurrencyHistory setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "date")
	@Override
	public Timestamp getDate() {
		return this.date;
	}

	@Override
	public UserCurrencyHistory setDate(Timestamp date) {
		this.date = date;
		return this;
	}

	@Column(name = "resource_type", length = 100)
	@Size(max = 100)
	@Override
	public String getResourceType() {
		return this.resourceType;
	}

	@Override
	public UserCurrencyHistory setResourceType(String resourceType) {
		this.resourceType = resourceType;
		return this;
	}

	@Column(name = "currency_change", precision = 10)
	@Override
	public Integer getCurrencyChange() {
		return this.currencyChange;
	}

	@Override
	public UserCurrencyHistory setCurrencyChange(Integer currencyChange) {
		this.currencyChange = currencyChange;
		return this;
	}

	@Column(name = "currency_before_change", precision = 10)
	@Override
	public Integer getCurrencyBeforeChange() {
		return this.currencyBeforeChange;
	}

	@Override
	public UserCurrencyHistory setCurrencyBeforeChange(Integer currencyBeforeChange) {
		this.currencyBeforeChange = currencyBeforeChange;
		return this;
	}

	@Column(name = "currency_after_change", precision = 10)
	@Override
	public Integer getCurrencyAfterChange() {
		return this.currencyAfterChange;
	}

	@Override
	public UserCurrencyHistory setCurrencyAfterChange(Integer currencyAfterChange) {
		this.currencyAfterChange = currencyAfterChange;
		return this;
	}

	@Column(name = "reason_for_change", length = 95)
	@Size(max = 95)
	@Override
	public String getReasonForChange() {
		return this.reasonForChange;
	}

	@Override
	public UserCurrencyHistory setReasonForChange(String reasonForChange) {
		this.reasonForChange = reasonForChange;
		return this;
	}

	@Column(name = "details", length = 65535)
	@Size(max = 65535)
	@Override
	public String getDetails() {
		return this.details;
	}

	@Override
	public UserCurrencyHistory setDetails(String details) {
		this.details = details;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IUserCurrencyHistory from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setDate(from.getDate());
		setResourceType(from.getResourceType());
		setCurrencyChange(from.getCurrencyChange());
		setCurrencyBeforeChange(from.getCurrencyBeforeChange());
		setCurrencyAfterChange(from.getCurrencyAfterChange());
		setReasonForChange(from.getReasonForChange());
		setDetails(from.getDetails());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IUserCurrencyHistory> E into(E into) {
		into.from(this);
		return into;
	}
}
