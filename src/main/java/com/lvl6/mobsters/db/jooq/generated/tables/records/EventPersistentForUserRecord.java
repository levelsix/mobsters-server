/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.EventPersistentForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IEventPersistentForUser;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "event_persistent_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "event_persistent_id"})
})
public class EventPersistentForUserRecord extends UpdatableRecordImpl<EventPersistentForUserRecord> implements Record3<String, Integer, Timestamp>, IEventPersistentForUser {

	private static final long serialVersionUID = 1696213208;

	/**
	 * Setter for <code>mobsters.event_persistent_for_user.user_id</code>.
	 */
	@Override
	public EventPersistentForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.event_persistent_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.event_persistent_for_user.event_persistent_id</code>.
	 */
	@Override
	public EventPersistentForUserRecord setEventPersistentId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.event_persistent_for_user.event_persistent_id</code>.
	 */
	@Column(name = "event_persistent_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getEventPersistentId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.event_persistent_for_user.time_of_entry</code>.
	 */
	@Override
	public EventPersistentForUserRecord setTimeOfEntry(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.event_persistent_for_user.time_of_entry</code>.
	 */
	@Column(name = "time_of_entry")
	@Override
	public Timestamp getTimeOfEntry() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Integer, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Integer, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return EventPersistentForUser.EVENT_PERSISTENT_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return EventPersistentForUser.EVENT_PERSISTENT_FOR_USER.EVENT_PERSISTENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return EventPersistentForUser.EVENT_PERSISTENT_FOR_USER.TIME_OF_ENTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getEventPersistentId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getTimeOfEntry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventPersistentForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventPersistentForUserRecord value2(Integer value) {
		setEventPersistentId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventPersistentForUserRecord value3(Timestamp value) {
		setTimeOfEntry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventPersistentForUserRecord values(String value1, Integer value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IEventPersistentForUser from) {
		setUserId(from.getUserId());
		setEventPersistentId(from.getEventPersistentId());
		setTimeOfEntry(from.getTimeOfEntry());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IEventPersistentForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventPersistentForUserRecord
	 */
	public EventPersistentForUserRecord() {
		super(EventPersistentForUser.EVENT_PERSISTENT_FOR_USER);
	}

	/**
	 * Create a detached, initialised EventPersistentForUserRecord
	 */
	public EventPersistentForUserRecord(String userId, Integer eventPersistentId, Timestamp timeOfEntry) {
		super(EventPersistentForUser.EVENT_PERSISTENT_FOR_USER);

		setValue(0, userId);
		setValue(1, eventPersistentId);
		setValue(2, timeOfEntry);
	}
}
