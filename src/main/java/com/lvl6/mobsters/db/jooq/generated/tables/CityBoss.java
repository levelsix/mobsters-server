/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityBossRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityBoss extends TableImpl<CityBossRecord> {

	private static final long serialVersionUID = -759081937;

	/**
	 * The reference instance of <code>mobsters.city_boss</code>
	 */
	public static final CityBoss CITY_BOSS = new CityBoss();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CityBossRecord> getRecordType() {
		return CityBossRecord.class;
	}

	/**
	 * The column <code>mobsters.city_boss.id</code>.
	 */
	public final TableField<CityBossRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_boss.city_id</code>.
	 */
	public final TableField<CityBossRecord, Integer> CITY_ID = createField("city_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.city_boss.monster_id</code>.
	 */
	public final TableField<CityBossRecord, Integer> MONSTER_ID = createField("monster_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.city_boss.exp_reward</code>. Not really needed, but
	 */
	public final TableField<CityBossRecord, Integer> EXP_REWARD = createField("exp_reward", org.jooq.impl.SQLDataType.INTEGER, this, "Not really needed, but");

	/**
	 * The column <code>mobsters.city_boss.min_cash_drop</code>.
	 */
	public final TableField<CityBossRecord, Integer> MIN_CASH_DROP = createField("min_cash_drop", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.city_boss.max_cash_drop</code>.
	 */
	public final TableField<CityBossRecord, Integer> MAX_CASH_DROP = createField("max_cash_drop", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.city_boss.puzzle_piece_drop_rate</code>.
	 */
	public final TableField<CityBossRecord, Double> PUZZLE_PIECE_DROP_RATE = createField("puzzle_piece_drop_rate", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>mobsters.city_boss.level</code>.
	 */
	public final TableField<CityBossRecord, Byte> LEVEL = createField("level", org.jooq.impl.SQLDataType.TINYINT, this, "");

	/**
	 * Create a <code>mobsters.city_boss</code> table reference
	 */
	public CityBoss() {
		this("city_boss", null);
	}

	/**
	 * Create an aliased <code>mobsters.city_boss</code> table reference
	 */
	public CityBoss(String alias) {
		this(alias, CITY_BOSS);
	}

	private CityBoss(String alias, Table<CityBossRecord> aliased) {
		this(alias, aliased, null);
	}

	private CityBoss(String alias, Table<CityBossRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CityBossRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CITY_BOSS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CityBossRecord> getPrimaryKey() {
		return Keys.KEY_CITY_BOSS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CityBossRecord>> getKeys() {
		return Arrays.<UniqueKey<CityBossRecord>>asList(Keys.KEY_CITY_BOSS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityBoss as(String alias) {
		return new CityBoss(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CityBoss rename(String name) {
		return new CityBoss(name, null);
	}
}
