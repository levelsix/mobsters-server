/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.interfaces;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_history", schema = "mobsters")
public interface ITaskHistory extends Serializable {

	/**
	 * Setter for <code>mobsters.task_history.task_for_user_id</code>.
	 */
	public ITaskHistory setTaskForUserId(String value);

	/**
	 * Getter for <code>mobsters.task_history.task_for_user_id</code>.
	 */
	@Id
	@Column(name = "task_for_user_id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	public String getTaskForUserId();

	/**
	 * Setter for <code>mobsters.task_history.user_id</code>.
	 */
	public ITaskHistory setUserId(String value);

	/**
	 * Getter for <code>mobsters.task_history.user_id</code>.
	 */
	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	public String getUserId();

	/**
	 * Setter for <code>mobsters.task_history.task_id</code>.
	 */
	public ITaskHistory setTaskId(Integer value);

	/**
	 * Getter for <code>mobsters.task_history.task_id</code>.
	 */
	@Column(name = "task_id", precision = 10)
	public Integer getTaskId();

	/**
	 * Setter for <code>mobsters.task_history.exp_gained</code>.
	 */
	public ITaskHistory setExpGained(Integer value);

	/**
	 * Getter for <code>mobsters.task_history.exp_gained</code>.
	 */
	@Column(name = "exp_gained", precision = 10)
	public Integer getExpGained();

	/**
	 * Setter for <code>mobsters.task_history.cash_gained</code>.
	 */
	public ITaskHistory setCashGained(Integer value);

	/**
	 * Getter for <code>mobsters.task_history.cash_gained</code>.
	 */
	@Column(name = "cash_gained", precision = 10)
	public Integer getCashGained();

	/**
	 * Setter for <code>mobsters.task_history.oil_gained</code>.
	 */
	public ITaskHistory setOilGained(Integer value);

	/**
	 * Getter for <code>mobsters.task_history.oil_gained</code>.
	 */
	@Column(name = "oil_gained", precision = 10)
	public Integer getOilGained();

	/**
	 * Setter for <code>mobsters.task_history.num_revives</code>.
	 */
	public ITaskHistory setNumRevives(Integer value);

	/**
	 * Getter for <code>mobsters.task_history.num_revives</code>.
	 */
	@Column(name = "num_revives", precision = 10)
	public Integer getNumRevives();

	/**
	 * Setter for <code>mobsters.task_history.start_time</code>.
	 */
	public ITaskHistory setStartTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.task_history.start_time</code>.
	 */
	@Column(name = "start_time")
	public Timestamp getStartTime();

	/**
	 * Setter for <code>mobsters.task_history.end_time</code>.
	 */
	public ITaskHistory setEndTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.task_history.end_time</code>.
	 */
	@Column(name = "end_time")
	public Timestamp getEndTime();

	/**
	 * Setter for <code>mobsters.task_history.user_won</code>.
	 */
	public ITaskHistory setUserWon(Boolean value);

	/**
	 * Getter for <code>mobsters.task_history.user_won</code>.
	 */
	@Column(name = "user_won", precision = 1)
	public Boolean getUserWon();

	/**
	 * Setter for <code>mobsters.task_history.cancelled</code>.
	 */
	public ITaskHistory setCancelled(Boolean value);

	/**
	 * Getter for <code>mobsters.task_history.cancelled</code>.
	 */
	@Column(name = "cancelled", precision = 1)
	public Boolean getCancelled();

	/**
	 * Setter for <code>mobsters.task_history.task_stage_id</code>.
	 */
	public ITaskHistory setTaskStageId(Integer value);

	/**
	 * Getter for <code>mobsters.task_history.task_stage_id</code>.
	 */
	@Column(name = "task_stage_id", precision = 10)
	public Integer getTaskStageId();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface ITaskHistory
	 */
	public void from(com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskHistory from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface ITaskHistory
	 */
	public <E extends com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskHistory> E into(E into);
}
