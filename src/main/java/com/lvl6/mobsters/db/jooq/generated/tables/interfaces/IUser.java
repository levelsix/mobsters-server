/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.interfaces;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user", schema = "mobsters")
public interface IUser extends Serializable {

	/**
	 * Setter for <code>mobsters.user.id</code>.
	 */
	public IUser setId(String value);

	/**
	 * Getter for <code>mobsters.user.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	public String getId();

	/**
	 * Setter for <code>mobsters.user.name</code>.
	 */
	public IUser setName(String value);

	/**
	 * Getter for <code>mobsters.user.name</code>.
	 */
	@Column(name = "name", length = 400)
	@Size(max = 400)
	public String getName();

	/**
	 * Setter for <code>mobsters.user.level</code>.
	 */
	public IUser setLevel(UInteger value);

	/**
	 * Getter for <code>mobsters.user.level</code>.
	 */
	@Column(name = "level", nullable = false, precision = 10)
	@NotNull
	public UInteger getLevel();

	/**
	 * Setter for <code>mobsters.user.gems</code>.
	 */
	public IUser setGems(UInteger value);

	/**
	 * Getter for <code>mobsters.user.gems</code>.
	 */
	@Column(name = "gems", nullable = false, precision = 10)
	@NotNull
	public UInteger getGems();

	/**
	 * Setter for <code>mobsters.user.cash</code>. soft currency
	 */
	public IUser setCash(UInteger value);

	/**
	 * Getter for <code>mobsters.user.cash</code>. soft currency
	 */
	@Column(name = "cash", nullable = false, precision = 10)
	@NotNull
	public UInteger getCash();

	/**
	 * Setter for <code>mobsters.user.oil</code>. soft currency
	 */
	public IUser setOil(UInteger value);

	/**
	 * Getter for <code>mobsters.user.oil</code>. soft currency
	 */
	@Column(name = "oil", nullable = false, precision = 10)
	@NotNull
	public UInteger getOil();

	/**
	 * Setter for <code>mobsters.user.experience</code>.
	 */
	public IUser setExperience(UInteger value);

	/**
	 * Getter for <code>mobsters.user.experience</code>.
	 */
	@Column(name = "experience", nullable = false, precision = 10)
	@NotNull
	public UInteger getExperience();

	/**
	 * Setter for <code>mobsters.user.tasks_completed</code>.
	 */
	public IUser setTasksCompleted(UInteger value);

	/**
	 * Getter for <code>mobsters.user.tasks_completed</code>.
	 */
	@Column(name = "tasks_completed", precision = 10)
	public UInteger getTasksCompleted();

	/**
	 * Setter for <code>mobsters.user.referral_code</code>.
	 */
	public IUser setReferralCode(String value);

	/**
	 * Getter for <code>mobsters.user.referral_code</code>.
	 */
	@Column(name = "referral_code", unique = true, length = 255)
	@Size(max = 255)
	public String getReferralCode();

	/**
	 * Setter for <code>mobsters.user.num_referrals</code>.
	 */
	public IUser setNumReferrals(UInteger value);

	/**
	 * Getter for <code>mobsters.user.num_referrals</code>.
	 */
	@Column(name = "num_referrals", precision = 10)
	public UInteger getNumReferrals();

	/**
	 * Setter for <code>mobsters.user.udid_for_history</code>.
	 */
	public IUser setUdidForHistory(String value);

	/**
	 * Getter for <code>mobsters.user.udid_for_history</code>.
	 */
	@Column(name = "udid_for_history", nullable = false, length = 250)
	@NotNull
	@Size(max = 250)
	public String getUdidForHistory();

	/**
	 * Setter for <code>mobsters.user.last_login</code>.
	 */
	public IUser setLastLogin(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_login</code>.
	 */
	@Column(name = "last_login", nullable = false)
	@NotNull
	public Timestamp getLastLogin();

	/**
	 * Setter for <code>mobsters.user.last_logout</code>.
	 */
	public IUser setLastLogout(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_logout</code>.
	 */
	@Column(name = "last_logout")
	public Timestamp getLastLogout();

	/**
	 * Setter for <code>mobsters.user.device_token</code>.
	 */
	public IUser setDeviceToken(String value);

	/**
	 * Getter for <code>mobsters.user.device_token</code>.
	 */
	@Column(name = "device_token", length = 90)
	@Size(max = 90)
	public String getDeviceToken();

	/**
	 * Setter for <code>mobsters.user.num_badges</code>.
	 */
	public IUser setNumBadges(UInteger value);

	/**
	 * Getter for <code>mobsters.user.num_badges</code>.
	 */
	@Column(name = "num_badges", precision = 10)
	public UInteger getNumBadges();

	/**
	 * Setter for <code>mobsters.user.is_fake</code>.
	 */
	public IUser setIsFake(Byte value);

	/**
	 * Getter for <code>mobsters.user.is_fake</code>.
	 */
	@Column(name = "is_fake", nullable = false, precision = 3)
	@NotNull
	public Byte getIsFake();

	/**
	 * Setter for <code>mobsters.user.create_time</code>.
	 */
	public IUser setCreateTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.create_time</code>.
	 */
	@Column(name = "create_time")
	public Timestamp getCreateTime();

	/**
	 * Setter for <code>mobsters.user.is_admin</code>.
	 */
	public IUser setIsAdmin(Byte value);

	/**
	 * Getter for <code>mobsters.user.is_admin</code>.
	 */
	@Column(name = "is_admin", nullable = false, precision = 3)
	@NotNull
	public Byte getIsAdmin();

	/**
	 * Setter for <code>mobsters.user.apsalar_id</code>.
	 */
	public IUser setApsalarId(String value);

	/**
	 * Getter for <code>mobsters.user.apsalar_id</code>.
	 */
	@Column(name = "apsalar_id", length = 250)
	@Size(max = 250)
	public String getApsalarId();

	/**
	 * Setter for <code>mobsters.user.num_coins_retrieved_from_structs</code>.
	 */
	public IUser setNumCoinsRetrievedFromStructs(UInteger value);

	/**
	 * Getter for <code>mobsters.user.num_coins_retrieved_from_structs</code>.
	 */
	@Column(name = "num_coins_retrieved_from_structs", nullable = false, precision = 10)
	@NotNull
	public UInteger getNumCoinsRetrievedFromStructs();

	/**
	 * Setter for <code>mobsters.user.num_oil_retrieved_from_structs</code>.
	 */
	public IUser setNumOilRetrievedFromStructs(UInteger value);

	/**
	 * Getter for <code>mobsters.user.num_oil_retrieved_from_structs</code>.
	 */
	@Column(name = "num_oil_retrieved_from_structs", nullable = false, precision = 10)
	@NotNull
	public UInteger getNumOilRetrievedFromStructs();

	/**
	 * Setter for <code>mobsters.user.num_consecutive_days_played</code>.
	 */
	public IUser setNumConsecutiveDaysPlayed(UInteger value);

	/**
	 * Getter for <code>mobsters.user.num_consecutive_days_played</code>.
	 */
	@Column(name = "num_consecutive_days_played", precision = 10)
	public UInteger getNumConsecutiveDaysPlayed();

	/**
	 * Setter for <code>mobsters.user.clan_id</code>.
	 */
	public IUser setClanId(String value);

	/**
	 * Getter for <code>mobsters.user.clan_id</code>.
	 */
	@Column(name = "clan_id", length = 36)
	@Size(max = 36)
	public String getClanId();

	/**
	 * Setter for <code>mobsters.user.last_wall_post_notification_time</code>.
	 */
	public IUser setLastWallPostNotificationTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_wall_post_notification_time</code>.
	 */
	@Column(name = "last_wall_post_notification_time")
	public Timestamp getLastWallPostNotificationTime();

	/**
	 * Setter for <code>mobsters.user.kabam_naid</code>.
	 */
	public IUser setKabamNaid(Integer value);

	/**
	 * Getter for <code>mobsters.user.kabam_naid</code>.
	 */
	@Column(name = "kabam_naid", precision = 10)
	public Integer getKabamNaid();

	/**
	 * Setter for <code>mobsters.user.has_received_fb_reward</code>.
	 */
	public IUser setHasReceivedFbReward(Byte value);

	/**
	 * Getter for <code>mobsters.user.has_received_fb_reward</code>.
	 */
	@Column(name = "has_received_fb_reward", precision = 3)
	public Byte getHasReceivedFbReward();

	/**
	 * Setter for <code>mobsters.user.num_beginner_sales_purchased</code>.
	 */
	public IUser setNumBeginnerSalesPurchased(Integer value);

	/**
	 * Getter for <code>mobsters.user.num_beginner_sales_purchased</code>.
	 */
	@Column(name = "num_beginner_sales_purchased", precision = 10)
	public Integer getNumBeginnerSalesPurchased();

	/**
	 * Setter for <code>mobsters.user.facebook_id</code>.
	 */
	public IUser setFacebookId(String value);

	/**
	 * Getter for <code>mobsters.user.facebook_id</code>.
	 */
	@Column(name = "facebook_id", length = 100)
	@Size(max = 100)
	public String getFacebookId();

	/**
	 * Setter for <code>mobsters.user.fb_id_set_on_user_create</code>.
	 */
	public IUser setFbIdSetOnUserCreate(Boolean value);

	/**
	 * Getter for <code>mobsters.user.fb_id_set_on_user_create</code>.
	 */
	@Column(name = "fb_id_set_on_user_create", precision = 1)
	public Boolean getFbIdSetOnUserCreate();

	/**
	 * Setter for <code>mobsters.user.game_center_id</code>.
	 */
	public IUser setGameCenterId(String value);

	/**
	 * Getter for <code>mobsters.user.game_center_id</code>.
	 */
	@Column(name = "game_center_id", length = 100)
	@Size(max = 100)
	public String getGameCenterId();

	/**
	 * Setter for <code>mobsters.user.udid</code>.
	 */
	public IUser setUdid(String value);

	/**
	 * Getter for <code>mobsters.user.udid</code>.
	 */
	@Column(name = "udid", length = 250)
	@Size(max = 250)
	public String getUdid();

	/**
	 * Setter for <code>mobsters.user.last_obstacle_spawned_time</code>.
	 */
	public IUser setLastObstacleSpawnedTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_obstacle_spawned_time</code>.
	 */
	@Column(name = "last_obstacle_spawned_time", nullable = false)
	@NotNull
	public Timestamp getLastObstacleSpawnedTime();

	/**
	 * Setter for <code>mobsters.user.num_obstacles_removed</code>.
	 */
	public IUser setNumObstaclesRemoved(Integer value);

	/**
	 * Getter for <code>mobsters.user.num_obstacles_removed</code>.
	 */
	@Column(name = "num_obstacles_removed", precision = 10)
	public Integer getNumObstaclesRemoved();

	/**
	 * Setter for <code>mobsters.user.last_mini_job_generated_time</code>.
	 */
	public IUser setLastMiniJobGeneratedTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_mini_job_generated_time</code>.
	 */
	@Column(name = "last_mini_job_generated_time")
	public Timestamp getLastMiniJobGeneratedTime();

	/**
	 * Setter for <code>mobsters.user.avatar_monster_id</code>.
	 */
	public IUser setAvatarMonsterId(Integer value);

	/**
	 * Getter for <code>mobsters.user.avatar_monster_id</code>.
	 */
	@Column(name = "avatar_monster_id", precision = 10)
	public Integer getAvatarMonsterId();

	/**
	 * Setter for <code>mobsters.user.email</code>.
	 */
	public IUser setEmail(String value);

	/**
	 * Getter for <code>mobsters.user.email</code>.
	 */
	@Column(name = "email", length = 255)
	@Size(max = 255)
	public String getEmail();

	/**
	 * Setter for <code>mobsters.user.fb_data</code>.
	 */
	public IUser setFbData(String value);

	/**
	 * Getter for <code>mobsters.user.fb_data</code>.
	 */
	@Column(name = "fb_data", length = 65535)
	@Size(max = 65535)
	public String getFbData();

	/**
	 * Setter for <code>mobsters.user.last_free_booster_pack_time</code>.
	 */
	public IUser setLastFreeBoosterPackTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_free_booster_pack_time</code>.
	 */
	@Column(name = "last_free_booster_pack_time")
	public Timestamp getLastFreeBoosterPackTime();

	/**
	 * Setter for <code>mobsters.user.clan_helps</code>.
	 */
	public IUser setClanHelps(Integer value);

	/**
	 * Getter for <code>mobsters.user.clan_helps</code>.
	 */
	@Column(name = "clan_helps", precision = 10)
	public Integer getClanHelps();

	/**
	 * Setter for <code>mobsters.user.last_secret_gift_collect_time</code>.
	 */
	public IUser setLastSecretGiftCollectTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_secret_gift_collect_time</code>.
	 */
	@Column(name = "last_secret_gift_collect_time")
	public Timestamp getLastSecretGiftCollectTime();

	/**
	 * Setter for <code>mobsters.user.pvp_defending_message</code>.
	 */
	public IUser setPvpDefendingMessage(String value);

	/**
	 * Getter for <code>mobsters.user.pvp_defending_message</code>.
	 */
	@Column(name = "pvp_defending_message", length = 65535)
	@Size(max = 65535)
	public String getPvpDefendingMessage();

	/**
	 * Setter for <code>mobsters.user.last_team_donate_solicitation</code>.
	 */
	public IUser setLastTeamDonateSolicitation(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.last_team_donate_solicitation</code>.
	 */
	@Column(name = "last_team_donate_solicitation")
	public Timestamp getLastTeamDonateSolicitation();

	/**
	 * Setter for <code>mobsters.user.bought_rigged_booster_pack</code>.
	 */
	public IUser setBoughtRiggedBoosterPack(Boolean value);

	/**
	 * Getter for <code>mobsters.user.bought_rigged_booster_pack</code>.
	 */
	@Column(name = "bought_rigged_booster_pack", precision = 1)
	public Boolean getBoughtRiggedBoosterPack();

	/**
	 * Setter for <code>mobsters.user.sales_value</code>. 0: never bought anything
1: has bought a 4.99
2: has bought a 9.99
3: has bought a 19.99
4: has bought a 49.99
5: has bought a 99.99
	 */
	public IUser setSalesValue(Integer value);

	/**
	 * Getter for <code>mobsters.user.sales_value</code>. 0: never bought anything
1: has bought a 4.99
2: has bought a 9.99
3: has bought a 19.99
4: has bought a 49.99
5: has bought a 99.99
	 */
	@Column(name = "sales_value", precision = 10)
	public Integer getSalesValue();

	/**
	 * Setter for <code>mobsters.user.sales_last_purchase_time</code>.
	 */
	public IUser setSalesLastPurchaseTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.user.sales_last_purchase_time</code>.
	 */
	@Column(name = "sales_last_purchase_time")
	public Timestamp getSalesLastPurchaseTime();

	/**
	 * Setter for <code>mobsters.user.sales_jump_two_tiers</code>.
	 */
	public IUser setSalesJumpTwoTiers(Boolean value);

	/**
	 * Getter for <code>mobsters.user.sales_jump_two_tiers</code>.
	 */
	@Column(name = "sales_jump_two_tiers", precision = 1)
	public Boolean getSalesJumpTwoTiers();

	/**
	 * Setter for <code>mobsters.user.total_strength</code>.
	 */
	public IUser setTotalStrength(Long value);

	/**
	 * Getter for <code>mobsters.user.total_strength</code>.
	 */
	@Column(name = "total_strength", precision = 19)
	public Long getTotalStrength();

	/**
	 * Setter for <code>mobsters.user.segmentation_group</code>. starter/builder pack: alex/arin/ashwin/byron vs cooper
	group numbers 1-50:cooper,  51-100: alex

	 */
	public IUser setSegmentationGroup(Integer value);

	/**
	 * Getter for <code>mobsters.user.segmentation_group</code>. starter/builder pack: alex/arin/ashwin/byron vs cooper
	group numbers 1-50:cooper,  51-100: alex

	 */
	@Column(name = "segmentation_group", precision = 10)
	public Integer getSegmentationGroup();

	/**
	 * Setter for <code>mobsters.user.gacha_credits</code>.
	 */
	public IUser setGachaCredits(Integer value);

	/**
	 * Getter for <code>mobsters.user.gacha_credits</code>.
	 */
	@Column(name = "gacha_credits", precision = 10)
	public Integer getGachaCredits();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface IUser
	 */
	public void from(com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IUser from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface IUser
	 */
	public <E extends com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IUser> E into(E into);
}
