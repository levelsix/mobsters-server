/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterSnapshotForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterSnapshotForUser;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_snapshot_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "time_of_entry", "user_id"})
})
public class MonsterSnapshotForUserRecord extends UpdatableRecordImpl<MonsterSnapshotForUserRecord> implements Record13<String, String, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer>, IMonsterSnapshotForUser {

	private static final long serialVersionUID = -1081791269;

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.id</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.id</code>.
	 */
	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.time_of_entry</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setTimeOfEntry(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.time_of_entry</code>.
	 */
	@Column(name = "time_of_entry", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getTimeOfEntry() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.user_id</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setUserId(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.type</code>. indicates a table
	 */
	@Override
	public MonsterSnapshotForUserRecord setType(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.type</code>. indicates a table
	 */
	@Column(name = "type", length = 36)
	@Size(max = 36)
	@Override
	public String getType() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.id_in_table</code>. table is determined by type
	 */
	@Override
	public MonsterSnapshotForUserRecord setIdInTable(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.id_in_table</code>. table is determined by type
	 */
	@Column(name = "id_in_table", length = 36)
	@Size(max = 36)
	@Override
	public String getIdInTable() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.monster_for_user_id</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setMonsterForUserId(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.monster_for_user_id</code>.
	 */
	@Column(name = "monster_for_user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getMonsterForUserId() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.monster_id</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setMonsterId(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.monster_id</code>.
	 */
	@Column(name = "monster_id", precision = 10)
	@Override
	public Integer getMonsterId() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.current_exp</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setCurrentExp(Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.current_exp</code>.
	 */
	@Column(name = "current_exp", precision = 10)
	@Override
	public Integer getCurrentExp() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.current_lvl</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setCurrentLvl(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.current_lvl</code>.
	 */
	@Column(name = "current_lvl", precision = 10)
	@Override
	public Integer getCurrentLvl() {
		return (Integer) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.current_hp</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setCurrentHp(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.current_hp</code>.
	 */
	@Column(name = "current_hp", precision = 10)
	@Override
	public Integer getCurrentHp() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.team_slot_num</code>.
	 */
	@Override
	public MonsterSnapshotForUserRecord setTeamSlotNum(Integer value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.team_slot_num</code>.
	 */
	@Column(name = "team_slot_num", precision = 10)
	@Override
	public Integer getTeamSlotNum() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.off_skill_id</code>. offensive skill id
	 */
	@Override
	public MonsterSnapshotForUserRecord setOffSkillId(Integer value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.off_skill_id</code>. offensive skill id
	 */
	@Column(name = "off_skill_id", precision = 10)
	@Override
	public Integer getOffSkillId() {
		return (Integer) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.monster_snapshot_for_user.def_skill_id</code>. defensive skill id
	 */
	@Override
	public MonsterSnapshotForUserRecord setDefSkillId(Integer value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_snapshot_for_user.def_skill_id</code>. defensive skill id
	 */
	@Column(name = "def_skill_id", precision = 10)
	@Override
	public Integer getDefSkillId() {
		return (Integer) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<String, String, String> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<String, String, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<String, String, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
		return (Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TIME_OF_ENTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.ID_IN_TABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.MONSTER_FOR_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.MONSTER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.CURRENT_EXP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.CURRENT_LVL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.CURRENT_HP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.TEAM_SLOT_NUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field12() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.OFF_SKILL_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field13() {
		return MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER.DEF_SKILL_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTimeOfEntry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getIdInTable();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getMonsterForUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getMonsterId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getCurrentExp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getCurrentLvl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getCurrentHp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getTeamSlotNum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value12() {
		return getOffSkillId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value13() {
		return getDefSkillId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value2(String value) {
		setTimeOfEntry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value3(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value4(String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value5(String value) {
		setIdInTable(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value6(String value) {
		setMonsterForUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value7(Integer value) {
		setMonsterId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value8(Integer value) {
		setCurrentExp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value9(Integer value) {
		setCurrentLvl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value10(Integer value) {
		setCurrentHp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value11(Integer value) {
		setTeamSlotNum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value12(Integer value) {
		setOffSkillId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord value13(Integer value) {
		setDefSkillId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterSnapshotForUserRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11, Integer value12, Integer value13) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterSnapshotForUser from) {
		setId(from.getId());
		setTimeOfEntry(from.getTimeOfEntry());
		setUserId(from.getUserId());
		setType(from.getType());
		setIdInTable(from.getIdInTable());
		setMonsterForUserId(from.getMonsterForUserId());
		setMonsterId(from.getMonsterId());
		setCurrentExp(from.getCurrentExp());
		setCurrentLvl(from.getCurrentLvl());
		setCurrentHp(from.getCurrentHp());
		setTeamSlotNum(from.getTeamSlotNum());
		setOffSkillId(from.getOffSkillId());
		setDefSkillId(from.getDefSkillId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterSnapshotForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MonsterSnapshotForUserRecord
	 */
	public MonsterSnapshotForUserRecord() {
		super(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER);
	}

	/**
	 * Create a detached, initialised MonsterSnapshotForUserRecord
	 */
	public MonsterSnapshotForUserRecord(String id, String timeOfEntry, String userId, String type, String idInTable, String monsterForUserId, Integer monsterId, Integer currentExp, Integer currentLvl, Integer currentHp, Integer teamSlotNum, Integer offSkillId, Integer defSkillId) {
		super(MonsterSnapshotForUser.MONSTER_SNAPSHOT_FOR_USER);

		setValue(0, id);
		setValue(1, timeOfEntry);
		setValue(2, userId);
		setValue(3, type);
		setValue(4, idInTable);
		setValue(5, monsterForUserId);
		setValue(6, monsterId);
		setValue(7, currentExp);
		setValue(8, currentLvl);
		setValue(9, currentHp);
		setValue(10, teamSlotNum);
		setValue(11, offSkillId);
		setValue(12, defSkillId);
	}
}
