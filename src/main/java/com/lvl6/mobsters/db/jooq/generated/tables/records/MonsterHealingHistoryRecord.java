/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterHealingHistory;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterHealingHistory;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_healing_history", schema = "mobsters")
public class MonsterHealingHistoryRecord extends UpdatableRecordImpl<MonsterHealingHistoryRecord> implements Record6<String, String, String, Timestamp, Timestamp, Boolean>, IMonsterHealingHistory {

	private static final long serialVersionUID = 1141711085;

	/**
	 * Setter for <code>mobsters.monster_healing_history.id</code>.
	 */
	@Override
	public MonsterHealingHistoryRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_healing_history.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.monster_healing_history.user_id</code>.
	 */
	@Override
	public MonsterHealingHistoryRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_healing_history.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.monster_healing_history.monster_for_user_id</code>.
	 */
	@Override
	public MonsterHealingHistoryRecord setMonsterForUserId(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_healing_history.monster_for_user_id</code>.
	 */
	@Column(name = "monster_for_user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getMonsterForUserId() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.monster_healing_history.queued_time</code>.
	 */
	@Override
	public MonsterHealingHistoryRecord setQueuedTime(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_healing_history.queued_time</code>.
	 */
	@Column(name = "queued_time")
	@Override
	public Timestamp getQueuedTime() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.monster_healing_history.unqueued_time</code>.
	 */
	@Override
	public MonsterHealingHistoryRecord setUnqueuedTime(Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_healing_history.unqueued_time</code>.
	 */
	@Column(name = "unqueued_time")
	@Override
	public Timestamp getUnqueuedTime() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.monster_healing_history.finished_healing</code>.
	 */
	@Override
	public MonsterHealingHistoryRecord setFinishedHealing(Boolean value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_healing_history.finished_healing</code>.
	 */
	@Column(name = "finished_healing", precision = 1)
	@Override
	public Boolean getFinishedHealing() {
		return (Boolean) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, String, Timestamp, Timestamp, Boolean> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, String, String, Timestamp, Timestamp, Boolean> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MonsterHealingHistory.MONSTER_HEALING_HISTORY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MonsterHealingHistory.MONSTER_HEALING_HISTORY.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return MonsterHealingHistory.MONSTER_HEALING_HISTORY.MONSTER_FOR_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return MonsterHealingHistory.MONSTER_HEALING_HISTORY.QUEUED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return MonsterHealingHistory.MONSTER_HEALING_HISTORY.UNQUEUED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return MonsterHealingHistory.MONSTER_HEALING_HISTORY.FINISHED_HEALING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getMonsterForUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getQueuedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getUnqueuedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getFinishedHealing();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord value3(String value) {
		setMonsterForUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord value4(Timestamp value) {
		setQueuedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord value5(Timestamp value) {
		setUnqueuedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord value6(Boolean value) {
		setFinishedHealing(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterHealingHistoryRecord values(String value1, String value2, String value3, Timestamp value4, Timestamp value5, Boolean value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterHealingHistory from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setMonsterForUserId(from.getMonsterForUserId());
		setQueuedTime(from.getQueuedTime());
		setUnqueuedTime(from.getUnqueuedTime());
		setFinishedHealing(from.getFinishedHealing());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterHealingHistory> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MonsterHealingHistoryRecord
	 */
	public MonsterHealingHistoryRecord() {
		super(MonsterHealingHistory.MONSTER_HEALING_HISTORY);
	}

	/**
	 * Create a detached, initialised MonsterHealingHistoryRecord
	 */
	public MonsterHealingHistoryRecord(String id, String userId, String monsterForUserId, Timestamp queuedTime, Timestamp unqueuedTime, Boolean finishedHealing) {
		super(MonsterHealingHistory.MONSTER_HEALING_HISTORY);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, monsterForUserId);
		setValue(3, queuedTime);
		setValue(4, unqueuedTime);
		setValue(5, finishedHealing);
	}
}
