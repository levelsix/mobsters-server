/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskForUserOngoing;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskForUserOngoing;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_for_user_ongoing", schema = "mobsters")
public class TaskForUserOngoingRecord extends UpdatableRecordImpl<TaskForUserOngoingRecord> implements Record9<String, String, UInteger, Integer, Integer, Integer, Integer, Timestamp, Integer>, ITaskForUserOngoing {

	private static final long serialVersionUID = 206201602;

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.id</code>.
	 */
	@Override
	public TaskForUserOngoingRecord setId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.user_id</code>.
	 */
	@Override
	public TaskForUserOngoingRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.task_id</code>.
	 */
	@Override
	public TaskForUserOngoingRecord setTaskId(UInteger value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.task_id</code>.
	 */
	@Column(name = "task_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public UInteger getTaskId() {
		return (UInteger) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.exp_gained</code>. Experience gained from all the stages, if the user beats the dungeon.
	 */
	@Override
	public TaskForUserOngoingRecord setExpGained(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.exp_gained</code>. Experience gained from all the stages, if the user beats the dungeon.
	 */
	@Column(name = "exp_gained", precision = 10)
	@Override
	public Integer getExpGained() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.cash_gained</code>. Cash gained from all the stages, if the user beats the dungeon.
	 */
	@Override
	public TaskForUserOngoingRecord setCashGained(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.cash_gained</code>. Cash gained from all the stages, if the user beats the dungeon.
	 */
	@Column(name = "cash_gained", precision = 10)
	@Override
	public Integer getCashGained() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.oil_gained</code>.
	 */
	@Override
	public TaskForUserOngoingRecord setOilGained(Integer value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.oil_gained</code>.
	 */
	@Column(name = "oil_gained", precision = 10)
	@Override
	public Integer getOilGained() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.num_revives</code>. Keeps track of how many times the user died and chose to revive-and-continue the current stage in the dungeon.
	 */
	@Override
	public TaskForUserOngoingRecord setNumRevives(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.num_revives</code>. Keeps track of how many times the user died and chose to revive-and-continue the current stage in the dungeon.
	 */
	@Column(name = "num_revives", precision = 10)
	@Override
	public Integer getNumRevives() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.start_time</code>.
	 */
	@Override
	public TaskForUserOngoingRecord setStartTime(Timestamp value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.start_time</code>.
	 */
	@Column(name = "start_time")
	@Override
	public Timestamp getStartTime() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.task_for_user_ongoing.task_stage_id</code>.
	 */
	@Override
	public TaskForUserOngoingRecord setTaskStageId(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_for_user_ongoing.task_stage_id</code>.
	 */
	@Column(name = "task_stage_id", precision = 10)
	@Override
	public Integer getTaskStageId() {
		return (Integer) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, UInteger, Integer, Integer, Integer, Integer, Timestamp, Integer> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, UInteger, Integer, Integer, Integer, Integer, Timestamp, Integer> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field3() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.TASK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.EXP_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.CASH_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.OIL_GAINED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.NUM_REVIVES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return TaskForUserOngoing.TASK_FOR_USER_ONGOING.TASK_STAGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value3() {
		return getTaskId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getExpGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getCashGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getOilGained();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getNumRevives();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getTaskStageId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value3(UInteger value) {
		setTaskId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value4(Integer value) {
		setExpGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value5(Integer value) {
		setCashGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value6(Integer value) {
		setOilGained(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value7(Integer value) {
		setNumRevives(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value8(Timestamp value) {
		setStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord value9(Integer value) {
		setTaskStageId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserOngoingRecord values(String value1, String value2, UInteger value3, Integer value4, Integer value5, Integer value6, Integer value7, Timestamp value8, Integer value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITaskForUserOngoing from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setTaskId(from.getTaskId());
		setExpGained(from.getExpGained());
		setCashGained(from.getCashGained());
		setOilGained(from.getOilGained());
		setNumRevives(from.getNumRevives());
		setStartTime(from.getStartTime());
		setTaskStageId(from.getTaskStageId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITaskForUserOngoing> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TaskForUserOngoingRecord
	 */
	public TaskForUserOngoingRecord() {
		super(TaskForUserOngoing.TASK_FOR_USER_ONGOING);
	}

	/**
	 * Create a detached, initialised TaskForUserOngoingRecord
	 */
	public TaskForUserOngoingRecord(String id, String userId, UInteger taskId, Integer expGained, Integer cashGained, Integer oilGained, Integer numRevives, Timestamp startTime, Integer taskStageId) {
		super(TaskForUserOngoing.TASK_FOR_USER_ONGOING);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, taskId);
		setValue(3, expGained);
		setValue(4, cashGained);
		setValue(5, oilGained);
		setValue(6, numRevives);
		setValue(7, startTime);
		setValue(8, taskStageId);
	}
}
