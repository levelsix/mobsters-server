/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.RewardConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RewardConfig extends TableImpl<RewardConfigRecord> {

	private static final long serialVersionUID = 647868549;

	/**
	 * The reference instance of <code>mobsters.reward_config</code>
	 */
	public static final RewardConfig REWARD_CONFIG = new RewardConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RewardConfigRecord> getRecordType() {
		return RewardConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.reward_config.id</code>.
	 */
	public final TableField<RewardConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.reward_config.static_data_id</code>. refers to a row in some db table
	 */
	public final TableField<RewardConfigRecord, Integer> STATIC_DATA_ID = createField("static_data_id", org.jooq.impl.SQLDataType.INTEGER, this, "refers to a row in some db table");

	/**
	 * The column <code>mobsters.reward_config.type</code>. (refers to db table?)
	 */
	public final TableField<RewardConfigRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(55), this, "(refers to db table?)");

	/**
	 * The column <code>mobsters.reward_config.amt</code>. amount

	//NOTE: if RewardType is MONSTER, then amt is repurposed to:
	//amt = 0 means only one piece is given
	//amt > 0 means one monster with a lvl equal to 'amt' is given 
	 */
	public final TableField<RewardConfigRecord, Integer> AMT = createField("amt", org.jooq.impl.SQLDataType.INTEGER, this, "amount\n\n	//NOTE: if RewardType is MONSTER, then amt is repurposed to:\n	//amt = 0 means only one piece is given\n	//amt > 0 means one monster with a lvl equal to 'amt' is given ");

	/**
	 * Create a <code>mobsters.reward_config</code> table reference
	 */
	public RewardConfig() {
		this("reward_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.reward_config</code> table reference
	 */
	public RewardConfig(String alias) {
		this(alias, REWARD_CONFIG);
	}

	private RewardConfig(String alias, Table<RewardConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private RewardConfig(String alias, Table<RewardConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RewardConfigRecord> getPrimaryKey() {
		return Keys.KEY_REWARD_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RewardConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<RewardConfigRecord>>asList(Keys.KEY_REWARD_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RewardConfig as(String alias) {
		return new RewardConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RewardConfig rename(String name) {
		return new RewardConfig(name, null);
	}
}
