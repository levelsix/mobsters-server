/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskHistory extends TableImpl<TaskHistoryRecord> {

	private static final long serialVersionUID = 1650493881;

	/**
	 * The reference instance of <code>mobsters.task_history</code>
	 */
	public static final TaskHistory TASK_HISTORY = new TaskHistory();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskHistoryRecord> getRecordType() {
		return TaskHistoryRecord.class;
	}

	/**
	 * The column <code>mobsters.task_history.task_for_user_id</code>.
	 */
	public final TableField<TaskHistoryRecord, String> TASK_FOR_USER_ID = createField("task_for_user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_history.user_id</code>.
	 */
	public final TableField<TaskHistoryRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

	/**
	 * The column <code>mobsters.task_history.task_id</code>.
	 */
	public final TableField<TaskHistoryRecord, Integer> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_history.exp_gained</code>.
	 */
	public final TableField<TaskHistoryRecord, Integer> EXP_GAINED = createField("exp_gained", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_history.cash_gained</code>.
	 */
	public final TableField<TaskHistoryRecord, Integer> CASH_GAINED = createField("cash_gained", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_history.oil_gained</code>.
	 */
	public final TableField<TaskHistoryRecord, Integer> OIL_GAINED = createField("oil_gained", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_history.num_revives</code>.
	 */
	public final TableField<TaskHistoryRecord, Integer> NUM_REVIVES = createField("num_revives", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_history.start_time</code>.
	 */
	public final TableField<TaskHistoryRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.task_history.end_time</code>.
	 */
	public final TableField<TaskHistoryRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.task_history.user_won</code>.
	 */
	public final TableField<TaskHistoryRecord, Boolean> USER_WON = createField("user_won", org.jooq.impl.SQLDataType.BIT, this, "");

	/**
	 * The column <code>mobsters.task_history.cancelled</code>.
	 */
	public final TableField<TaskHistoryRecord, Boolean> CANCELLED = createField("cancelled", org.jooq.impl.SQLDataType.BIT, this, "");

	/**
	 * The column <code>mobsters.task_history.task_stage_id</code>.
	 */
	public final TableField<TaskHistoryRecord, Integer> TASK_STAGE_ID = createField("task_stage_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.task_history</code> table reference
	 */
	public TaskHistory() {
		this("task_history", null);
	}

	/**
	 * Create an aliased <code>mobsters.task_history</code> table reference
	 */
	public TaskHistory(String alias) {
		this(alias, TASK_HISTORY);
	}

	private TaskHistory(String alias, Table<TaskHistoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskHistory(String alias, Table<TaskHistoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskHistoryRecord> getPrimaryKey() {
		return Keys.KEY_TASK_HISTORY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskHistoryRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskHistoryRecord>>asList(Keys.KEY_TASK_HISTORY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskHistory as(String alias) {
		return new TaskHistory(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskHistory rename(String name) {
		return new TaskHistory(name, null);
	}
}
