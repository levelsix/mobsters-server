/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskForUserCompletedRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskForUserCompleted extends TableImpl<TaskForUserCompletedRecord> {

	private static final long serialVersionUID = -1574307504;

	/**
	 * The reference instance of <code>mobsters.task_for_user_completed</code>
	 */
	public static final TaskForUserCompleted TASK_FOR_USER_COMPLETED = new TaskForUserCompleted();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskForUserCompletedRecord> getRecordType() {
		return TaskForUserCompletedRecord.class;
	}

	/**
	 * The column <code>mobsters.task_for_user_completed.user_id</code>.
	 */
	public final TableField<TaskForUserCompletedRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_for_user_completed.task_id</code>.
	 */
	public final TableField<TaskForUserCompletedRecord, Integer> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_for_user_completed.time_of_entry</code>.
	 */
	public final TableField<TaskForUserCompletedRecord, Timestamp> TIME_OF_ENTRY = createField("time_of_entry", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_for_user_completed.unclaimed_cash</code>.
	 */
	public final TableField<TaskForUserCompletedRecord, Integer> UNCLAIMED_CASH = createField("unclaimed_cash", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_for_user_completed.unclaimed_oil</code>.
	 */
	public final TableField<TaskForUserCompletedRecord, Integer> UNCLAIMED_OIL = createField("unclaimed_oil", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.task_for_user_completed</code> table reference
	 */
	public TaskForUserCompleted() {
		this("task_for_user_completed", null);
	}

	/**
	 * Create an aliased <code>mobsters.task_for_user_completed</code> table reference
	 */
	public TaskForUserCompleted(String alias) {
		this(alias, TASK_FOR_USER_COMPLETED);
	}

	private TaskForUserCompleted(String alias, Table<TaskForUserCompletedRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskForUserCompleted(String alias, Table<TaskForUserCompletedRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskForUserCompletedRecord> getPrimaryKey() {
		return Keys.KEY_TASK_FOR_USER_COMPLETED_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskForUserCompletedRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskForUserCompletedRecord>>asList(Keys.KEY_TASK_FOR_USER_COMPLETED_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskForUserCompleted as(String alias) {
		return new TaskForUserCompleted(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskForUserCompleted rename(String name) {
		return new TaskForUserCompleted(name, null);
	}
}
