/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.PvpLeagueConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IPvpLeagueConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "pvp_league_config", schema = "mobsters")
public class PvpLeagueConfigRecord extends UpdatableRecordImpl<PvpLeagueConfigRecord> implements Record10<Integer, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer>, IPvpLeagueConfig {

	private static final long serialVersionUID = 275306319;

	/**
	 * Setter for <code>mobsters.pvp_league_config.id</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.league_name</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setLeagueName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.league_name</code>.
	 */
	@Column(name = "league_name", length = 45)
	@Size(max = 45)
	@Override
	public String getLeagueName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.img_prefix</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setImgPrefix(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.img_prefix</code>.
	 */
	@Column(name = "img_prefix", length = 45)
	@Size(max = 45)
	@Override
	public String getImgPrefix() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.description</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setDescription(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.description</code>.
	 */
	@Column(name = "description", length = 200)
	@Size(max = 200)
	@Override
	public String getDescription() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.min_elo</code>. Can be less than a lower league's max elo. Lowest league has lowest min elo. if user's elo is lower than lowest league, user is in lowest league
	 */
	@Override
	public PvpLeagueConfigRecord setMinElo(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.min_elo</code>. Can be less than a lower league's max elo. Lowest league has lowest min elo. if user's elo is lower than lowest league, user is in lowest league
	 */
	@Column(name = "min_elo", precision = 7)
	@Override
	public Integer getMinElo() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.max_elo</code>. Can be more than higher league's max elo. Highest league has highest min elo. if user's elo is more than highest league, user is in highest league
	 */
	@Override
	public PvpLeagueConfigRecord setMaxElo(Integer value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.max_elo</code>. Can be more than higher league's max elo. Highest league has highest min elo. if user's elo is more than highest league, user is in highest league
	 */
	@Column(name = "max_elo", precision = 7)
	@Override
	public Integer getMaxElo() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.min_rank</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setMinRank(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.min_rank</code>.
	 */
	@Column(name = "min_rank", precision = 10)
	@Override
	public Integer getMinRank() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.max_rank</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setMaxRank(Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.max_rank</code>.
	 */
	@Column(name = "max_rank", precision = 10)
	@Override
	public Integer getMaxRank() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.predecessor_id</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setPredecessorId(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.predecessor_id</code>.
	 */
	@Column(name = "predecessor_id", precision = 10)
	@Override
	public Integer getPredecessorId() {
		return (Integer) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.pvp_league_config.successor_id</code>.
	 */
	@Override
	public PvpLeagueConfigRecord setSuccessorId(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.pvp_league_config.successor_id</code>.
	 */
	@Column(name = "successor_id", precision = 10)
	@Override
	public Integer getSuccessorId() {
		return (Integer) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<Integer, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<Integer, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
		return (Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.LEAGUE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.IMG_PREFIX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.MIN_ELO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.MAX_ELO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.MIN_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.MAX_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.PREDECESSOR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return PvpLeagueConfig.PVP_LEAGUE_CONFIG.SUCCESSOR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getLeagueName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getImgPrefix();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getMinElo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getMaxElo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getMinRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getMaxRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getPredecessorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getSuccessorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value2(String value) {
		setLeagueName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value3(String value) {
		setImgPrefix(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value5(Integer value) {
		setMinElo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value6(Integer value) {
		setMaxElo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value7(Integer value) {
		setMinRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value8(Integer value) {
		setMaxRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value9(Integer value) {
		setPredecessorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord value10(Integer value) {
		setSuccessorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PvpLeagueConfigRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IPvpLeagueConfig from) {
		setId(from.getId());
		setLeagueName(from.getLeagueName());
		setImgPrefix(from.getImgPrefix());
		setDescription(from.getDescription());
		setMinElo(from.getMinElo());
		setMaxElo(from.getMaxElo());
		setMinRank(from.getMinRank());
		setMaxRank(from.getMaxRank());
		setPredecessorId(from.getPredecessorId());
		setSuccessorId(from.getSuccessorId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IPvpLeagueConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PvpLeagueConfigRecord
	 */
	public PvpLeagueConfigRecord() {
		super(PvpLeagueConfig.PVP_LEAGUE_CONFIG);
	}

	/**
	 * Create a detached, initialised PvpLeagueConfigRecord
	 */
	public PvpLeagueConfigRecord(Integer id, String leagueName, String imgPrefix, String description, Integer minElo, Integer maxElo, Integer minRank, Integer maxRank, Integer predecessorId, Integer successorId) {
		super(PvpLeagueConfig.PVP_LEAGUE_CONFIG);

		setValue(0, id);
		setValue(1, leagueName);
		setValue(2, imgPrefix);
		setValue(3, description);
		setValue(4, minElo);
		setValue(5, maxElo);
		setValue(6, minRank);
		setValue(7, maxRank);
		setValue(8, predecessorId);
		setValue(9, successorId);
	}
}
