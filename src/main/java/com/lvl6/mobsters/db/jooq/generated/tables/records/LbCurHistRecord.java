/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.LbCurHist;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ILbCurHist;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "lb_cur_hist", schema = "mobsters")
public class LbCurHistRecord extends TableRecordImpl<LbCurHistRecord> implements Record2<String, Integer>, ILbCurHist {

	private static final long serialVersionUID = -352867351;

	/**
	 * Setter for <code>mobsters.lb_cur_hist.user_id</code>.
	 */
	@Override
	public LbCurHistRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lb_cur_hist.user_id</code>.
	 */
	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.lb_cur_hist.currency_change</code>.
	 */
	@Override
	public LbCurHistRecord setCurrencyChange(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.lb_cur_hist.currency_change</code>.
	 */
	@Column(name = "currency_change", precision = 10)
	@Override
	public Integer getCurrencyChange() {
		return (Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, Integer> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, Integer> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return LbCurHist.LB_CUR_HIST.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return LbCurHist.LB_CUR_HIST.CURRENCY_CHANGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getCurrencyChange();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LbCurHistRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LbCurHistRecord value2(Integer value) {
		setCurrencyChange(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LbCurHistRecord values(String value1, Integer value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ILbCurHist from) {
		setUserId(from.getUserId());
		setCurrencyChange(from.getCurrencyChange());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ILbCurHist> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LbCurHistRecord
	 */
	public LbCurHistRecord() {
		super(LbCurHist.LB_CUR_HIST);
	}

	/**
	 * Create a detached, initialised LbCurHistRecord
	 */
	public LbCurHistRecord(String userId, Integer currencyChange) {
		super(LbCurHist.LB_CUR_HIST);

		setValue(0, userId);
		setValue(1, currencyChange);
	}
}
