/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.TaskConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITaskConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_config", schema = "mobsters")
public class TaskConfigRecord extends UpdatableRecordImpl<TaskConfigRecord> implements Record13<UInteger, String, String, Integer, Integer, UInteger, UInteger, Integer, Integer, String, String, Integer, Integer>, ITaskConfig {

	private static final long serialVersionUID = -548222282;

	/**
	 * Setter for <code>mobsters.task_config.id</code>.
	 */
	@Override
	public TaskConfigRecord setId(UInteger value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public UInteger getId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.task_config.good_name</code>.
	 */
	@Override
	public TaskConfigRecord setGoodName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.good_name</code>.
	 */
	@Column(name = "good_name", nullable = false, length = 65535)
	@NotNull
	@Size(max = 65535)
	@Override
	public String getGoodName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.task_config.description</code>.
	 */
	@Override
	public TaskConfigRecord setDescription(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.description</code>.
	 */
	@Column(name = "description", length = 65535)
	@Size(max = 65535)
	@Override
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.task_config.city_id</code>.
	 */
	@Override
	public TaskConfigRecord setCityId(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.city_id</code>.
	 */
	@Column(name = "city_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getCityId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.task_config.asset_num_within_city</code>.
	 */
	@Override
	public TaskConfigRecord setAssetNumWithinCity(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.asset_num_within_city</code>.
	 */
	@Column(name = "asset_num_within_city", precision = 10)
	@Override
	public Integer getAssetNumWithinCity() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.task_config.prerequisite_task_id</code>. id in this table. Specifies the task the user should have completed before doing this one.
	 */
	@Override
	public TaskConfigRecord setPrerequisiteTaskId(UInteger value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.prerequisite_task_id</code>. id in this table. Specifies the task the user should have completed before doing this one.
	 */
	@Column(name = "prerequisite_task_id", precision = 10)
	@Override
	public UInteger getPrerequisiteTaskId() {
		return (UInteger) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.task_config.prerequisite_quest_id</code>.
	 */
	@Override
	public TaskConfigRecord setPrerequisiteQuestId(UInteger value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.prerequisite_quest_id</code>.
	 */
	@Column(name = "prerequisite_quest_id", precision = 10)
	@Override
	public UInteger getPrerequisiteQuestId() {
		return (UInteger) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.task_config.board_width</code>.
	 */
	@Override
	public TaskConfigRecord setBoardWidth(Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.board_width</code>.
	 */
	@Column(name = "board_width", precision = 10)
	@Override
	public Integer getBoardWidth() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.task_config.board_height</code>.
	 */
	@Override
	public TaskConfigRecord setBoardHeight(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.board_height</code>.
	 */
	@Column(name = "board_height", precision = 10)
	@Override
	public Integer getBoardHeight() {
		return (Integer) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.task_config.ground_img_prefix</code>.
	 */
	@Override
	public TaskConfigRecord setGroundImgPrefix(String value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.ground_img_prefix</code>.
	 */
	@Column(name = "ground_img_prefix", length = 70)
	@Size(max = 70)
	@Override
	public String getGroundImgPrefix() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.task_config.init_defeated_dialogue</code>.
	 */
	@Override
	public TaskConfigRecord setInitDefeatedDialogue(String value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.init_defeated_dialogue</code>.
	 */
	@Column(name = "init_defeated_dialogue", length = 65535)
	@Size(max = 65535)
	@Override
	public String getInitDefeatedDialogue() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.task_config.exp_reward</code>.
	 */
	@Override
	public TaskConfigRecord setExpReward(Integer value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.exp_reward</code>.
	 */
	@Column(name = "exp_reward", precision = 10)
	@Override
	public Integer getExpReward() {
		return (Integer) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.task_config.board_id</code>.
	 */
	@Override
	public TaskConfigRecord setBoardId(Integer value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.task_config.board_id</code>.
	 */
	@Column(name = "board_id", precision = 10)
	@Override
	public Integer getBoardId() {
		return (Integer) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<UInteger, String, String, Integer, Integer, UInteger, UInteger, Integer, Integer, String, String, Integer, Integer> fieldsRow() {
		return (Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<UInteger, String, String, Integer, Integer, UInteger, UInteger, Integer, Integer, String, String, Integer, Integer> valuesRow() {
		return (Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return TaskConfig.TASK_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return TaskConfig.TASK_CONFIG.GOOD_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return TaskConfig.TASK_CONFIG.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TaskConfig.TASK_CONFIG.CITY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return TaskConfig.TASK_CONFIG.ASSET_NUM_WITHIN_CITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field6() {
		return TaskConfig.TASK_CONFIG.PREREQUISITE_TASK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field7() {
		return TaskConfig.TASK_CONFIG.PREREQUISITE_QUEST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return TaskConfig.TASK_CONFIG.BOARD_WIDTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return TaskConfig.TASK_CONFIG.BOARD_HEIGHT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return TaskConfig.TASK_CONFIG.GROUND_IMG_PREFIX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return TaskConfig.TASK_CONFIG.INIT_DEFEATED_DIALOGUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field12() {
		return TaskConfig.TASK_CONFIG.EXP_REWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field13() {
		return TaskConfig.TASK_CONFIG.BOARD_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getGoodName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCityId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getAssetNumWithinCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value6() {
		return getPrerequisiteTaskId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value7() {
		return getPrerequisiteQuestId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getBoardWidth();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getBoardHeight();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getGroundImgPrefix();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getInitDefeatedDialogue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value12() {
		return getExpReward();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value13() {
		return getBoardId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value1(UInteger value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value2(String value) {
		setGoodName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value4(Integer value) {
		setCityId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value5(Integer value) {
		setAssetNumWithinCity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value6(UInteger value) {
		setPrerequisiteTaskId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value7(UInteger value) {
		setPrerequisiteQuestId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value8(Integer value) {
		setBoardWidth(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value9(Integer value) {
		setBoardHeight(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value10(String value) {
		setGroundImgPrefix(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value11(String value) {
		setInitDefeatedDialogue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value12(Integer value) {
		setExpReward(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord value13(Integer value) {
		setBoardId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskConfigRecord values(UInteger value1, String value2, String value3, Integer value4, Integer value5, UInteger value6, UInteger value7, Integer value8, Integer value9, String value10, String value11, Integer value12, Integer value13) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITaskConfig from) {
		setId(from.getId());
		setGoodName(from.getGoodName());
		setDescription(from.getDescription());
		setCityId(from.getCityId());
		setAssetNumWithinCity(from.getAssetNumWithinCity());
		setPrerequisiteTaskId(from.getPrerequisiteTaskId());
		setPrerequisiteQuestId(from.getPrerequisiteQuestId());
		setBoardWidth(from.getBoardWidth());
		setBoardHeight(from.getBoardHeight());
		setGroundImgPrefix(from.getGroundImgPrefix());
		setInitDefeatedDialogue(from.getInitDefeatedDialogue());
		setExpReward(from.getExpReward());
		setBoardId(from.getBoardId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITaskConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TaskConfigRecord
	 */
	public TaskConfigRecord() {
		super(TaskConfig.TASK_CONFIG);
	}

	/**
	 * Create a detached, initialised TaskConfigRecord
	 */
	public TaskConfigRecord(UInteger id, String goodName, String description, Integer cityId, Integer assetNumWithinCity, UInteger prerequisiteTaskId, UInteger prerequisiteQuestId, Integer boardWidth, Integer boardHeight, String groundImgPrefix, String initDefeatedDialogue, Integer expReward, Integer boardId) {
		super(TaskConfig.TASK_CONFIG);

		setValue(0, id);
		setValue(1, goodName);
		setValue(2, description);
		setValue(3, cityId);
		setValue(4, assetNumWithinCity);
		setValue(5, prerequisiteTaskId);
		setValue(6, prerequisiteQuestId);
		setValue(7, boardWidth);
		setValue(8, boardHeight);
		setValue(9, groundImgPrefix);
		setValue(10, initDefeatedDialogue);
		setValue(11, expReward);
		setValue(12, boardId);
	}
}
