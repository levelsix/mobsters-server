/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.ResearchPropertyConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IResearchPropertyConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "research_property_config", schema = "mobsters")
public class ResearchPropertyConfigRecord extends UpdatableRecordImpl<ResearchPropertyConfigRecord> implements Record4<Integer, Integer, String, Double>, IResearchPropertyConfig {

	private static final long serialVersionUID = 1535471702;

	/**
	 * Setter for <code>mobsters.research_property_config.id</code>.
	 */
	@Override
	public ResearchPropertyConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_property_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.research_property_config.research_id</code>.
	 */
	@Override
	public ResearchPropertyConfigRecord setResearchId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_property_config.research_id</code>.
	 */
	@Column(name = "research_id", precision = 10)
	@Override
	public Integer getResearchId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.research_property_config.name</code>.
	 */
	@Override
	public ResearchPropertyConfigRecord setName(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_property_config.name</code>.
	 */
	@Column(name = "name", length = 50)
	@Size(max = 50)
	@Override
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.research_property_config.value</code>.
	 */
	@Override
	public ResearchPropertyConfigRecord setValue(Double value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.research_property_config.value</code>.
	 */
	@Column(name = "value", precision = 12)
	@Override
	public Double getValue() {
		return (Double) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, Double> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, Double> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG.RESEARCH_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field4() {
		return ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getResearchId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value4() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchPropertyConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchPropertyConfigRecord value2(Integer value) {
		setResearchId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchPropertyConfigRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchPropertyConfigRecord value4(Double value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ResearchPropertyConfigRecord values(Integer value1, Integer value2, String value3, Double value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IResearchPropertyConfig from) {
		setId(from.getId());
		setResearchId(from.getResearchId());
		setName(from.getName());
		setValue(from.getValue());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IResearchPropertyConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ResearchPropertyConfigRecord
	 */
	public ResearchPropertyConfigRecord() {
		super(ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG);
	}

	/**
	 * Create a detached, initialised ResearchPropertyConfigRecord
	 */
	public ResearchPropertyConfigRecord(Integer id, Integer researchId, String name, Double value) {
		super(ResearchPropertyConfig.RESEARCH_PROPERTY_CONFIG);

		setValue(0, id);
		setValue(1, researchId);
		setValue(2, name);
		setValue(3, value);
	}
}
