/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.AchievementConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IAchievementConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "achievement_config", schema = "mobsters")
public class AchievementConfigRecord extends UpdatableRecordImpl<AchievementConfigRecord> implements Record15<Integer, String, String, Integer, Byte, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer>, IAchievementConfig {

	private static final long serialVersionUID = -1446907064;

	/**
	 * Setter for <code>mobsters.achievement_config.id</code>.
	 */
	@Override
	public AchievementConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.name</code>.
	 */
	@Override
	public AchievementConfigRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.name</code>.
	 */
	@Column(name = "name", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.description</code>.
	 */
	@Override
	public AchievementConfigRecord setDescription(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.description</code>.
	 */
	@Column(name = "description", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.gem_reward</code>.
	 */
	@Override
	public AchievementConfigRecord setGemReward(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.gem_reward</code>.
	 */
	@Column(name = "gem_reward", precision = 10)
	@Override
	public Integer getGemReward() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.lvl</code>.
	 */
	@Override
	public AchievementConfigRecord setLvl(Byte value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.lvl</code>.
	 */
	@Column(name = "lvl", nullable = false, precision = 3)
	@NotNull
	@Override
	public Byte getLvl() {
		return (Byte) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.achievement_type</code>.
	 */
	@Override
	public AchievementConfigRecord setAchievementType(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.achievement_type</code>.
	 */
	@Column(name = "achievement_type", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	@Override
	public String getAchievementType() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.resource_type</code>. could be null
	 */
	@Override
	public AchievementConfigRecord setResourceType(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.resource_type</code>. could be null
	 */
	@Column(name = "resource_type", length = 45)
	@Size(max = 45)
	@Override
	public String getResourceType() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.monster_element</code>. could be null
	 */
	@Override
	public AchievementConfigRecord setMonsterElement(String value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.monster_element</code>. could be null
	 */
	@Column(name = "monster_element", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterElement() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.monster_quality</code>. could be null
	 */
	@Override
	public AchievementConfigRecord setMonsterQuality(String value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.monster_quality</code>. could be null
	 */
	@Column(name = "monster_quality", length = 45)
	@Size(max = 45)
	@Override
	public String getMonsterQuality() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.static_data_id</code>.
	 */
	@Override
	public AchievementConfigRecord setStaticDataId(Integer value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.static_data_id</code>.
	 */
	@Column(name = "static_data_id", precision = 10)
	@Override
	public Integer getStaticDataId() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.quantity</code>.
	 */
	@Override
	public AchievementConfigRecord setQuantity(Integer value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.quantity</code>.
	 */
	@Column(name = "quantity", precision = 10)
	@Override
	public Integer getQuantity() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.priority</code>.
	 */
	@Override
	public AchievementConfigRecord setPriority(Integer value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.priority</code>.
	 */
	@Column(name = "priority", precision = 10)
	@Override
	public Integer getPriority() {
		return (Integer) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.prerequisite_id</code>.
	 */
	@Override
	public AchievementConfigRecord setPrerequisiteId(Integer value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.prerequisite_id</code>.
	 */
	@Column(name = "prerequisite_id", precision = 10)
	@Override
	public Integer getPrerequisiteId() {
		return (Integer) getValue(12);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.successor_id</code>.
	 */
	@Override
	public AchievementConfigRecord setSuccessorId(Integer value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.successor_id</code>.
	 */
	@Column(name = "successor_id", precision = 10)
	@Override
	public Integer getSuccessorId() {
		return (Integer) getValue(13);
	}

	/**
	 * Setter for <code>mobsters.achievement_config.exp_reward</code>.
	 */
	@Override
	public AchievementConfigRecord setExpReward(Integer value) {
		setValue(14, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.achievement_config.exp_reward</code>.
	 */
	@Column(name = "exp_reward", precision = 10)
	@Override
	public Integer getExpReward() {
		return (Integer) getValue(14);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record15 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<Integer, String, String, Integer, Byte, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row15) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row15<Integer, String, String, Integer, Byte, String, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
		return (Row15) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.GEM_REWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field5() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.LVL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.ACHIEVEMENT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.RESOURCE_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.MONSTER_ELEMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.MONSTER_QUALITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.STATIC_DATA_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.QUANTITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field12() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.PRIORITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field13() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.PREREQUISITE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field14() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.SUCCESSOR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field15() {
		return AchievementConfig.ACHIEVEMENT_CONFIG.EXP_REWARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getGemReward();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value5() {
		return getLvl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getAchievementType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getResourceType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getMonsterElement();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getMonsterQuality();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getStaticDataId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getQuantity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value12() {
		return getPriority();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value13() {
		return getPrerequisiteId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value14() {
		return getSuccessorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value15() {
		return getExpReward();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value4(Integer value) {
		setGemReward(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value5(Byte value) {
		setLvl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value6(String value) {
		setAchievementType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value7(String value) {
		setResourceType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value8(String value) {
		setMonsterElement(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value9(String value) {
		setMonsterQuality(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value10(Integer value) {
		setStaticDataId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value11(Integer value) {
		setQuantity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value12(Integer value) {
		setPriority(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value13(Integer value) {
		setPrerequisiteId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value14(Integer value) {
		setSuccessorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord value15(Integer value) {
		setExpReward(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AchievementConfigRecord values(Integer value1, String value2, String value3, Integer value4, Byte value5, String value6, String value7, String value8, String value9, Integer value10, Integer value11, Integer value12, Integer value13, Integer value14, Integer value15) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IAchievementConfig from) {
		setId(from.getId());
		setName(from.getName());
		setDescription(from.getDescription());
		setGemReward(from.getGemReward());
		setLvl(from.getLvl());
		setAchievementType(from.getAchievementType());
		setResourceType(from.getResourceType());
		setMonsterElement(from.getMonsterElement());
		setMonsterQuality(from.getMonsterQuality());
		setStaticDataId(from.getStaticDataId());
		setQuantity(from.getQuantity());
		setPriority(from.getPriority());
		setPrerequisiteId(from.getPrerequisiteId());
		setSuccessorId(from.getSuccessorId());
		setExpReward(from.getExpReward());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IAchievementConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AchievementConfigRecord
	 */
	public AchievementConfigRecord() {
		super(AchievementConfig.ACHIEVEMENT_CONFIG);
	}

	/**
	 * Create a detached, initialised AchievementConfigRecord
	 */
	public AchievementConfigRecord(Integer id, String name, String description, Integer gemReward, Byte lvl, String achievementType, String resourceType, String monsterElement, String monsterQuality, Integer staticDataId, Integer quantity, Integer priority, Integer prerequisiteId, Integer successorId, Integer expReward) {
		super(AchievementConfig.ACHIEVEMENT_CONFIG);

		setValue(0, id);
		setValue(1, name);
		setValue(2, description);
		setValue(3, gemReward);
		setValue(4, lvl);
		setValue(5, achievementType);
		setValue(6, resourceType);
		setValue(7, monsterElement);
		setValue(8, monsterQuality);
		setValue(9, staticDataId);
		setValue(10, quantity);
		setValue(11, priority);
		setValue(12, prerequisiteId);
		setValue(13, successorId);
		setValue(14, expReward);
	}
}
