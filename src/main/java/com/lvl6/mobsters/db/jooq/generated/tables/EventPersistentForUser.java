/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.EventPersistentForUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventPersistentForUser extends TableImpl<EventPersistentForUserRecord> {

	private static final long serialVersionUID = 1870402321;

	/**
	 * The reference instance of <code>mobsters.event_persistent_for_user</code>
	 */
	public static final EventPersistentForUser EVENT_PERSISTENT_FOR_USER = new EventPersistentForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EventPersistentForUserRecord> getRecordType() {
		return EventPersistentForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.event_persistent_for_user.user_id</code>.
	 */
	public final TableField<EventPersistentForUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.event_persistent_for_user.event_persistent_id</code>.
	 */
	public final TableField<EventPersistentForUserRecord, Integer> EVENT_PERSISTENT_ID = createField("event_persistent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.event_persistent_for_user.time_of_entry</code>.
	 */
	public final TableField<EventPersistentForUserRecord, Timestamp> TIME_OF_ENTRY = createField("time_of_entry", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>mobsters.event_persistent_for_user</code> table reference
	 */
	public EventPersistentForUser() {
		this("event_persistent_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.event_persistent_for_user</code> table reference
	 */
	public EventPersistentForUser(String alias) {
		this(alias, EVENT_PERSISTENT_FOR_USER);
	}

	private EventPersistentForUser(String alias, Table<EventPersistentForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private EventPersistentForUser(String alias, Table<EventPersistentForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EventPersistentForUserRecord> getPrimaryKey() {
		return Keys.KEY_EVENT_PERSISTENT_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EventPersistentForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<EventPersistentForUserRecord>>asList(Keys.KEY_EVENT_PERSISTENT_FOR_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventPersistentForUser as(String alias) {
		return new EventPersistentForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EventPersistentForUser rename(String name) {
		return new EventPersistentForUser(name, null);
	}
}
