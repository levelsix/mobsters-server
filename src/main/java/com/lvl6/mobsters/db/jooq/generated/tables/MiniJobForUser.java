/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MiniJobForUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiniJobForUser extends TableImpl<MiniJobForUserRecord> {

	private static final long serialVersionUID = -1464663865;

	/**
	 * The reference instance of <code>mobsters.mini_job_for_user</code>
	 */
	public static final MiniJobForUser MINI_JOB_FOR_USER = new MiniJobForUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MiniJobForUserRecord> getRecordType() {
		return MiniJobForUserRecord.class;
	}

	/**
	 * The column <code>mobsters.mini_job_for_user.id</code>.
	 */
	public final TableField<MiniJobForUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.user_id</code>.
	 */
	public final TableField<MiniJobForUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.mini_job_id</code>.
	 */
	public final TableField<MiniJobForUserRecord, Integer> MINI_JOB_ID = createField("mini_job_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.base_dmg_received</code>. amount of damage user's monsters will take
	 */
	public final TableField<MiniJobForUserRecord, UInteger> BASE_DMG_RECEIVED = createField("base_dmg_received", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaulted(true), this, "amount of damage user's monsters will take");

	/**
	 * The column <code>mobsters.mini_job_for_user.duration_minutes</code>.
	 */
	public final TableField<MiniJobForUserRecord, Integer> DURATION_MINUTES = createField("duration_minutes", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.time_started</code>.
	 */
	public final TableField<MiniJobForUserRecord, Timestamp> TIME_STARTED = createField("time_started", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.user_monster_ids</code>.
	 */
	public final TableField<MiniJobForUserRecord, String> USER_MONSTER_IDS = createField("user_monster_ids", org.jooq.impl.SQLDataType.VARCHAR.length(511), this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.time_completed</code>.
	 */
	public final TableField<MiniJobForUserRecord, Timestamp> TIME_COMPLETED = createField("time_completed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mobsters.mini_job_for_user.duration_seconds</code>.
	 */
	public final TableField<MiniJobForUserRecord, Integer> DURATION_SECONDS = createField("duration_seconds", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.mini_job_for_user</code> table reference
	 */
	public MiniJobForUser() {
		this("mini_job_for_user", null);
	}

	/**
	 * Create an aliased <code>mobsters.mini_job_for_user</code> table reference
	 */
	public MiniJobForUser(String alias) {
		this(alias, MINI_JOB_FOR_USER);
	}

	private MiniJobForUser(String alias, Table<MiniJobForUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private MiniJobForUser(String alias, Table<MiniJobForUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MiniJobForUserRecord> getPrimaryKey() {
		return Keys.KEY_MINI_JOB_FOR_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MiniJobForUserRecord>> getKeys() {
		return Arrays.<UniqueKey<MiniJobForUserRecord>>asList(Keys.KEY_MINI_JOB_FOR_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobForUser as(String alias) {
		return new MiniJobForUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MiniJobForUser rename(String name) {
		return new MiniJobForUser(name, null);
	}
}
