/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IClanMemberTeamDonation;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "clan_member_team_donation", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "user_id", "clan_id"}),
	@UniqueConstraint(columnNames = {"clan_id", "user_id"})
})
public class ClanMemberTeamDonation implements IClanMemberTeamDonation {

	private static final long serialVersionUID = 2089054490;

	private String    id;
	private String    userId;
	private String    clanId;
	private Integer   powerLimit;
	private Boolean   fulfilled;
	private String    msg;
	private Timestamp timeOfSolicitation;

	public ClanMemberTeamDonation() {}

	public ClanMemberTeamDonation(ClanMemberTeamDonation value) {
		this.id = value.id;
		this.userId = value.userId;
		this.clanId = value.clanId;
		this.powerLimit = value.powerLimit;
		this.fulfilled = value.fulfilled;
		this.msg = value.msg;
		this.timeOfSolicitation = value.timeOfSolicitation;
	}

	public ClanMemberTeamDonation(
		String    id,
		String    userId,
		String    clanId,
		Integer   powerLimit,
		Boolean   fulfilled,
		String    msg,
		Timestamp timeOfSolicitation
	) {
		this.id = id;
		this.userId = userId;
		this.clanId = clanId;
		this.powerLimit = powerLimit;
		this.fulfilled = fulfilled;
		this.msg = msg;
		this.timeOfSolicitation = timeOfSolicitation;
	}

	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return this.id;
	}

	@Override
	public ClanMemberTeamDonation setId(String id) {
		this.id = id;
		return this;
	}

	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public ClanMemberTeamDonation setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "clan_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getClanId() {
		return this.clanId;
	}

	@Override
	public ClanMemberTeamDonation setClanId(String clanId) {
		this.clanId = clanId;
		return this;
	}

	@Column(name = "power_limit", precision = 10)
	@Override
	public Integer getPowerLimit() {
		return this.powerLimit;
	}

	@Override
	public ClanMemberTeamDonation setPowerLimit(Integer powerLimit) {
		this.powerLimit = powerLimit;
		return this;
	}

	@Column(name = "fulfilled", precision = 1)
	@Override
	public Boolean getFulfilled() {
		return this.fulfilled;
	}

	@Override
	public ClanMemberTeamDonation setFulfilled(Boolean fulfilled) {
		this.fulfilled = fulfilled;
		return this;
	}

	@Column(name = "msg", length = 65535)
	@Size(max = 65535)
	@Override
	public String getMsg() {
		return this.msg;
	}

	@Override
	public ClanMemberTeamDonation setMsg(String msg) {
		this.msg = msg;
		return this;
	}

	@Column(name = "time_of_solicitation")
	@Override
	public Timestamp getTimeOfSolicitation() {
		return this.timeOfSolicitation;
	}

	@Override
	public ClanMemberTeamDonation setTimeOfSolicitation(Timestamp timeOfSolicitation) {
		this.timeOfSolicitation = timeOfSolicitation;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IClanMemberTeamDonation from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setClanId(from.getClanId());
		setPowerLimit(from.getPowerLimit());
		setFulfilled(from.getFulfilled());
		setMsg(from.getMsg());
		setTimeOfSolicitation(from.getTimeOfSolicitation());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IClanMemberTeamDonation> E into(E into) {
		into.from(this);
		return into;
	}
}
