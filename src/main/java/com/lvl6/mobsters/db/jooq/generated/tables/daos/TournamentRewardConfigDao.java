/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.TournamentRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TournamentRewardConfigRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentRewardConfigDao extends DAOImpl<TournamentRewardConfigRecord, com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig, Record3<Integer, Integer, Integer>> {

	/**
	 * Create a new TournamentRewardConfigDao without any configuration
	 */
	public TournamentRewardConfigDao() {
		super(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG, com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig.class);
	}

	/**
	 * Create a new TournamentRewardConfigDao with an attached configuration
	 */
	public TournamentRewardConfigDao(Configuration configuration) {
		super(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG, com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record3<Integer, Integer, Integer> getId(com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig object) {
		return compositeKeyRecord(object.getId(), object.getMinRank(), object.getMaxRank());
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchById(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.ID, values);
	}

	/**
	 * Fetch records that have <code>min_rank IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByMinRank(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.MIN_RANK, values);
	}

	/**
	 * Fetch records that have <code>max_rank IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByMaxRank(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.MAX_RANK, values);
	}

	/**
	 * Fetch records that have <code>gold_rewarded IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByGoldRewarded(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.GOLD_REWARDED, values);
	}

	/**
	 * Fetch records that have <code>background_image_name IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByBackgroundImageName(String... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.BACKGROUND_IMAGE_NAME, values);
	}

	/**
	 * Fetch records that have <code>prize_image_name IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByPrizeImageName(String... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.PRIZE_IMAGE_NAME, values);
	}

	/**
	 * Fetch records that have <code>blue IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByBlue(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.BLUE, values);
	}

	/**
	 * Fetch records that have <code>green IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByGreen(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.GREEN, values);
	}

	/**
	 * Fetch records that have <code>red IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.TournamentRewardConfig> fetchByRed(Integer... values) {
		return fetch(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.RED, values);
	}
}
