/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.QuestForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IQuestForUser;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "quest_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"user_id", "quest_id"})
})
public class QuestForUserRecord extends UpdatableRecordImpl<QuestForUserRecord> implements Record4<String, Integer, Byte, Byte>, IQuestForUser {

	private static final long serialVersionUID = -134119574;

	/**
	 * Setter for <code>mobsters.quest_for_user.user_id</code>.
	 */
	@Override
	public QuestForUserRecord setUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.quest_for_user.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.quest_for_user.quest_id</code>.
	 */
	@Override
	public QuestForUserRecord setQuestId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.quest_for_user.quest_id</code>.
	 */
	@Column(name = "quest_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getQuestId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.quest_for_user.is_redeemed</code>.
	 */
	@Override
	public QuestForUserRecord setIsRedeemed(Byte value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.quest_for_user.is_redeemed</code>.
	 */
	@Column(name = "is_redeemed", precision = 3)
	@Override
	public Byte getIsRedeemed() {
		return (Byte) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.quest_for_user.is_complete</code>.
	 */
	@Override
	public QuestForUserRecord setIsComplete(Byte value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.quest_for_user.is_complete</code>.
	 */
	@Column(name = "is_complete", nullable = false, precision = 3)
	@NotNull
	@Override
	public Byte getIsComplete() {
		return (Byte) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, Byte, Byte> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, Byte, Byte> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return QuestForUser.QUEST_FOR_USER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return QuestForUser.QUEST_FOR_USER.QUEST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field3() {
		return QuestForUser.QUEST_FOR_USER.IS_REDEEMED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field4() {
		return QuestForUser.QUEST_FOR_USER.IS_COMPLETE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getQuestId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value3() {
		return getIsRedeemed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value4() {
		return getIsComplete();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestForUserRecord value1(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestForUserRecord value2(Integer value) {
		setQuestId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestForUserRecord value3(Byte value) {
		setIsRedeemed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestForUserRecord value4(Byte value) {
		setIsComplete(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public QuestForUserRecord values(String value1, Integer value2, Byte value3, Byte value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IQuestForUser from) {
		setUserId(from.getUserId());
		setQuestId(from.getQuestId());
		setIsRedeemed(from.getIsRedeemed());
		setIsComplete(from.getIsComplete());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IQuestForUser> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached QuestForUserRecord
	 */
	public QuestForUserRecord() {
		super(QuestForUser.QUEST_FOR_USER);
	}

	/**
	 * Create a detached, initialised QuestForUserRecord
	 */
	public QuestForUserRecord(String userId, Integer questId, Byte isRedeemed, Byte isComplete) {
		super(QuestForUser.QUEST_FOR_USER);

		setValue(0, userId);
		setValue(1, questId);
		setValue(2, isRedeemed);
		setValue(3, isComplete);
	}
}
