/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.ProfanityConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfanityConfig extends TableImpl<ProfanityConfigRecord> {

	private static final long serialVersionUID = 1214780884;

	/**
	 * The reference instance of <code>mobsters.profanity_config</code>
	 */
	public static final ProfanityConfig PROFANITY_CONFIG = new ProfanityConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProfanityConfigRecord> getRecordType() {
		return ProfanityConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.profanity_config.term</code>.
	 */
	public final TableField<ProfanityConfigRecord, String> TERM = createField("term", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * Create a <code>mobsters.profanity_config</code> table reference
	 */
	public ProfanityConfig() {
		this("profanity_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.profanity_config</code> table reference
	 */
	public ProfanityConfig(String alias) {
		this(alias, PROFANITY_CONFIG);
	}

	private ProfanityConfig(String alias, Table<ProfanityConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProfanityConfig(String alias, Table<ProfanityConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProfanityConfigRecord> getPrimaryKey() {
		return Keys.KEY_PROFANITY_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProfanityConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<ProfanityConfigRecord>>asList(Keys.KEY_PROFANITY_CONFIG_PRIMARY, Keys.KEY_PROFANITY_CONFIG_WORD_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProfanityConfig as(String alias) {
		return new ProfanityConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProfanityConfig rename(String name) {
		return new ProfanityConfig(name, null);
	}
}
