/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniEventTimetableConfig;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_event_timetable_config", schema = "mobsters")
public class MiniEventTimetableConfig implements IMiniEventTimetableConfig {

	private static final long serialVersionUID = 799751789;

	private Integer   id;
	private Integer   miniEventId;
	private Timestamp startTime;
	private Timestamp endTime;

	public MiniEventTimetableConfig() {}

	public MiniEventTimetableConfig(MiniEventTimetableConfig value) {
		this.id = value.id;
		this.miniEventId = value.miniEventId;
		this.startTime = value.startTime;
		this.endTime = value.endTime;
	}

	public MiniEventTimetableConfig(
		Integer   id,
		Integer   miniEventId,
		Timestamp startTime,
		Timestamp endTime
	) {
		this.id = id;
		this.miniEventId = miniEventId;
		this.startTime = startTime;
		this.endTime = endTime;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public MiniEventTimetableConfig setId(Integer id) {
		this.id = id;
		return this;
	}

	@Column(name = "mini_event_id", precision = 10)
	@Override
	public Integer getMiniEventId() {
		return this.miniEventId;
	}

	@Override
	public MiniEventTimetableConfig setMiniEventId(Integer miniEventId) {
		this.miniEventId = miniEventId;
		return this;
	}

	@Column(name = "start_time")
	@Override
	public Timestamp getStartTime() {
		return this.startTime;
	}

	@Override
	public MiniEventTimetableConfig setStartTime(Timestamp startTime) {
		this.startTime = startTime;
		return this;
	}

	@Column(name = "end_time")
	@Override
	public Timestamp getEndTime() {
		return this.endTime;
	}

	@Override
	public MiniEventTimetableConfig setEndTime(Timestamp endTime) {
		this.endTime = endTime;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniEventTimetableConfig from) {
		setId(from.getId());
		setMiniEventId(from.getMiniEventId());
		setStartTime(from.getStartTime());
		setEndTime(from.getEndTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniEventTimetableConfig> E into(E into) {
		into.from(this);
		return into;
	}
}
