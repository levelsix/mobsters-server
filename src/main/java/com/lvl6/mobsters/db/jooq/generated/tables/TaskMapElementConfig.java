/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.TaskMapElementConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskMapElementConfig extends TableImpl<TaskMapElementConfigRecord> {

	private static final long serialVersionUID = 794712722;

	/**
	 * The reference instance of <code>mobsters.task_map_element_config</code>
	 */
	public static final TaskMapElementConfig TASK_MAP_ELEMENT_CONFIG = new TaskMapElementConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TaskMapElementConfigRecord> getRecordType() {
		return TaskMapElementConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.task_map_element_config.id</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.task_id</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.x_pos</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> X_POS = createField("x_pos", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.y_pos</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> Y_POS = createField("y_pos", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.element</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, String> ELEMENT = createField("element", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.is_boss</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Boolean> IS_BOSS = createField("is_boss", org.jooq.impl.SQLDataType.BIT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.boss_img_name</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, String> BOSS_IMG_NAME = createField("boss_img_name", org.jooq.impl.SQLDataType.VARCHAR.length(75), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.item_drop_id</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> ITEM_DROP_ID = createField("item_drop_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.section_name</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, String> SECTION_NAME = createField("section_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.cash_reward</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> CASH_REWARD = createField("cash_reward", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.oil_reward</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> OIL_REWARD = createField("oil_reward", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.character_img_name</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, String> CHARACTER_IMG_NAME = createField("character_img_name", org.jooq.impl.SQLDataType.VARCHAR.length(75), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.char_vert_pixel_offset</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> CHAR_VERT_PIXEL_OFFSET = createField("char_vert_pixel_offset", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.char_horiz_pixel_offset</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> CHAR_HORIZ_PIXEL_OFFSET = createField("char_horiz_pixel_offset", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.char_scale_factor</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Double> CHAR_SCALE_FACTOR = createField("char_scale_factor", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.is_fake</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Boolean> IS_FAKE = createField("is_fake", org.jooq.impl.SQLDataType.BIT, this, "");

	/**
	 * The column <code>mobsters.task_map_element_config.strength</code>.
	 */
	public final TableField<TaskMapElementConfigRecord, Integer> STRENGTH = createField("strength", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.task_map_element_config</code> table reference
	 */
	public TaskMapElementConfig() {
		this("task_map_element_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.task_map_element_config</code> table reference
	 */
	public TaskMapElementConfig(String alias) {
		this(alias, TASK_MAP_ELEMENT_CONFIG);
	}

	private TaskMapElementConfig(String alias, Table<TaskMapElementConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private TaskMapElementConfig(String alias, Table<TaskMapElementConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TaskMapElementConfigRecord> getPrimaryKey() {
		return Keys.KEY_TASK_MAP_ELEMENT_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TaskMapElementConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<TaskMapElementConfigRecord>>asList(Keys.KEY_TASK_MAP_ELEMENT_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskMapElementConfig as(String alias) {
		return new TaskMapElementConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TaskMapElementConfig rename(String name) {
		return new TaskMapElementConfig(name, null);
	}
}
