/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.StructureLabConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IStructureLabConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "structure_lab_config", schema = "mobsters")
public class StructureLabConfigRecord extends UpdatableRecordImpl<StructureLabConfigRecord> implements Record3<Integer, Byte, Double>, IStructureLabConfig {

	private static final long serialVersionUID = 1252529967;

	/**
	 * Setter for <code>mobsters.structure_lab_config.struct_id</code>.
	 */
	@Override
	public StructureLabConfigRecord setStructId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_lab_config.struct_id</code>.
	 */
	@Id
	@Column(name = "struct_id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getStructId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.structure_lab_config.queue_size</code>.
	 */
	@Override
	public StructureLabConfigRecord setQueueSize(Byte value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_lab_config.queue_size</code>.
	 */
	@Column(name = "queue_size", nullable = false, precision = 3)
	@NotNull
	@Override
	public Byte getQueueSize() {
		return (Byte) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.structure_lab_config.points_multiplier</code>.
	 */
	@Override
	public StructureLabConfigRecord setPointsMultiplier(Double value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_lab_config.points_multiplier</code>.
	 */
	@Column(name = "points_multiplier", precision = 12)
	@Override
	public Double getPointsMultiplier() {
		return (Double) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Byte, Double> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Byte, Double> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return StructureLabConfig.STRUCTURE_LAB_CONFIG.STRUCT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field2() {
		return StructureLabConfig.STRUCTURE_LAB_CONFIG.QUEUE_SIZE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field3() {
		return StructureLabConfig.STRUCTURE_LAB_CONFIG.POINTS_MULTIPLIER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getStructId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value2() {
		return getQueueSize();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value3() {
		return getPointsMultiplier();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureLabConfigRecord value1(Integer value) {
		setStructId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureLabConfigRecord value2(Byte value) {
		setQueueSize(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureLabConfigRecord value3(Double value) {
		setPointsMultiplier(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureLabConfigRecord values(Integer value1, Byte value2, Double value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IStructureLabConfig from) {
		setStructId(from.getStructId());
		setQueueSize(from.getQueueSize());
		setPointsMultiplier(from.getPointsMultiplier());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IStructureLabConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StructureLabConfigRecord
	 */
	public StructureLabConfigRecord() {
		super(StructureLabConfig.STRUCTURE_LAB_CONFIG);
	}

	/**
	 * Create a detached, initialised StructureLabConfigRecord
	 */
	public StructureLabConfigRecord(Integer structId, Byte queueSize, Double pointsMultiplier) {
		super(StructureLabConfig.STRUCTURE_LAB_CONFIG);

		setValue(0, structId);
		setValue(1, queueSize);
		setValue(2, pointsMultiplier);
	}
}
