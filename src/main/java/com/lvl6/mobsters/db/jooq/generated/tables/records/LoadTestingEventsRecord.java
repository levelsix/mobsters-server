/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.LoadTestingEvents;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ILoadTestingEvents;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "load_testing_events", schema = "mobsters")
public class LoadTestingEventsRecord extends UpdatableRecordImpl<LoadTestingEventsRecord> implements Record5<UInteger, String, Timestamp, UInteger, byte[]>, ILoadTestingEvents {

	private static final long serialVersionUID = -675946573;

	/**
	 * Setter for <code>mobsters.load_testing_events.id</code>.
	 */
	@Override
	public LoadTestingEventsRecord setId(UInteger value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.load_testing_events.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public UInteger getId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.load_testing_events.user_id</code>.
	 */
	@Override
	public LoadTestingEventsRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.load_testing_events.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.load_testing_events.log_time</code>.
	 */
	@Override
	public LoadTestingEventsRecord setLogTime(Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.load_testing_events.log_time</code>.
	 */
	@Column(name = "log_time", nullable = false)
	@NotNull
	@Override
	public Timestamp getLogTime() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.load_testing_events.event_type</code>.
	 */
	@Override
	public LoadTestingEventsRecord setEventType(UInteger value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.load_testing_events.event_type</code>.
	 */
	@Column(name = "event_type", nullable = false, precision = 10)
	@NotNull
	@Override
	public UInteger getEventType() {
		return (UInteger) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.load_testing_events.event_bytes</code>.
	 */
	@Override
	public LoadTestingEventsRecord setEventBytes(byte[] value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.load_testing_events.event_bytes</code>.
	 */
	@Column(name = "event_bytes", nullable = false, length = 65535)
	@NotNull
	@Override
	public byte[] getEventBytes() {
		return (byte[]) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<UInteger, String, Timestamp, UInteger, byte[]> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<UInteger, String, Timestamp, UInteger, byte[]> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return LoadTestingEvents.LOAD_TESTING_EVENTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return LoadTestingEvents.LOAD_TESTING_EVENTS.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return LoadTestingEvents.LOAD_TESTING_EVENTS.LOG_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field4() {
		return LoadTestingEvents.LOAD_TESTING_EVENTS.EVENT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field5() {
		return LoadTestingEvents.LOAD_TESTING_EVENTS.EVENT_BYTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getLogTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value4() {
		return getEventType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value5() {
		return getEventBytes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoadTestingEventsRecord value1(UInteger value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoadTestingEventsRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoadTestingEventsRecord value3(Timestamp value) {
		setLogTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoadTestingEventsRecord value4(UInteger value) {
		setEventType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoadTestingEventsRecord value5(byte[] value) {
		setEventBytes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LoadTestingEventsRecord values(UInteger value1, String value2, Timestamp value3, UInteger value4, byte[] value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ILoadTestingEvents from) {
		setId(from.getId());
		setUserId(from.getUserId());
		setLogTime(from.getLogTime());
		setEventType(from.getEventType());
		setEventBytes(from.getEventBytes());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ILoadTestingEvents> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LoadTestingEventsRecord
	 */
	public LoadTestingEventsRecord() {
		super(LoadTestingEvents.LOAD_TESTING_EVENTS);
	}

	/**
	 * Create a detached, initialised LoadTestingEventsRecord
	 */
	public LoadTestingEventsRecord(UInteger id, String userId, Timestamp logTime, UInteger eventType, byte[] eventBytes) {
		super(LoadTestingEvents.LOAD_TESTING_EVENTS);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, logTime);
		setValue(3, eventType);
		setValue(4, eventBytes);
	}
}
