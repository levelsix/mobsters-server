/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.Temp1;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITemp1;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "temp1", schema = "mobsters")
public class Temp1Record extends TableRecordImpl<Temp1Record> implements Record2<Long, UInteger>, ITemp1 {

	private static final long serialVersionUID = 1885360181;

	/**
	 * Setter for <code>mobsters.temp1.id</code>.
	 */
	@Override
	public Temp1Record setId(Long value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.temp1.id</code>.
	 */
	@Column(name = "id", precision = 19)
	@Override
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.temp1.monster_id</code>.
	 */
	@Override
	public Temp1Record setMonsterId(UInteger value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.temp1.monster_id</code>.
	 */
	@Column(name = "monster_id", precision = 10)
	@Override
	public UInteger getMonsterId() {
		return (UInteger) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Long, UInteger> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Long, UInteger> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Temp1.TEMP1.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field2() {
		return Temp1.TEMP1.MONSTER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value2() {
		return getMonsterId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Temp1Record value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Temp1Record value2(UInteger value) {
		setMonsterId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Temp1Record values(Long value1, UInteger value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITemp1 from) {
		setId(from.getId());
		setMonsterId(from.getMonsterId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITemp1> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached Temp1Record
	 */
	public Temp1Record() {
		super(Temp1.TEMP1);
	}

	/**
	 * Create a detached, initialised Temp1Record
	 */
	public Temp1Record(Long id, UInteger monsterId) {
		super(Temp1.TEMP1);

		setValue(0, id);
		setValue(1, monsterId);
	}
}
