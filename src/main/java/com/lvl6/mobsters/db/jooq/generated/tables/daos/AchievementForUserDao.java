/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.daos;


import com.lvl6.mobsters.db.jooq.generated.tables.AchievementForUser;
import com.lvl6.mobsters.db.jooq.generated.tables.records.AchievementForUserRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementForUserDao extends DAOImpl<AchievementForUserRecord, com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser, Record2<String, Integer>> {

	/**
	 * Create a new AchievementForUserDao without any configuration
	 */
	public AchievementForUserDao() {
		super(AchievementForUser.ACHIEVEMENT_FOR_USER, com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser.class);
	}

	/**
	 * Create a new AchievementForUserDao with an attached configuration
	 */
	public AchievementForUserDao(Configuration configuration) {
		super(AchievementForUser.ACHIEVEMENT_FOR_USER, com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<String, Integer> getId(com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser object) {
		return compositeKeyRecord(object.getUserId(), object.getAchievementId());
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByUserId(String... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.USER_ID, values);
	}

	/**
	 * Fetch records that have <code>achievement_id IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByAchievementId(Integer... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.ACHIEVEMENT_ID, values);
	}

	/**
	 * Fetch records that have <code>progress IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByProgress(Integer... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.PROGRESS, values);
	}

	/**
	 * Fetch records that have <code>is_complete IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByIsComplete(Boolean... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.IS_COMPLETE, values);
	}

	/**
	 * Fetch records that have <code>time_completed IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByTimeCompleted(Timestamp... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.TIME_COMPLETED, values);
	}

	/**
	 * Fetch records that have <code>is_redeemed IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByIsRedeemed(Boolean... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.IS_REDEEMED, values);
	}

	/**
	 * Fetch records that have <code>time_redeemed IN (values)</code>
	 */
	public List<com.lvl6.mobsters.db.jooq.generated.tables.pojos.AchievementForUser> fetchByTimeRedeemed(Timestamp... values) {
		return fetch(AchievementForUser.ACHIEVEMENT_FOR_USER.TIME_REDEEMED, values);
	}
}
