/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MonsterForUserDeleted;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterForUserDeleted;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_for_user_deleted", schema = "mobsters")
public class MonsterForUserDeletedRecord extends UpdatableRecordImpl<MonsterForUserDeletedRecord> implements Record14<String, String, Integer, Integer, Byte, Integer, Byte, Boolean, Timestamp, Byte, String, String, String, Timestamp>, IMonsterForUserDeleted {

	private static final long serialVersionUID = -1374959755;

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.monster_for_user_id</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setMonsterForUserId(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.monster_for_user_id</code>.
	 */
	@Id
	@Column(name = "monster_for_user_id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getMonsterForUserId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.user_id</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setUserId(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.user_id</code>.
	 */
	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getUserId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.monster_id</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setMonsterId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.monster_id</code>.
	 */
	@Column(name = "monster_id", precision = 10)
	@Override
	public Integer getMonsterId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.current_experience</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setCurrentExperience(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.current_experience</code>.
	 */
	@Column(name = "current_experience", precision = 10)
	@Override
	public Integer getCurrentExperience() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.current_level</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setCurrentLevel(Byte value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.current_level</code>.
	 */
	@Column(name = "current_level", precision = 3)
	@Override
	public Byte getCurrentLevel() {
		return (Byte) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.current_health</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setCurrentHealth(Integer value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.current_health</code>.
	 */
	@Column(name = "current_health", precision = 10)
	@Override
	public Integer getCurrentHealth() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.num_pieces</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setNumPieces(Byte value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.num_pieces</code>.
	 */
	@Column(name = "num_pieces", precision = 3)
	@Override
	public Byte getNumPieces() {
		return (Byte) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.is_complete</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setIsComplete(Boolean value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.is_complete</code>.
	 */
	@Column(name = "is_complete", precision = 1)
	@Override
	public Boolean getIsComplete() {
		return (Boolean) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.combine_start_time</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setCombineStartTime(Timestamp value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.combine_start_time</code>.
	 */
	@Column(name = "combine_start_time")
	@Override
	public Timestamp getCombineStartTime() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.team_slot_num</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setTeamSlotNum(Byte value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.team_slot_num</code>.
	 */
	@Column(name = "team_slot_num", precision = 3)
	@Override
	public Byte getTeamSlotNum() {
		return (Byte) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.source_of_pieces</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setSourceOfPieces(String value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.source_of_pieces</code>.
	 */
	@Column(name = "source_of_pieces", length = 65535)
	@Size(max = 65535)
	@Override
	public String getSourceOfPieces() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.deleted_reason</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setDeletedReason(String value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.deleted_reason</code>.
	 */
	@Column(name = "deleted_reason", length = 45)
	@Size(max = 45)
	@Override
	public String getDeletedReason() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.details</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setDetails(String value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.details</code>.
	 */
	@Column(name = "details", length = 65535)
	@Size(max = 65535)
	@Override
	public String getDetails() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>mobsters.monster_for_user_deleted.deleted_time</code>.
	 */
	@Override
	public MonsterForUserDeletedRecord setDeletedTime(Timestamp value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.monster_for_user_deleted.deleted_time</code>.
	 */
	@Column(name = "deleted_time")
	@Override
	public Timestamp getDeletedTime() {
		return (Timestamp) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<String, String, Integer, Integer, Byte, Integer, Byte, Boolean, Timestamp, Byte, String, String, String, Timestamp> fieldsRow() {
		return (Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<String, String, Integer, Integer, Byte, Integer, Byte, Boolean, Timestamp, Byte, String, String, String, Timestamp> valuesRow() {
		return (Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.MONSTER_FOR_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.MONSTER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.CURRENT_EXPERIENCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field5() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.CURRENT_LEVEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.CURRENT_HEALTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field7() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.NUM_PIECES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field8() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.IS_COMPLETE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.COMBINE_START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field10() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.TEAM_SLOT_NUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.SOURCE_OF_PIECES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.DELETED_REASON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.DETAILS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field14() {
		return MonsterForUserDeleted.MONSTER_FOR_USER_DELETED.DELETED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getMonsterForUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getMonsterId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCurrentExperience();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value5() {
		return getCurrentLevel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getCurrentHealth();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value7() {
		return getNumPieces();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value8() {
		return getIsComplete();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getCombineStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value10() {
		return getTeamSlotNum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getSourceOfPieces();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getDeletedReason();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getDetails();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value14() {
		return getDeletedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value1(String value) {
		setMonsterForUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value2(String value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value3(Integer value) {
		setMonsterId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value4(Integer value) {
		setCurrentExperience(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value5(Byte value) {
		setCurrentLevel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value6(Integer value) {
		setCurrentHealth(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value7(Byte value) {
		setNumPieces(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value8(Boolean value) {
		setIsComplete(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value9(Timestamp value) {
		setCombineStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value10(Byte value) {
		setTeamSlotNum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value11(String value) {
		setSourceOfPieces(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value12(String value) {
		setDeletedReason(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value13(String value) {
		setDetails(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord value14(Timestamp value) {
		setDeletedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForUserDeletedRecord values(String value1, String value2, Integer value3, Integer value4, Byte value5, Integer value6, Byte value7, Boolean value8, Timestamp value9, Byte value10, String value11, String value12, String value13, Timestamp value14) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterForUserDeleted from) {
		setMonsterForUserId(from.getMonsterForUserId());
		setUserId(from.getUserId());
		setMonsterId(from.getMonsterId());
		setCurrentExperience(from.getCurrentExperience());
		setCurrentLevel(from.getCurrentLevel());
		setCurrentHealth(from.getCurrentHealth());
		setNumPieces(from.getNumPieces());
		setIsComplete(from.getIsComplete());
		setCombineStartTime(from.getCombineStartTime());
		setTeamSlotNum(from.getTeamSlotNum());
		setSourceOfPieces(from.getSourceOfPieces());
		setDeletedReason(from.getDeletedReason());
		setDetails(from.getDetails());
		setDeletedTime(from.getDeletedTime());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterForUserDeleted> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MonsterForUserDeletedRecord
	 */
	public MonsterForUserDeletedRecord() {
		super(MonsterForUserDeleted.MONSTER_FOR_USER_DELETED);
	}

	/**
	 * Create a detached, initialised MonsterForUserDeletedRecord
	 */
	public MonsterForUserDeletedRecord(String monsterForUserId, String userId, Integer monsterId, Integer currentExperience, Byte currentLevel, Integer currentHealth, Byte numPieces, Boolean isComplete, Timestamp combineStartTime, Byte teamSlotNum, String sourceOfPieces, String deletedReason, String details, Timestamp deletedTime) {
		super(MonsterForUserDeleted.MONSTER_FOR_USER_DELETED);

		setValue(0, monsterForUserId);
		setValue(1, userId);
		setValue(2, monsterId);
		setValue(3, currentExperience);
		setValue(4, currentLevel);
		setValue(5, currentHealth);
		setValue(6, numPieces);
		setValue(7, isComplete);
		setValue(8, combineStartTime);
		setValue(9, teamSlotNum);
		setValue(10, sourceOfPieces);
		setValue(11, deletedReason);
		setValue(12, details);
		setValue(13, deletedTime);
	}
}
