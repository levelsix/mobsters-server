/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.ObstacleConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IObstacleConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "obstacle_config", schema = "mobsters")
public class ObstacleConfigRecord extends UpdatableRecordImpl<ObstacleConfigRecord> implements Record14<Integer, String, String, UInteger, UInteger, UByte, UByte, String, Double, String, Double, String, Double, Double>, IObstacleConfig {

	private static final long serialVersionUID = -2116191236;

	/**
	 * Setter for <code>mobsters.obstacle_config.id</code>.
	 */
	@Override
	public ObstacleConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.name</code>.
	 */
	@Override
	public ObstacleConfigRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.name</code>.
	 */
	@Column(name = "name", length = 45)
	@Size(max = 45)
	@Override
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.removal_cost_type</code>.
	 */
	@Override
	public ObstacleConfigRecord setRemovalCostType(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.removal_cost_type</code>.
	 */
	@Column(name = "removal_cost_type", length = 45)
	@Size(max = 45)
	@Override
	public String getRemovalCostType() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.cost</code>.
	 */
	@Override
	public ObstacleConfigRecord setCost(UInteger value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.cost</code>.
	 */
	@Column(name = "cost", precision = 7)
	@Override
	public UInteger getCost() {
		return (UInteger) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.seconds_to_remove</code>.
	 */
	@Override
	public ObstacleConfigRecord setSecondsToRemove(UInteger value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.seconds_to_remove</code>.
	 */
	@Column(name = "seconds_to_remove", precision = 7)
	@Override
	public UInteger getSecondsToRemove() {
		return (UInteger) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.width</code>.
	 */
	@Override
	public ObstacleConfigRecord setWidth(UByte value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.width</code>.
	 */
	@Column(name = "width", precision = 3)
	@Override
	public UByte getWidth() {
		return (UByte) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.height</code>.
	 */
	@Override
	public ObstacleConfigRecord setHeight(UByte value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.height</code>.
	 */
	@Column(name = "height", precision = 3)
	@Override
	public UByte getHeight() {
		return (UByte) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.img_name</code>.
	 */
	@Override
	public ObstacleConfigRecord setImgName(String value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.img_name</code>.
	 */
	@Column(name = "img_name", length = 45)
	@Size(max = 45)
	@Override
	public String getImgName() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.img_vertical_pixel_offset</code>.
	 */
	@Override
	public ObstacleConfigRecord setImgVerticalPixelOffset(Double value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.img_vertical_pixel_offset</code>.
	 */
	@Column(name = "img_vertical_pixel_offset", precision = 12)
	@Override
	public Double getImgVerticalPixelOffset() {
		return (Double) getValue(8);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.description</code>.
	 */
	@Override
	public ObstacleConfigRecord setDescription(String value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.description</code>.
	 */
	@Column(name = "description", length = 45)
	@Size(max = 45)
	@Override
	public String getDescription() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.chance_to_appear</code>.
	 */
	@Override
	public ObstacleConfigRecord setChanceToAppear(Double value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.chance_to_appear</code>.
	 */
	@Column(name = "chance_to_appear", precision = 12)
	@Override
	public Double getChanceToAppear() {
		return (Double) getValue(10);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.shadow_img_name</code>.
	 */
	@Override
	public ObstacleConfigRecord setShadowImgName(String value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.shadow_img_name</code>.
	 */
	@Column(name = "shadow_img_name", length = 45)
	@Size(max = 45)
	@Override
	public String getShadowImgName() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.shadow_vertical_offset</code>.
	 */
	@Override
	public ObstacleConfigRecord setShadowVerticalOffset(Double value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.shadow_vertical_offset</code>.
	 */
	@Column(name = "shadow_vertical_offset", precision = 12)
	@Override
	public Double getShadowVerticalOffset() {
		return (Double) getValue(12);
	}

	/**
	 * Setter for <code>mobsters.obstacle_config.shadow_horizontal_offset</code>.
	 */
	@Override
	public ObstacleConfigRecord setShadowHorizontalOffset(Double value) {
		setValue(13, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.obstacle_config.shadow_horizontal_offset</code>.
	 */
	@Column(name = "shadow_horizontal_offset", precision = 12)
	@Override
	public Double getShadowHorizontalOffset() {
		return (Double) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<Integer, String, String, UInteger, UInteger, UByte, UByte, String, Double, String, Double, String, Double, Double> fieldsRow() {
		return (Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<Integer, String, String, UInteger, UInteger, UByte, UByte, String, Double, String, Double, String, Double, Double> valuesRow() {
		return (Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ObstacleConfig.OBSTACLE_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ObstacleConfig.OBSTACLE_CONFIG.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return ObstacleConfig.OBSTACLE_CONFIG.REMOVAL_COST_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field4() {
		return ObstacleConfig.OBSTACLE_CONFIG.COST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field5() {
		return ObstacleConfig.OBSTACLE_CONFIG.SECONDS_TO_REMOVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field6() {
		return ObstacleConfig.OBSTACLE_CONFIG.WIDTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field7() {
		return ObstacleConfig.OBSTACLE_CONFIG.HEIGHT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return ObstacleConfig.OBSTACLE_CONFIG.IMG_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field9() {
		return ObstacleConfig.OBSTACLE_CONFIG.IMG_VERTICAL_PIXEL_OFFSET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return ObstacleConfig.OBSTACLE_CONFIG.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field11() {
		return ObstacleConfig.OBSTACLE_CONFIG.CHANCE_TO_APPEAR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return ObstacleConfig.OBSTACLE_CONFIG.SHADOW_IMG_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field13() {
		return ObstacleConfig.OBSTACLE_CONFIG.SHADOW_VERTICAL_OFFSET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field14() {
		return ObstacleConfig.OBSTACLE_CONFIG.SHADOW_HORIZONTAL_OFFSET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getRemovalCostType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value4() {
		return getCost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value5() {
		return getSecondsToRemove();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value6() {
		return getWidth();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value7() {
		return getHeight();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getImgName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value9() {
		return getImgVerticalPixelOffset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value11() {
		return getChanceToAppear();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getShadowImgName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value13() {
		return getShadowVerticalOffset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value14() {
		return getShadowHorizontalOffset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value3(String value) {
		setRemovalCostType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value4(UInteger value) {
		setCost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value5(UInteger value) {
		setSecondsToRemove(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value6(UByte value) {
		setWidth(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value7(UByte value) {
		setHeight(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value8(String value) {
		setImgName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value9(Double value) {
		setImgVerticalPixelOffset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value10(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value11(Double value) {
		setChanceToAppear(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value12(String value) {
		setShadowImgName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value13(Double value) {
		setShadowVerticalOffset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord value14(Double value) {
		setShadowHorizontalOffset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ObstacleConfigRecord values(Integer value1, String value2, String value3, UInteger value4, UInteger value5, UByte value6, UByte value7, String value8, Double value9, String value10, Double value11, String value12, Double value13, Double value14) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IObstacleConfig from) {
		setId(from.getId());
		setName(from.getName());
		setRemovalCostType(from.getRemovalCostType());
		setCost(from.getCost());
		setSecondsToRemove(from.getSecondsToRemove());
		setWidth(from.getWidth());
		setHeight(from.getHeight());
		setImgName(from.getImgName());
		setImgVerticalPixelOffset(from.getImgVerticalPixelOffset());
		setDescription(from.getDescription());
		setChanceToAppear(from.getChanceToAppear());
		setShadowImgName(from.getShadowImgName());
		setShadowVerticalOffset(from.getShadowVerticalOffset());
		setShadowHorizontalOffset(from.getShadowHorizontalOffset());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IObstacleConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ObstacleConfigRecord
	 */
	public ObstacleConfigRecord() {
		super(ObstacleConfig.OBSTACLE_CONFIG);
	}

	/**
	 * Create a detached, initialised ObstacleConfigRecord
	 */
	public ObstacleConfigRecord(Integer id, String name, String removalCostType, UInteger cost, UInteger secondsToRemove, UByte width, UByte height, String imgName, Double imgVerticalPixelOffset, String description, Double chanceToAppear, String shadowImgName, Double shadowVerticalOffset, Double shadowHorizontalOffset) {
		super(ObstacleConfig.OBSTACLE_CONFIG);

		setValue(0, id);
		setValue(1, name);
		setValue(2, removalCostType);
		setValue(3, cost);
		setValue(4, secondsToRemove);
		setValue(5, width);
		setValue(6, height);
		setValue(7, imgName);
		setValue(8, imgVerticalPixelOffset);
		setValue(9, description);
		setValue(10, chanceToAppear);
		setValue(11, shadowImgName);
		setValue(12, shadowVerticalOffset);
		setValue(13, shadowHorizontalOffset);
	}
}
