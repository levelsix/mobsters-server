/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityElementConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityElementConfig extends TableImpl<CityElementConfigRecord> {

	private static final long serialVersionUID = -968665403;

	/**
	 * The reference instance of <code>mobsters.city_element_config</code>
	 */
	public static final CityElementConfig CITY_ELEMENT_CONFIG = new CityElementConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CityElementConfigRecord> getRecordType() {
		return CityElementConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.city_element_config.city_id</code>.
	 */
	public final TableField<CityElementConfigRecord, UInteger> CITY_ID = createField("city_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_element_config.asset_id</code>.
	 */
	public final TableField<CityElementConfigRecord, UInteger> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_element_config.elem_type</code>.
	 */
	public final TableField<CityElementConfigRecord, String> ELEM_TYPE = createField("elem_type", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_element_config.x_coordinate</code>.
	 */
	public final TableField<CityElementConfigRecord, Double> X_COORDINATE = createField("x_coordinate", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_element_config.y_coordinate</code>.
	 */
	public final TableField<CityElementConfigRecord, Double> Y_COORDINATE = createField("y_coordinate", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_element_config.x_length</code>.
	 */
	public final TableField<CityElementConfigRecord, Double> X_LENGTH = createField("x_length", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>mobsters.city_element_config.y_length</code>.
	 */
	public final TableField<CityElementConfigRecord, Double> Y_LENGTH = createField("y_length", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>mobsters.city_element_config.img_id_good</code>.
	 */
	public final TableField<CityElementConfigRecord, String> IMG_ID_GOOD = createField("img_id_good", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_element_config.orientation</code>.
	 */
	public final TableField<CityElementConfigRecord, String> ORIENTATION = createField("orientation", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.city_element_config.sprite_landing_coordinate_x</code>.
	 */
	public final TableField<CityElementConfigRecord, Double> SPRITE_LANDING_COORDINATE_X = createField("sprite_landing_coordinate_x", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>mobsters.city_element_config.sprite_landing_coordinate_y</code>.
	 */
	public final TableField<CityElementConfigRecord, Double> SPRITE_LANDING_COORDINATE_Y = createField("sprite_landing_coordinate_y", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * Create a <code>mobsters.city_element_config</code> table reference
	 */
	public CityElementConfig() {
		this("city_element_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.city_element_config</code> table reference
	 */
	public CityElementConfig(String alias) {
		this(alias, CITY_ELEMENT_CONFIG);
	}

	private CityElementConfig(String alias, Table<CityElementConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private CityElementConfig(String alias, Table<CityElementConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CityElementConfigRecord> getPrimaryKey() {
		return Keys.KEY_CITY_ELEMENT_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CityElementConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<CityElementConfigRecord>>asList(Keys.KEY_CITY_ELEMENT_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityElementConfig as(String alias) {
		return new CityElementConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CityElementConfig rename(String name) {
		return new CityElementConfig(name, null);
	}
}
