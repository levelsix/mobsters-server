/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.pojos;


import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterSnapshotForUser;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_snapshot_for_user", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "time_of_entry", "user_id"})
})
public class MonsterSnapshotForUser implements IMonsterSnapshotForUser {

	private static final long serialVersionUID = 487837012;

	private String  id;
	private String  timeOfEntry;
	private String  userId;
	private String  type;
	private String  idInTable;
	private String  monsterForUserId;
	private Integer monsterId;
	private Integer currentExp;
	private Integer currentLvl;
	private Integer currentHp;
	private Integer teamSlotNum;
	private Integer offSkillId;
	private Integer defSkillId;

	public MonsterSnapshotForUser() {}

	public MonsterSnapshotForUser(MonsterSnapshotForUser value) {
		this.id = value.id;
		this.timeOfEntry = value.timeOfEntry;
		this.userId = value.userId;
		this.type = value.type;
		this.idInTable = value.idInTable;
		this.monsterForUserId = value.monsterForUserId;
		this.monsterId = value.monsterId;
		this.currentExp = value.currentExp;
		this.currentLvl = value.currentLvl;
		this.currentHp = value.currentHp;
		this.teamSlotNum = value.teamSlotNum;
		this.offSkillId = value.offSkillId;
		this.defSkillId = value.defSkillId;
	}

	public MonsterSnapshotForUser(
		String  id,
		String  timeOfEntry,
		String  userId,
		String  type,
		String  idInTable,
		String  monsterForUserId,
		Integer monsterId,
		Integer currentExp,
		Integer currentLvl,
		Integer currentHp,
		Integer teamSlotNum,
		Integer offSkillId,
		Integer defSkillId
	) {
		this.id = id;
		this.timeOfEntry = timeOfEntry;
		this.userId = userId;
		this.type = type;
		this.idInTable = idInTable;
		this.monsterForUserId = monsterForUserId;
		this.monsterId = monsterId;
		this.currentExp = currentExp;
		this.currentLvl = currentLvl;
		this.currentHp = currentHp;
		this.teamSlotNum = teamSlotNum;
		this.offSkillId = offSkillId;
		this.defSkillId = defSkillId;
	}

	@Column(name = "id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getId() {
		return this.id;
	}

	@Override
	public MonsterSnapshotForUser setId(String id) {
		this.id = id;
		return this;
	}

	@Column(name = "time_of_entry", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getTimeOfEntry() {
		return this.timeOfEntry;
	}

	@Override
	public MonsterSnapshotForUser setTimeOfEntry(String timeOfEntry) {
		this.timeOfEntry = timeOfEntry;
		return this;
	}

	@Column(name = "user_id", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getUserId() {
		return this.userId;
	}

	@Override
	public MonsterSnapshotForUser setUserId(String userId) {
		this.userId = userId;
		return this;
	}

	@Column(name = "type", length = 36)
	@Size(max = 36)
	@Override
	public String getType() {
		return this.type;
	}

	@Override
	public MonsterSnapshotForUser setType(String type) {
		this.type = type;
		return this;
	}

	@Column(name = "id_in_table", length = 36)
	@Size(max = 36)
	@Override
	public String getIdInTable() {
		return this.idInTable;
	}

	@Override
	public MonsterSnapshotForUser setIdInTable(String idInTable) {
		this.idInTable = idInTable;
		return this;
	}

	@Column(name = "monster_for_user_id", length = 36)
	@Size(max = 36)
	@Override
	public String getMonsterForUserId() {
		return this.monsterForUserId;
	}

	@Override
	public MonsterSnapshotForUser setMonsterForUserId(String monsterForUserId) {
		this.monsterForUserId = monsterForUserId;
		return this;
	}

	@Column(name = "monster_id", precision = 10)
	@Override
	public Integer getMonsterId() {
		return this.monsterId;
	}

	@Override
	public MonsterSnapshotForUser setMonsterId(Integer monsterId) {
		this.monsterId = monsterId;
		return this;
	}

	@Column(name = "current_exp", precision = 10)
	@Override
	public Integer getCurrentExp() {
		return this.currentExp;
	}

	@Override
	public MonsterSnapshotForUser setCurrentExp(Integer currentExp) {
		this.currentExp = currentExp;
		return this;
	}

	@Column(name = "current_lvl", precision = 10)
	@Override
	public Integer getCurrentLvl() {
		return this.currentLvl;
	}

	@Override
	public MonsterSnapshotForUser setCurrentLvl(Integer currentLvl) {
		this.currentLvl = currentLvl;
		return this;
	}

	@Column(name = "current_hp", precision = 10)
	@Override
	public Integer getCurrentHp() {
		return this.currentHp;
	}

	@Override
	public MonsterSnapshotForUser setCurrentHp(Integer currentHp) {
		this.currentHp = currentHp;
		return this;
	}

	@Column(name = "team_slot_num", precision = 10)
	@Override
	public Integer getTeamSlotNum() {
		return this.teamSlotNum;
	}

	@Override
	public MonsterSnapshotForUser setTeamSlotNum(Integer teamSlotNum) {
		this.teamSlotNum = teamSlotNum;
		return this;
	}

	@Column(name = "off_skill_id", precision = 10)
	@Override
	public Integer getOffSkillId() {
		return this.offSkillId;
	}

	@Override
	public MonsterSnapshotForUser setOffSkillId(Integer offSkillId) {
		this.offSkillId = offSkillId;
		return this;
	}

	@Column(name = "def_skill_id", precision = 10)
	@Override
	public Integer getDefSkillId() {
		return this.defSkillId;
	}

	@Override
	public MonsterSnapshotForUser setDefSkillId(Integer defSkillId) {
		this.defSkillId = defSkillId;
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMonsterSnapshotForUser from) {
		setId(from.getId());
		setTimeOfEntry(from.getTimeOfEntry());
		setUserId(from.getUserId());
		setType(from.getType());
		setIdInTable(from.getIdInTable());
		setMonsterForUserId(from.getMonsterForUserId());
		setMonsterId(from.getMonsterId());
		setCurrentExp(from.getCurrentExp());
		setCurrentLvl(from.getCurrentLvl());
		setCurrentHp(from.getCurrentHp());
		setTeamSlotNum(from.getTeamSlotNum());
		setOffSkillId(from.getOffSkillId());
		setDefSkillId(from.getDefSkillId());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMonsterSnapshotForUser> E into(E into) {
		into.from(this);
		return into;
	}
}
