/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.StructureResearchHouseConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IStructureResearchHouseConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "structure_research_house_config", schema = "mobsters")
public class StructureResearchHouseConfigRecord extends UpdatableRecordImpl<StructureResearchHouseConfigRecord> implements Record2<Integer, Double>, IStructureResearchHouseConfig {

	private static final long serialVersionUID = 1649834292;

	/**
	 * Setter for <code>mobsters.structure_research_house_config.struct_id</code>.
	 */
	@Override
	public StructureResearchHouseConfigRecord setStructId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_research_house_config.struct_id</code>.
	 */
	@Id
	@Column(name = "struct_id", unique = true, nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getStructId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.structure_research_house_config.research_speed_multiplier</code>.
	 */
	@Override
	public StructureResearchHouseConfigRecord setResearchSpeedMultiplier(Double value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.structure_research_house_config.research_speed_multiplier</code>.
	 */
	@Column(name = "research_speed_multiplier", precision = 12)
	@Override
	public Double getResearchSpeedMultiplier() {
		return (Double) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, Double> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, Double> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return StructureResearchHouseConfig.STRUCTURE_RESEARCH_HOUSE_CONFIG.STRUCT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field2() {
		return StructureResearchHouseConfig.STRUCTURE_RESEARCH_HOUSE_CONFIG.RESEARCH_SPEED_MULTIPLIER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getStructId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value2() {
		return getResearchSpeedMultiplier();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureResearchHouseConfigRecord value1(Integer value) {
		setStructId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureResearchHouseConfigRecord value2(Double value) {
		setResearchSpeedMultiplier(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StructureResearchHouseConfigRecord values(Integer value1, Double value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IStructureResearchHouseConfig from) {
		setStructId(from.getStructId());
		setResearchSpeedMultiplier(from.getResearchSpeedMultiplier());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IStructureResearchHouseConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StructureResearchHouseConfigRecord
	 */
	public StructureResearchHouseConfigRecord() {
		super(StructureResearchHouseConfig.STRUCTURE_RESEARCH_HOUSE_CONFIG);
	}

	/**
	 * Create a detached, initialised StructureResearchHouseConfigRecord
	 */
	public StructureResearchHouseConfigRecord(Integer structId, Double researchSpeedMultiplier) {
		super(StructureResearchHouseConfig.STRUCTURE_RESEARCH_HOUSE_CONFIG);

		setValue(0, structId);
		setValue(1, researchSpeedMultiplier);
	}
}
