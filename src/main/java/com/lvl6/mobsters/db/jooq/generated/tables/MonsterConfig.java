/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterConfig extends TableImpl<MonsterConfigRecord> {

	private static final long serialVersionUID = 2038537751;

	/**
	 * The reference instance of <code>mobsters.monster_config</code>
	 */
	public static final MonsterConfig MONSTER_CONFIG = new MonsterConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MonsterConfigRecord> getRecordType() {
		return MonsterConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.monster_config.id</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_config.evolution_group</code>. This is used to group and order monsters in an evolution line.
	 */
	public final TableField<MonsterConfigRecord, String> EVOLUTION_GROUP = createField("evolution_group", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "This is used to group and order monsters in an evolution line.");

	/**
	 * The column <code>mobsters.monster_config.monster_group</code>. This is to classify, group together different monsters.
	 */
	public final TableField<MonsterConfigRecord, String> MONSTER_GROUP = createField("monster_group", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "This is to classify, group together different monsters.");

	/**
	 * The column <code>mobsters.monster_config.quality</code>. common, uncommon, etc.
	 */
	public final TableField<MonsterConfigRecord, String> QUALITY = createField("quality", org.jooq.impl.SQLDataType.VARCHAR.length(15).defaulted(true), this, "common, uncommon, etc.");

	/**
	 * The column <code>mobsters.monster_config.evolution_level</code>.
	 */
	public final TableField<MonsterConfigRecord, UByte> EVOLUTION_LEVEL = createField("evolution_level", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.display_name</code>.
	 */
	public final TableField<MonsterConfigRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.VARCHAR.length(45).defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.element</code>.
	 */
	public final TableField<MonsterConfigRecord, String> ELEMENT = createField("element", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>mobsters.monster_config.image_prefix</code>.
	 */
	public final TableField<MonsterConfigRecord, String> IMAGE_PREFIX = createField("image_prefix", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.monster_config.num_puzzle_pieces</code>.
	 */
	public final TableField<MonsterConfigRecord, UByte> NUM_PUZZLE_PIECES = createField("num_puzzle_pieces", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.minutes_to_combine_pieces</code>.
	 */
	public final TableField<MonsterConfigRecord, UInteger> MINUTES_TO_COMBINE_PIECES = createField("minutes_to_combine_pieces", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.max_level</code>.
	 */
	public final TableField<MonsterConfigRecord, UByte> MAX_LEVEL = createField("max_level", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.evolution_monster_id</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> EVOLUTION_MONSTER_ID = createField("evolution_monster_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_config.evolution_catalyst_monster_id</code>.
	 */
	public final TableField<MonsterConfigRecord, UInteger> EVOLUTION_CATALYST_MONSTER_ID = createField("evolution_catalyst_monster_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

	/**
	 * The column <code>mobsters.monster_config.minutes_to_evolve</code>.
	 */
	public final TableField<MonsterConfigRecord, UInteger> MINUTES_TO_EVOLVE = createField("minutes_to_evolve", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.num_evolution_catalysts</code>. Required amount of evolution_catalyst_monster_ids
	 */
	public final TableField<MonsterConfigRecord, UByte> NUM_EVOLUTION_CATALYSTS = createField("num_evolution_catalysts", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaulted(true), this, "Required amount of evolution_catalyst_monster_ids");

	/**
	 * The column <code>mobsters.monster_config.carrot_recruited</code>.
	 */
	public final TableField<MonsterConfigRecord, String> CARROT_RECRUITED = createField("carrot_recruited", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.monster_config.carrot_defeated</code>.
	 */
	public final TableField<MonsterConfigRecord, String> CARROT_DEFEATED = createField("carrot_defeated", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.monster_config.carrot_evolved</code>.
	 */
	public final TableField<MonsterConfigRecord, String> CARROT_EVOLVED = createField("carrot_evolved", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>mobsters.monster_config.description</code>.
	 */
	public final TableField<MonsterConfigRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mobsters.monster_config.evolution_cost</code>.
	 */
	public final TableField<MonsterConfigRecord, String> EVOLUTION_COST = createField("evolution_cost", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.monster_config.animation_type</code>.
	 */
	public final TableField<MonsterConfigRecord, String> ANIMATION_TYPE = createField("animation_type", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.monster_config.vertical_pixel_offset</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> VERTICAL_PIXEL_OFFSET = createField("vertical_pixel_offset", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_config.atk_sound_file</code>.
	 */
	public final TableField<MonsterConfigRecord, String> ATK_SOUND_FILE = createField("atk_sound_file", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.monster_config.atk_sound_animation_frame</code>. frame number
	 */
	public final TableField<MonsterConfigRecord, Integer> ATK_SOUND_ANIMATION_FRAME = createField("atk_sound_animation_frame", org.jooq.impl.SQLDataType.INTEGER, this, "frame number");

	/**
	 * The column <code>mobsters.monster_config.atk_animation_repeated_frames_start</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> ATK_ANIMATION_REPEATED_FRAMES_START = createField("atk_animation_repeated_frames_start", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_config.atk_animation_repeated_frames_end</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> ATK_ANIMATION_REPEATED_FRAMES_END = createField("atk_animation_repeated_frames_end", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_config.short_name</code>.
	 */
	public final TableField<MonsterConfigRecord, String> SHORT_NAME = createField("short_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.monster_config.shadow_scale_factor</code>.
	 */
	public final TableField<MonsterConfigRecord, Double> SHADOW_SCALE_FACTOR = createField("shadow_scale_factor", org.jooq.impl.SQLDataType.FLOAT.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_config.base_offensive_skill_id</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> BASE_OFFENSIVE_SKILL_ID = createField("base_offensive_skill_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_config.base_defensive_skill_id</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> BASE_DEFENSIVE_SKILL_ID = createField("base_defensive_skill_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_config.pvp_monster_drop_id</code>.
	 */
	public final TableField<MonsterConfigRecord, Integer> PVP_MONSTER_DROP_ID = createField("pvp_monster_drop_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>mobsters.monster_config</code> table reference
	 */
	public MonsterConfig() {
		this("monster_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.monster_config</code> table reference
	 */
	public MonsterConfig(String alias) {
		this(alias, MONSTER_CONFIG);
	}

	private MonsterConfig(String alias, Table<MonsterConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private MonsterConfig(String alias, Table<MonsterConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MonsterConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MONSTER_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MonsterConfigRecord> getPrimaryKey() {
		return Keys.KEY_MONSTER_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MonsterConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<MonsterConfigRecord>>asList(Keys.KEY_MONSTER_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterConfig as(String alias) {
		return new MonsterConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MonsterConfig rename(String name) {
		return new MonsterConfig(name, null);
	}
}
