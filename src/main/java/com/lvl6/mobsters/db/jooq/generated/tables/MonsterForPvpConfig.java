/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.MonsterForPvpConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MonsterForPvpConfig extends TableImpl<MonsterForPvpConfigRecord> {

	private static final long serialVersionUID = 438089325;

	/**
	 * The reference instance of <code>mobsters.monster_for_pvp_config</code>
	 */
	public static final MonsterForPvpConfig MONSTER_FOR_PVP_CONFIG = new MonsterForPvpConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MonsterForPvpConfigRecord> getRecordType() {
		return MonsterForPvpConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.monster_for_pvp_config.id</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.monster_id</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> MONSTER_ID = createField("monster_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.monster_lvl</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, UByte> MONSTER_LVL = createField("monster_lvl", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.elo</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> ELO = createField("elo", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.min_cash_reward</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> MIN_CASH_REWARD = createField("min_cash_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.max_cash_reward</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> MAX_CASH_REWARD = createField("max_cash_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.min_oil_reward</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> MIN_OIL_REWARD = createField("min_oil_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * The column <code>mobsters.monster_for_pvp_config.max_oil_reward</code>.
	 */
	public final TableField<MonsterForPvpConfigRecord, Integer> MAX_OIL_REWARD = createField("max_oil_reward", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "");

	/**
	 * Create a <code>mobsters.monster_for_pvp_config</code> table reference
	 */
	public MonsterForPvpConfig() {
		this("monster_for_pvp_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.monster_for_pvp_config</code> table reference
	 */
	public MonsterForPvpConfig(String alias) {
		this(alias, MONSTER_FOR_PVP_CONFIG);
	}

	private MonsterForPvpConfig(String alias, Table<MonsterForPvpConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private MonsterForPvpConfig(String alias, Table<MonsterForPvpConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MonsterForPvpConfigRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MONSTER_FOR_PVP_CONFIG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MonsterForPvpConfigRecord> getPrimaryKey() {
		return Keys.KEY_MONSTER_FOR_PVP_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MonsterForPvpConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<MonsterForPvpConfigRecord>>asList(Keys.KEY_MONSTER_FOR_PVP_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MonsterForPvpConfig as(String alias) {
		return new MonsterForPvpConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MonsterForPvpConfig rename(String name) {
		return new MonsterForPvpConfig(name, null);
	}
}
