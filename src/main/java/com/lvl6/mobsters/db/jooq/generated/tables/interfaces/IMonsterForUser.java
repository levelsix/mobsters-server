/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.interfaces;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "monster_for_user", schema = "mobsters")
public interface IMonsterForUser extends Serializable {

	/**
	 * Setter for <code>mobsters.monster_for_user.id</code>.
	 */
	public IMonsterForUser setId(String value);

	/**
	 * Getter for <code>mobsters.monster_for_user.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	public String getId();

	/**
	 * Setter for <code>mobsters.monster_for_user.user_id</code>.
	 */
	public IMonsterForUser setUserId(String value);

	/**
	 * Getter for <code>mobsters.monster_for_user.user_id</code>.
	 */
	@Column(name = "user_id", length = 36)
	@Size(max = 36)
	public String getUserId();

	/**
	 * Setter for <code>mobsters.monster_for_user.monster_id</code>.
	 */
	public IMonsterForUser setMonsterId(UInteger value);

	/**
	 * Getter for <code>mobsters.monster_for_user.monster_id</code>.
	 */
	@Column(name = "monster_id", precision = 10)
	public UInteger getMonsterId();

	/**
	 * Setter for <code>mobsters.monster_for_user.current_experience</code>.
	 */
	public IMonsterForUser setCurrentExperience(UInteger value);

	/**
	 * Getter for <code>mobsters.monster_for_user.current_experience</code>.
	 */
	@Column(name = "current_experience", precision = 10)
	public UInteger getCurrentExperience();

	/**
	 * Setter for <code>mobsters.monster_for_user.current_level</code>.
	 */
	public IMonsterForUser setCurrentLevel(UByte value);

	/**
	 * Getter for <code>mobsters.monster_for_user.current_level</code>.
	 */
	@Column(name = "current_level", precision = 3)
	public UByte getCurrentLevel();

	/**
	 * Setter for <code>mobsters.monster_for_user.current_health</code>.
	 */
	public IMonsterForUser setCurrentHealth(Integer value);

	/**
	 * Getter for <code>mobsters.monster_for_user.current_health</code>.
	 */
	@Column(name = "current_health", precision = 10)
	public Integer getCurrentHealth();

	/**
	 * Setter for <code>mobsters.monster_for_user.num_pieces</code>.
	 */
	public IMonsterForUser setNumPieces(UByte value);

	/**
	 * Getter for <code>mobsters.monster_for_user.num_pieces</code>.
	 */
	@Column(name = "num_pieces", precision = 3)
	public UByte getNumPieces();

	/**
	 * Setter for <code>mobsters.monster_for_user.is_complete</code>.
	 */
	public IMonsterForUser setIsComplete(Boolean value);

	/**
	 * Getter for <code>mobsters.monster_for_user.is_complete</code>.
	 */
	@Column(name = "is_complete", precision = 1)
	public Boolean getIsComplete();

	/**
	 * Setter for <code>mobsters.monster_for_user.combine_start_time</code>.
	 */
	public IMonsterForUser setCombineStartTime(Timestamp value);

	/**
	 * Getter for <code>mobsters.monster_for_user.combine_start_time</code>.
	 */
	@Column(name = "combine_start_time")
	public Timestamp getCombineStartTime();

	/**
	 * Setter for <code>mobsters.monster_for_user.team_slot_num</code>.
	 */
	public IMonsterForUser setTeamSlotNum(UByte value);

	/**
	 * Getter for <code>mobsters.monster_for_user.team_slot_num</code>.
	 */
	@Column(name = "team_slot_num", precision = 3)
	public UByte getTeamSlotNum();

	/**
	 * Setter for <code>mobsters.monster_for_user.source_of_pieces</code>.
	 */
	public IMonsterForUser setSourceOfPieces(String value);

	/**
	 * Getter for <code>mobsters.monster_for_user.source_of_pieces</code>.
	 */
	@Column(name = "source_of_pieces", length = 65535)
	@Size(max = 65535)
	public String getSourceOfPieces();

	/**
	 * Setter for <code>mobsters.monster_for_user.has_all_pieces</code>.
	 */
	public IMonsterForUser setHasAllPieces(Boolean value);

	/**
	 * Getter for <code>mobsters.monster_for_user.has_all_pieces</code>.
	 */
	@Column(name = "has_all_pieces", precision = 1)
	public Boolean getHasAllPieces();

	/**
	 * Setter for <code>mobsters.monster_for_user.restricted</code>.
	 */
	public IMonsterForUser setRestricted(Boolean value);

	/**
	 * Getter for <code>mobsters.monster_for_user.restricted</code>.
	 */
	@Column(name = "restricted", precision = 1)
	public Boolean getRestricted();

	/**
	 * Setter for <code>mobsters.monster_for_user.offensive_skill_id</code>.
	 */
	public IMonsterForUser setOffensiveSkillId(Integer value);

	/**
	 * Getter for <code>mobsters.monster_for_user.offensive_skill_id</code>.
	 */
	@Column(name = "offensive_skill_id", precision = 10)
	public Integer getOffensiveSkillId();

	/**
	 * Setter for <code>mobsters.monster_for_user.defensive_skill_id</code>.
	 */
	public IMonsterForUser setDefensiveSkillId(Integer value);

	/**
	 * Getter for <code>mobsters.monster_for_user.defensive_skill_id</code>.
	 */
	@Column(name = "defensive_skill_id", precision = 10)
	public Integer getDefensiveSkillId();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface IMonsterForUser
	 */
	public void from(com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterForUser from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface IMonsterForUser
	 */
	public <E extends com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMonsterForUser> E into(E into);
}
