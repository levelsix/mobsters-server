/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables;


import com.lvl6.mobsters.db.jooq.generated.Keys;
import com.lvl6.mobsters.db.jooq.generated.Mobsters;
import com.lvl6.mobsters.db.jooq.generated.tables.records.CityConfigRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityConfig extends TableImpl<CityConfigRecord> {

	private static final long serialVersionUID = -139295226;

	/**
	 * The reference instance of <code>mobsters.city_config</code>
	 */
	public static final CityConfig CITY_CONFIG = new CityConfig();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CityConfigRecord> getRecordType() {
		return CityConfigRecord.class;
	}

	/**
	 * The column <code>mobsters.city_config.id</code>.
	 */
	public final TableField<CityConfigRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_config.name</code>.
	 */
	public final TableField<CityConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_config.map_img_name</code>.
	 */
	public final TableField<CityConfigRecord, String> MAP_IMG_NAME = createField("map_img_name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_config.center_xcoord</code>.
	 */
	public final TableField<CityConfigRecord, Double> CENTER_XCOORD = createField("center_xcoord", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_config.center_ycoord</code>.
	 */
	public final TableField<CityConfigRecord, Double> CENTER_YCOORD = createField("center_ycoord", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

	/**
	 * The column <code>mobsters.city_config.road_img_name</code>.
	 */
	public final TableField<CityConfigRecord, String> ROAD_IMG_NAME = createField("road_img_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.city_config.map_tmx_name</code>.
	 */
	public final TableField<CityConfigRecord, String> MAP_TMX_NAME = createField("map_tmx_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mobsters.city_config.road_img_pos_x</code>.
	 */
	public final TableField<CityConfigRecord, Double> ROAD_IMG_POS_X = createField("road_img_pos_x", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>mobsters.city_config.road_img_pos_y</code>.
	 */
	public final TableField<CityConfigRecord, Double> ROAD_IMG_POS_Y = createField("road_img_pos_y", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>mobsters.city_config.attack_map_label_img_name</code>.
	 */
	public final TableField<CityConfigRecord, String> ATTACK_MAP_LABEL_IMG_NAME = createField("attack_map_label_img_name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * Create a <code>mobsters.city_config</code> table reference
	 */
	public CityConfig() {
		this("city_config", null);
	}

	/**
	 * Create an aliased <code>mobsters.city_config</code> table reference
	 */
	public CityConfig(String alias) {
		this(alias, CITY_CONFIG);
	}

	private CityConfig(String alias, Table<CityConfigRecord> aliased) {
		this(alias, aliased, null);
	}

	private CityConfig(String alias, Table<CityConfigRecord> aliased, Field<?>[] parameters) {
		super(alias, Mobsters.MOBSTERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CityConfigRecord> getPrimaryKey() {
		return Keys.KEY_CITY_CONFIG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CityConfigRecord>> getKeys() {
		return Arrays.<UniqueKey<CityConfigRecord>>asList(Keys.KEY_CITY_CONFIG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CityConfig as(String alias) {
		return new CityConfig(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CityConfig rename(String name) {
		return new CityConfig(name, null);
	}
}
