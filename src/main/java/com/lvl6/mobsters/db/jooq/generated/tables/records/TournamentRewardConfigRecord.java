/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.TournamentRewardConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.ITournamentRewardConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record9;
import org.jooq.Row;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "tournament_reward_config", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"id", "min_rank", "max_rank"})
})
public class TournamentRewardConfigRecord extends UpdatableRecordImpl<TournamentRewardConfigRecord> implements Record9<Integer, Integer, Integer, Integer, String, String, Integer, Integer, Integer>, ITournamentRewardConfig {

	private static final long serialVersionUID = -767568862;

	/**
	 * Setter for <code>mobsters.tournament_reward_config.id</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.id</code>.
	 */
	@Column(name = "id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.min_rank</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setMinRank(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.min_rank</code>.
	 */
	@Column(name = "min_rank", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getMinRank() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.max_rank</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setMaxRank(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.max_rank</code>.
	 */
	@Column(name = "max_rank", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getMaxRank() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.gold_rewarded</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setGoldRewarded(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.gold_rewarded</code>.
	 */
	@Column(name = "gold_rewarded", precision = 10)
	@Override
	public Integer getGoldRewarded() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.background_image_name</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setBackgroundImageName(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.background_image_name</code>.
	 */
	@Column(name = "background_image_name", length = 45)
	@Size(max = 45)
	@Override
	public String getBackgroundImageName() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.prize_image_name</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setPrizeImageName(String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.prize_image_name</code>.
	 */
	@Column(name = "prize_image_name", length = 45)
	@Size(max = 45)
	@Override
	public String getPrizeImageName() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.blue</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setBlue(Integer value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.blue</code>.
	 */
	@Column(name = "blue", precision = 10)
	@Override
	public Integer getBlue() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.green</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setGreen(Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.green</code>.
	 */
	@Column(name = "green", precision = 10)
	@Override
	public Integer getGreen() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>mobsters.tournament_reward_config.red</code>.
	 */
	@Override
	public TournamentRewardConfigRecord setRed(Integer value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.tournament_reward_config.red</code>.
	 */
	@Column(name = "red", precision = 10)
	@Override
	public Integer getRed() {
		return (Integer) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<Integer, Integer, Integer> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Integer, Integer, Integer, String, String, Integer, Integer, Integer> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Integer, Integer, Integer, String, String, Integer, Integer, Integer> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.MIN_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.MAX_RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.GOLD_REWARDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.BACKGROUND_IMAGE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.PRIZE_IMAGE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.BLUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.GREEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG.RED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getMinRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getMaxRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getGoldRewarded();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getBackgroundImageName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getPrizeImageName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getBlue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getGreen();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getRed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value2(Integer value) {
		setMinRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value3(Integer value) {
		setMaxRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value4(Integer value) {
		setGoldRewarded(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value5(String value) {
		setBackgroundImageName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value6(String value) {
		setPrizeImageName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value7(Integer value) {
		setBlue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value8(Integer value) {
		setGreen(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord value9(Integer value) {
		setRed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentRewardConfigRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, String value6, Integer value7, Integer value8, Integer value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITournamentRewardConfig from) {
		setId(from.getId());
		setMinRank(from.getMinRank());
		setMaxRank(from.getMaxRank());
		setGoldRewarded(from.getGoldRewarded());
		setBackgroundImageName(from.getBackgroundImageName());
		setPrizeImageName(from.getPrizeImageName());
		setBlue(from.getBlue());
		setGreen(from.getGreen());
		setRed(from.getRed());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITournamentRewardConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TournamentRewardConfigRecord
	 */
	public TournamentRewardConfigRecord() {
		super(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG);
	}

	/**
	 * Create a detached, initialised TournamentRewardConfigRecord
	 */
	public TournamentRewardConfigRecord(Integer id, Integer minRank, Integer maxRank, Integer goldRewarded, String backgroundImageName, String prizeImageName, Integer blue, Integer green, Integer red) {
		super(TournamentRewardConfig.TOURNAMENT_REWARD_CONFIG);

		setValue(0, id);
		setValue(1, minRank);
		setValue(2, maxRank);
		setValue(3, goldRewarded);
		setValue(4, backgroundImageName);
		setValue(5, prizeImageName);
		setValue(6, blue);
		setValue(7, green);
		setValue(8, red);
	}
}
