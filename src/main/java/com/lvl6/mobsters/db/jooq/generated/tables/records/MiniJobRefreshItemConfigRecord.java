/**
 * This class is generated by jOOQ
 */
package com.lvl6.mobsters.db.jooq.generated.tables.records;


import com.lvl6.mobsters.db.jooq.generated.tables.MiniJobRefreshItemConfig;
import com.lvl6.mobsters.db.jooq.generated.tables.interfaces.IMiniJobRefreshItemConfig;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "mini_job_refresh_item_config", schema = "mobsters", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"struct_id", "item_id"})
})
public class MiniJobRefreshItemConfigRecord extends UpdatableRecordImpl<MiniJobRefreshItemConfigRecord> implements Record3<Integer, Integer, Integer>, IMiniJobRefreshItemConfig {

	private static final long serialVersionUID = 232851917;

	/**
	 * Setter for <code>mobsters.mini_job_refresh_item_config.struct_id</code>.
	 */
	@Override
	public MiniJobRefreshItemConfigRecord setStructId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_refresh_item_config.struct_id</code>.
	 */
	@Column(name = "struct_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getStructId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mobsters.mini_job_refresh_item_config.item_id</code>.
	 */
	@Override
	public MiniJobRefreshItemConfigRecord setItemId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_refresh_item_config.item_id</code>.
	 */
	@Column(name = "item_id", nullable = false, precision = 10)
	@NotNull
	@Override
	public Integer getItemId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mobsters.mini_job_refresh_item_config.gem_price</code>.
	 */
	@Override
	public MiniJobRefreshItemConfigRecord setGemPrice(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mobsters.mini_job_refresh_item_config.gem_price</code>.
	 */
	@Column(name = "gem_price", precision = 10)
	@Override
	public Integer getGemPrice() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Integer, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG.STRUCT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG.ITEM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG.GEM_PRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getStructId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getItemId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getGemPrice();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobRefreshItemConfigRecord value1(Integer value) {
		setStructId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobRefreshItemConfigRecord value2(Integer value) {
		setItemId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobRefreshItemConfigRecord value3(Integer value) {
		setGemPrice(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MiniJobRefreshItemConfigRecord values(Integer value1, Integer value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IMiniJobRefreshItemConfig from) {
		setStructId(from.getStructId());
		setItemId(from.getItemId());
		setGemPrice(from.getGemPrice());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IMiniJobRefreshItemConfig> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MiniJobRefreshItemConfigRecord
	 */
	public MiniJobRefreshItemConfigRecord() {
		super(MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG);
	}

	/**
	 * Create a detached, initialised MiniJobRefreshItemConfigRecord
	 */
	public MiniJobRefreshItemConfigRecord(Integer structId, Integer itemId, Integer gemPrice) {
		super(MiniJobRefreshItemConfig.MINI_JOB_REFRESH_ITEM_CONFIG);

		setValue(0, structId);
		setValue(1, itemId);
		setValue(2, gemPrice);
	}
}
