//ALL REQUEST PROTOS SHOULD INCLUDE A MinimumUserProto AS optional that represents which client sent it/triggered it 
//DO NO START PROPERTY METHODS WITH THE WORDS NEW OR COPY

package com.lvl6.proto;

option java_outer_classname = "SkillsProto";
//DO NOT USE ID AS THE NAME OF A PROPERTY IN ANY PROTO


//------------------------------------------------------------------------------------------

message SkillProto {
	optional int32 skillId = 1;
	optional string name = 2;
	optional int32 orbCost = 3;
	
	//this is what separates a grouping of skills from another grouping
	//let's say a grouping of skills groupA is concerned with buffing a monster's attack
	//and another grouping of skills groupB is concerned with dealing a one shot dmg to enemy
	//then groupA and groupB's SkillType 'type' would be different
	optional SkillType type = 4;
	
	//this is whether a skill requires user input to use (user_activated), or
	//the skill is used when a user triggers some number of destruction of orbs (auto_activated), or
	//the skill is always active(?) passive
	optional SkillActivationType activationType = 5;
	
	//the skill that is weaker than this skill in the grouping of skills
	optional int32 predecId = 6;
	
	//the skill that is stronger than this skill in the grouping of skills
	optional int32 sucId = 7;
	
	repeated SkillPropertyProto properties = 8;
	
	//defensive description
	optional string defDesc = 9;
	optional string offDesc = 14;
	
	//optional string iconImgName = 10; defined above
	//Animation shown when skill activates.
	//optional string logoImgName = 11; defined above
	
	optional string imgNamePrefix = 12;
	optional int32 skillEffectDuration = 13;
	//optional string offDesc = 14; defined above
}

//------------------------------------------------------------------------------------------

message SkillPropertyProto {
	optional int32 skillPropertyId = 1;
	optional string name = 2; //TODO: should be an enum later on
	//Do not use the word 'value'
	//this could be a non number like string
	optional float skillValue = 3; 
	
}


enum SkillType {
	NO_SKILL = 1;
	
	CAKE_DROP = 2;
	JELLY = 3;
	QUICK_ATTACK = 4;
	
	BOMBS = 5;
	SHIELD = 6;
	POISON = 7;
	ROID_RAGE = 8; // 2x (or 1.5x) modifier for a next attack.
	MOMENTUM = 9; // single passive offensive: Your damage increases by X% after each successive turn.
	THICK_SKIN = 10;
	CRIT_AND_EVADE = 11;
	SHUFFLE = 12;
	HEADSHOT = 13;
	MUD = 14;
	LIFE_STEAL = 15;
	COUNTER_STRIKE = 16;
	FLAME_STRIKE = 17;
	CONFUSION = 18;
	STATIC_FIELD = 19;
	BLINDING_LIGHT = 20;
	POISON_POWDER = 21;
	SKEWER = 22;
	KNOCKOUT = 23;
	SHALLOW_GRAVE = 24;
	HAMMER_TIME = 25;
	BLOOD_RAGE = 26;
	TAKE_AIM = 27;
	HELL_FIRE = 28;
	ENERGIZE = 29;
	RIGHT_HOOK = 30;
	CURSE = 31;
	INSURANCE = 32;
	FLAME_BREAK = 33;
	POISON_SKEWER = 34;
	POISON_FIRE = 35;
}

enum SkillActivationType {
	USER_ACTIVATED = 1;
	AUTO_ACTIVATED = 2;
	PASSIVE = 3; //think this should be always active
}

//------------------------------------------------------------------------------------------

	//Do not use the word 'value' 
message SkillSideEffectProto {
	optional int32 skillSideEffectId = 1;
	optional string name = 2;
	optional string desc = 3;
	optional SideEffectType type = 4 [default = NO_SIDE_EFFECT];
	optional SideEffectTraitType traitType = 5 [default = NO_TRAIT];
	optional string imgName = 6;
	optional int32 imgPixelOffsetX = 7;
	optional int32 imgPixelOffsetY = 8;
	optional string iconImgName = 9;
	optional string pfxName = 10;
	optional string pfxColor = 11;
	optional SideEffectPositionType positionType = 12 [default = BELOW_CHARACTER];
	optional int32 pfxPixelOffsetX = 13;
	optional int32 pfxPixelOffsetY = 14;
	optional SideEffectBlendMode blendMode = 15 [default = NORMAL_FULL_OPACITY];
	
}

enum SideEffectType {
	NO_SIDE_EFFECT = 1;
	
	NERF_POISON = 2;
	NERF_CURSE = 3;
	NERF_STUN = 4;
	NERF_CONFUSION = 5;
	NERF_BLINDING_LIGHT = 6;
	NERF_BLOOD_RAGE = 7;
	BUFF_MOMENTUM = 8;
	BUFF_THICK_SKIN = 9;
	BUFF_DRUNKEN_BRAWL = 10;
	BUFF_CRITICAL_STRIKE = 11;
	BUFF_EVADE = 12;
	BUFF_STATIC_FIELD = 13;
	BUFF_COUNTER_STRIKE = 14;
	BUFF_ROID_RAGE = 15;
	BUFF_SHALLOW_GRAVE = 16;
	BUFF_ENERGIZE = 17;
	BUFF_INSURANCE = 18;
	
}
enum SideEffectTraitType {
	NO_TRAIT = 1;
	
	BUFF = 2;
	NERF = 3;
}
enum SideEffectPositionType {
	BELOW_CHARACTER = 1;
	ABOVE_CHARACTER = 2;
}
enum SideEffectBlendMode {
	NORMAL_FULL_OPACITY = 1;
}
