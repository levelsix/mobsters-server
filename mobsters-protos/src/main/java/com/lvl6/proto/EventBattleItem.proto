//ALL REQUEST PROTOS SHOULD INCLUDE A MinimumUserProto AS optional that represents which client sent it/triggered it 
//DO NO START PROPERTY METHODS WITH THE WORDS NEW OR COPY

import "BattleItem.proto";
import "SharedEnumConfig.proto";
import "User.proto";

package com.lvl6.proto;

option java_outer_classname = "EventBattleItemProto";
//DO NOT USE ID AS THE NAME OF A PROPERTY IN ANY PROTO

message CreateBattleItemRequestProto {
	optional MinimumUserProtoWithMaxResources sender = 1;
	
	//what user deleted from the queue, the ones the server already knows about
	repeated BattleItemQueueForUserProto biqfuDelete = 2; 
	
	//the ones the server already knows about
	//only set if the queue time or start time changes
	repeated BattleItemQueueForUserProto biqfuUpdate = 3;
	
	//the ones the server doesn't know about
	repeated BattleItemQueueForUserProto biqfuNew = 4;
	
	//take away all cash/silver then take away gems
	//positive means refund, negative means charge user
	//Refund in this case: user has two monsters healing but deletes one of them,
	//The user should get refunded for the monster that was dequeued 
	optional sint32 cashChange = 5; 
	optional sint32 oilChange = 6;
	
	//positive amount if charging user, negative if refunding user
	optional int32 gemCostForCreating = 7; 
	
}

message CreateBattleItemResponseProto {
	optional MinimumUserProto sender = 1;
	repeated UserBattleItemProto userBattleItems = 2;
	optional ResponseStatus status = 3;
	

}

//------------------------------------------------------------------------------------------

message CompleteBattleItemRequestProto {
	optional MinimumUserProto sender = 1;
	optional bool isSpeedup = 2;
	optional int32 gemsForSpeedup = 3; //pos amount if charging user
	
	//the battle items that are completed
	repeated BattleItemQueueForUserProto biqfuCompleted = 4;
}

message CompleteBattleItemResponseProto {
	optional MinimumUserProto sender = 1;
	optional ResponseStatus status = 2;
	
	//total battle items: total amount for the ones that finished
	repeated UserBattleItemProto ubiUpdated = 3;
	
}

//------------------------------------------------------------------------------------------

message DiscardBattleItemRequestProto {
	optional MinimumUserProto sender = 1;
	
	//user can choose to throw away existing battle items so he has the 
	//"power" to create different ones
	repeated int32 discardedBattleItemIds = 2;

}

message DiscardBattleItemResponseProto {
	optional MinimumUserProto sender = 1;
	optional ResponseStatus status = 2;
	
}	


